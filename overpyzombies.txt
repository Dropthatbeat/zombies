variables {
    global:
        2: C
        4: E
        10: K
        12: M
        13: powerconnected
        14: O
        15: P
        16: Q
        17: R
        18: Died
        19: T
        21: Vectordoorpositions
        24: Y
        25: Z
        26: doors
        27: impulseDoorArray
        36: hero
        43: buyheros
        44: buyperks
        46: doorradius
        47: mysterylocations
        48: rngbox
        50: rngbox2
        52: Mysterylocations2
        53: omnicspawn
        54: bossSpawn
        55: bot1spawn
        56: bot2spawn
        60: setspawn
        61: aprilquotes
        65: Beameffectdoors
        71: heroradius
        72: diedradius
        73: tipstrings
        74: bossbuypositions
        75: herobuyrandomized
        76: perkbuyrandomized
        78: romanN
        80: teleportercolor
        82: forindex
        83: forindex2
        84: zzz
        85: diedphrase
        86: diedtext
        87: firstpos
        88: secondpos
        89: firstpoint2
        90: AllPos
        91: AllDir
        92: secondpoint2
        93: decompressed
        94: compressedData
        95: i
        96: scratch
        97: param0
        98: param1
        99: param2
        100: colors
        101: numbers
        102: param3
        103: param4
        104: charIndex
        105: doorscompresser
        106: second
        107: z
        108: Wall_ID
        109: g_beamType
        110: is_Grounded
        111: teleradiusef
        112: heroiconstring
        113: indexofbosseffect
        115: extraVar
    player:
        0: points
        1: B
        2: C
        3: magazines
        5: F
        6: G
        7: H
        13: InfoUI
        15: P
        18: S
        19: T
        33: UI
        36: idlebot
        38: healovertime
        39: xp
        40: Movement
        41: Head_HP
        42: Part
        43: Part2
        44: Speed
        45: doorimpulse
        46: dispencereffect
        47: xparray
        49: herohp
        51: currentheroxp
        52: doormessage
        53: currentdoor
        55: Major_Attacks
        56: currentdoorIndex
        57: do
        58: doorresponse
        59: heroswap
        60: currentswap
        61: perkinfo
        62: Perkui
        63: currentmagazines
        64: currentultcharge
        65: ultcharge
        66: heroiconswap
        67: abilitycooldown
        68: followerbuy
        69: swapvar
        70: filterpos
        71: lastsavedpos
        72: closestbodypos
        73: fullbodypos
        74: prevpos_intersection
        75: active_wall
        76: closestwall
        77: x_
        78: intersection_length
        79: thickness
        80: emotebox
        81: swap
        82: heropoints
        83: extraPlayerVar
}
subroutines {
    0: herobuy1250
    2: herobuy1750
    3: doorimpulse
    4: wavespawn
    5: followerattack1
    6: followerattack2
    7: perkbuyanimation
    8: followerbuy
    9: heroswap
    10: PaPsound
    11: ParseNumber
    12: DecompressString
}
rule ("68 player joined invincible") {
    event {
        Player Joined Match;
        Team 1;
        All;
    }
    conditions {
        Has Spawned(Event Player) == True;
    }
    actions {
        Set Status(Event Player, Null, Phased Out, 30);
    }
}

rule ("120  Remove bots when players join") {
    event {
        Ongoing - Global;
    }
    actions {
        "simplify and test this more to see how much is needed with anti crash enabled"
        If(Compare(Number Of Players(Team 1), ==, 2));
            "need a for loop"
            Destroy Dummy Bot(Team 2, 17);
            Destroy Dummy Bot(Team 2, 16);
            Destroy Dummy Bot(Team 2, 15);
            Destroy Dummy Bot(Team 2, 14);
        Else If(Compare(Number Of Players(Team 1), ==, 3));
            Destroy Dummy Bot(Team 2, 17);
            Destroy Dummy Bot(Team 2, 16);
            Destroy Dummy Bot(Team 2, 15);
            Destroy Dummy Bot(Team 2, 14);
            Destroy Dummy Bot(Team 2, 13);
            Destroy Dummy Bot(Team 2, 12);
            Destroy Dummy Bot(Team 2, 11);
            Destroy Dummy Bot(Team 2, 10);
        Else If(Compare(Number Of Players(Team 1), ==, 4));
            Destroy Dummy Bot(Team 2, 17);
            Destroy Dummy Bot(Team 2, 16);
            Destroy Dummy Bot(Team 2, 15);
            Destroy Dummy Bot(Team 2, 14);
            Destroy Dummy Bot(Team 2, 13);
            Destroy Dummy Bot(Team 2, 12);
            Destroy Dummy Bot(Team 2, 11);
            Destroy Dummy Bot(Team 2, 10);
            Destroy Dummy Bot(Team 2, 9);
            Destroy Dummy Bot(Team 2, 8);
    }
}

rule ("426 OMNIC WAVE BOSS doomfist Attack if Near") {
    event {
        Ongoing - Each Player;
        Team 2;
        Doomfist;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) < 2;
    }
    actions {
        "@Condition O == false"
        Wait(0.3, Abort When False);
        Press Button(Event Player, Button(Melee));
        Loop If Condition Is True;
    }
}

rule ("427 OMNIC WAVE BOSS doomfist Attack if Near") {
    event {
        Ongoing - Each Player;
        Team 2;
        Doomfist;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) < 15;
        Global.O == False;
    }
    actions {
        Wait(0.3, Abort When False);
        Start Holding Button(Event Player, Button(Secondary Fire));
    }
}

rule ("428 OMNIC WAVE BOSS doomfist Attack if Near") {
    event {
        Ongoing - Each Player;
        Team 2;
        Doomfist;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) < 10;
        Global.O == False;
    }
    actions {
        Wait(0.3, Abort When False);
        Press Button(Event Player, Button(Ability 1));
    }
}

rule ("429 OMNIC WAVE BOSS zenyatta Attack if Near") {
    event {
        Ongoing - Each Player;
        Team 2;
        Zenyatta;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) < 2;
    }
    actions {
        "@Condition O == false"
        Wait(0.3, Abort When False);
        Press Button(Event Player, Button(Melee));
        Loop If Condition Is True;
    }
}

rule ("430 OMNIC WAVE BOSS zenyatta stay crouched") {
    event {
        Ongoing - Each Player;
        Team 2;
        Zenyatta;
    }
    conditions {
        Has Spawned(Event Player) == True;
    }
    actions {
        Wait(0.25, Ignore Condition);
        Start Holding Button(Event Player, Button(Crouch));
        Set Ultimate Charge(Event Player, 100);
    }
}

rule ("431 OMNIC WAVE BOSS zenyatta give ult halfl health") {
    event {
        Ongoing - Each Player;
        Team 2;
        Zenyatta;
    }
    conditions {
        Normalized Health(Event Player) <= 0.5;
    }
    actions {
        Press Button(Event Player, Button(Ultimate));
    }
}

rule ("432 OMNIC WAVE BOSS zenyatta discord if Near") {
    event {
        Ongoing - Each Player;
        Team 2;
        Zenyatta;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) < 10;
    }
    actions {
        "@Condition O == false"
        Wait(0.3, Abort When False);
        Press Button(Event Player, Button(Ability 2));
    }
}

rule ("433 OMNIC WAVE BOSS roadhog use hook") {
    event {
        Ongoing - Each Player;
        Team 2;
        Roadhog;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) < 20;
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) > 10;
        Slot Of(Event Player) == Players In Slot(0, Team 2);
    }
    actions {
        Press Button(Event Player, Button(Ability 2));
        Wait(1, Ignore Condition);
        Press Button(Event Player, Button(Ability 1));
        Wait(15, Ignore Condition);
    }
}

rule ("434 OMNIC WAVE BOSS roadhog use heal") {
    event {
        Ongoing - Each Player;
        Team 2;
        Roadhog;
    }
    conditions {
        Normalized Health(Event Player) <= 0.5;
    }
    actions {
        Start Holding Button(Event Player, Button(Secondary Fire));
        Wait(3, Ignore Condition);
        Stop Holding Button(Event Player, Button(Secondary Fire));
    }
}

rule ("516 rounds add points and XP") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        First Of(Global.extraVar) >= 1;
        Workshop Setting Toggle(Custom String("difficulty"), Custom String("Each round adds XP and points in co-op"), True, 0) == True;
    }
    actions {
        "modify these to scale based off difficulty"
        Modify Player Variable(Event Player, xp, Add, 30);
        "if getNumberOfPlayers(Team.1) > 2:"
        Modify Player Variable(Event Player, points, Add, 500);
    }
}

rule ("517 set xp to hero") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Alive(Event Player) == True;
    }
    actions {
        "not working currently"
        If(Compare(Hero Of(Event Player), ==, Hero(D.Va)));
            Set Player Variable(Event Player, currentheroxp, False);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Doomfist)));
            Set Player Variable(Event Player, currentheroxp, 1);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Junker Queen)));
            Set Player Variable(Event Player, currentheroxp, 2);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Ana)));
            Set Player Variable(Event Player, currentheroxp, 3);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Orisa)));
            Set Player Variable(Event Player, currentheroxp, 4);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Ramattra)));
            Set Player Variable(Event Player, currentheroxp, 5);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Reinhardt)));
            Set Player Variable(Event Player, currentheroxp, 6);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Roadhog)));
            Set Player Variable(Event Player, currentheroxp, 7);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Sigma)));
            Set Player Variable(Event Player, currentheroxp, 8);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Winston)));
            Set Player Variable(Event Player, currentheroxp, 9);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Wrecking Ball)));
            Set Player Variable(Event Player, currentheroxp, 10);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Zarya)));
            Set Player Variable(Event Player, currentheroxp, 11);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Ashe)));
            Set Player Variable(Event Player, currentheroxp, 12);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Bastion)));
            Set Player Variable(Event Player, currentheroxp, 13);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Cassidy)));
            Set Player Variable(Event Player, currentheroxp, 14);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Echo)));
            Set Player Variable(Event Player, currentheroxp, 15);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Genji)));
            Set Player Variable(Event Player, currentheroxp, 16);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Hanzo)));
            Set Player Variable(Event Player, currentheroxp, 17);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Junkrat)));
            Set Player Variable(Event Player, currentheroxp, 18);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Mei)));
            Set Player Variable(Event Player, currentheroxp, 19);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Pharah)));
            Set Player Variable(Event Player, currentheroxp, 20);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Reaper)));
            Set Player Variable(Event Player, currentheroxp, 21);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Sojourn)));
            Set Player Variable(Event Player, currentheroxp, 22);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Soldier: 76)));
            Set Player Variable(Event Player, currentheroxp, 23);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Sombra)));
            Set Player Variable(Event Player, currentheroxp, 24);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Symmetra)));
            Set Player Variable(Event Player, currentheroxp, 25);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Torbjörn)));
            Set Player Variable(Event Player, currentheroxp, 26);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Widowmaker)));
            Set Player Variable(Event Player, currentheroxp, 27);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Baptiste)));
            Set Player Variable(Event Player, currentheroxp, 28);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Brigitte)));
            Set Player Variable(Event Player, currentheroxp, 29);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Kiriko)));
            Set Player Variable(Event Player, currentheroxp, 30);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Lúcio)));
            Set Player Variable(Event Player, currentheroxp, 31);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Mercy)));
            Set Player Variable(Event Player, currentheroxp, 32);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Moira)));
            Set Player Variable(Event Player, currentheroxp, 33);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Zenyatta)));
            Set Player Variable(Event Player, currentheroxp, 34);
    }
}

rule ("512 gain level") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        Value In Array((Event Player).xp, (Event Player).currentheroxp) >= 100;
        Value In Array(Global.extraVar, 14) == True;
    }
    actions {
        Set Player Variable At Index(Event Player, extraPlayerVar, 9, Append To Array(Append To Array(Array Slice(Value In Array((Event Player).extraPlayerVar, 9), 0, (Event Player).currentheroxp), Array(Add(Value In Array(Value In Array((Event Player).extraPlayerVar, 9), (Event Player).currentheroxp), 1))), Array Slice(Value In Array((Event Player).extraPlayerVar, 9), Add((Event Player).currentheroxp, 1), 999999999999)));
        Set Player Variable At Index(Event Player, xp, (Event Player).currentheroxp, False);
    }
}

rule ("513 Rule 321 lvl gain stat changes") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Value In Array(Global.extraVar, 14) == True;
    }
    actions {
        If(Compare(Value In Array((Event Player).extraPlayerVar, 9), ==, 5));
            Set Ability 1 Enabled(Event Player, True);
        Else If(Compare(Value In Array((Event Player).extraPlayerVar, 9), ==, 10));
            Set Ability 2 Enabled(Event Player, True);
        Else If(Compare(Value In Array((Event Player).extraPlayerVar, 9), ==, 15));
            Set Ultimate Ability Enabled(Event Player, True);
    }
}

disabled rule ("350 hanzo ammo cancel (wip)") {
    event {
        Ongoing - Each Player;
        All;
        Hanzo;
    }
    conditions {
        Is Button Held(Event Player, Button(Primary Fire)) == True;
        Is Button Held(Event Player, Button(Secondary Fire)) == True;
    }
    actions {
        Wait(0.1, Abort When False);
        If(Compare(Value In Array((Event Player).extraPlayerVar, 1), ==, False));
            Modify Player Variable(Event Player, magazines, Add, 0.25);
        Else If(Compare(Value In Array((Event Player).extraPlayerVar, 1), ==, 1));
            Modify Player Variable(Event Player, magazines, Add, 0.125);
    }
}

rule ("132  rien out of ammo") {
    event {
        Ongoing - Each Player;
        Team 1;
        Reinhardt;
    }
    conditions {
        (Event Player).currentmagazines <= 0;
        Is Using Ability 2(Event Player) == True;
    }
    actions {
        Disallow Button(Event Player, Button(Ability 2));
        Wait(15, Ignore Condition);
        Allow Button(Event Player, Button(Ability 2));
    }
}

rule ("112  hanzo ammo") {
    event {
        Ongoing - Each Player;
        Team 1;
        Hanzo;
    }
    conditions {
        Is Firing Primary(Event Player) == True;
        Value In Array((Event Player).extraPlayerVar, 1) == False;
    }
    actions {
        Modify Player Variable(Event Player, currentmagazines, Subtract, 0.25);
    }
}

rule ("anticrash (not truely enjoyed by most developers but not too noticable for most players)") {
    event {
        Ongoing - Global;
    }
    conditions {
        Server Load >= 200;
    }
    actions {
        Set Slow Motion(Add(70, Divide(Multiply(30, Subtract(255, Server Load)), 255)));
    }
}

rule ("anticrash") {
    event {
        Ongoing - Global;
    }
    conditions {
        Server Load < 200;
    }
    actions {
        Set Slow Motion(100);
    }
}

disabled rule ("148 Remove bots ANTI CRASH") {
    event {
        Ongoing - Global;
    }
    conditions {
        Server Load Average >= 240;
    }
    actions {
        Destroy Dummy Bot(Team 2, 17);
        Wait(0.25, Abort When False);
        Destroy Dummy Bot(Team 2, 16);
        Wait(0.25, Abort When False);
        Destroy Dummy Bot(Team 2, 15);
        Wait(0.25, Abort When False);
        Destroy Dummy Bot(Team 2, 14);
        Wait(0.25, Abort When False);
        Destroy Dummy Bot(Team 2, 13);
        Wait(0.25, Abort When False);
        Destroy Dummy Bot(Team 2, 12);
        Wait(0.25, Abort When False);
        Destroy Dummy Bot(Team 2, 11);
        Wait(0.25, Abort When False);
        Destroy Dummy Bot(Team 2, 10);
        Wait(0.25, Abort When False);
        Destroy Dummy Bot(Team 2, 9);
        Wait(0.25, Abort When False);
        Destroy Dummy Bot(Team 2, 8);
        Wait(0.25, Abort When False);
        Destroy Dummy Bot(Team 2, 7);
        Wait(0.25, Abort When False);
        Destroy Dummy Bot(Team 2, 6);
    }
}

disabled rule ("use interact to give pack a punch (Dev testing)") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        Is Button Held(Event Player, Button(Interact)) == True;
    }
    actions {
        Set Player Variable At Index(Event Player, extraPlayerVar, 12, 1);
    }
}

rule ("172 FOLLOWERS  winston Omnic bomb") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Communicating(Event Player, Ultimate Status) == True;
        "variable conflict with boss' need fix later"
        (Event Player).Movement == 1;
        (Event Player).Head_HP > 0;
    }
    actions {
        Create Dummy Bot(Hero(Winston), Team 1, 6, Eye Position(Event Player), Vector(0, 0, 0));
        Wait(0.03, Ignore Condition);
        Modify Player Variable(Event Player, Head_HP, Subtract, 1);
        Set Player Variable(Event Player, T, 1);
        Attach Players(Players In Slot(6, Team 1), Event Player, Vector(0, 0, 2));
        Start Scaling Player(Players In Slot(6, Team 1), 0.2, True);
        Start Modifying Hero Voice Lines(Players In Slot(6, Team 1), 1.3, True);
        Wait(1, Ignore Condition);
        Detach Players(Players In Slot(6, Team 1));
        Wait(0.2, Ignore Condition);
        Press Button(Players In Slot(6, Team 1), Button(Jump));
        Apply Impulse(Players In Slot(6, Team 1), Vector Towards(Event Player, Players In Slot(6, Team 1)), 25, To World, Cancel Contrary Motion);
        Create Effect(All Players(All Teams), Bad Aura, Color(Orange), Players In Slot(6, Team 1), 0.5, Visible To Position and Radius);
        Wait(2, Ignore Condition);
        Communicate(Players In Slot(6, Team 1), Countdown);
        Wait(4, Ignore Condition);
        Damage(Players Within Radius(Players In Slot(6, All Teams), 2, Team 2, Surfaces And All Barriers), Event Player, 100);
        Damage(Players Within Radius(Players In Slot(6, All Teams), 4, Team 2, Surfaces And All Barriers), Event Player, 50);
        Play Effect(All Players(All Teams), Doomfist Meteor Strike Impact Effect, Color(White), Event Player, 1);
        Wait(0.5, Ignore Condition);
        Communicate(Players In Slot(6, Team 1), Goodbye);
        Destroy Effect(Last Created Entity);
        Wait(0.5, Ignore Condition);
        Destroy Dummy Bot(Team 1, 6);
        Set Player Variable(Event Player, T, False);
    }
}

rule ("352 FOLLOWERS attack All") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 2)) < 6;
        Is Dummy Bot(Event Player) == True;
    }
    actions {
        "needs to be a variable"
        Skip(1);
        Call Subroutine(followerattack1);
        //lbl_0:
        Skip(1);
        Call Subroutine(followerattack2);
        //lbl_1:
        Skip(1);
        Press Button(Event Player, Button(Ability 2));
        //lbl_2:
        Wait(6, Ignore Condition);
        Loop If Condition Is True;
        Skip(1);
        Call Subroutine(followerattack2);
        //lbl_3:
        Skip(1);
        Start Holding Button(Event Player, Button(Secondary Fire));
        //lbl_4:
        Wait(1, Ignore Condition);
        Stop Holding Button(Event Player, Button(Secondary Fire));
        Wait(6, Ignore Condition);
        Loop If Condition Is True;
        Skip(1);
        Start Holding Button(Event Player, Button(Primary Fire));
        //lbl_5:
        Wait(1, Ignore Condition);
        Press Button(Event Player, Button(Secondary Fire));
        Stop Holding Button(Event Player, Button(Primary Fire));
        Wait(6, Ignore Condition);
        Loop If Condition Is True;
        Skip(1);
        Press Button(Event Player, Button(Ability 1));
        //lbl_6:
        Wait(6, Ignore Condition);
        Loop If Condition Is True;
    }
}

rule ("391 FOLLOWERS attack subroutine 1") {
    event {
        Subroutine;
        followerattack1;
    }
    actions {
        Start Holding Button(Event Player, Button(Primary Fire));
        Wait(1, Ignore Condition);
        Stop Holding Button(Event Player, Button(Primary Fire));
        Wait(6, Ignore Condition);
        Loop If Condition Is True;
    }
}

rule ("392 FOLLOWERS attack subroutine 2") {
    event {
        Subroutine;
        followerattack2;
    }
    actions {
        Press Button(Event Player, Button(Primary Fire));
        Wait(6, Ignore Condition);
        Loop If Condition Is True;
    }
}

rule ("202 Purchase Follower action") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Button Held(Event Player, Button(Reload)) == True;
        "is heroradius variable needed?"
        Is True For Any(Global.herobuyrandomized, Compare(Distance Between(Current Array Element, Event Player), <, Value In Array(Global.heroradius, Current Array Index))) == True;
    }
    actions {
        "can be simplified further to be a total subroutine for each"
        Wait(1, Abort When False);
        "lucio"
        If(Compare(Distance Between(Event Player, First Of(Global.herobuyrandomized)), <, 2));
            If(Compare((Event Player).points, >=, 1000));
                Set Player Variable(Event Player, followerbuy, Hero(Lúcio));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1000);
            Else If(Compare((Event Player).points, <, 1000));
                Small Message(Event Player, Custom String("  {0} The beat drops, but the wallet doesn't.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 1)), <, 2));
            If(Compare((Event Player).points, >=, 1250));
                Set Player Variable(Event Player, followerbuy, Hero(Hanzo));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1250);
            Else If(Compare((Event Player).points, <, 1250));
                Small Message(Event Player, Custom String("  {0}You require more points to fuel the dragon's fury.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 2)), <, 2));
            If(Compare((Event Player).points, >=, 1000));
                Set Player Variable(Event Player, followerbuy, Hero(Zenyatta));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1000);
            Else If(Compare((Event Player).points, <, 1000));
                Small Message(Event Player, Custom String("  {0} your emptiness hinders our path to enlightenment.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 3)), <, 2));
            If(Compare((Event Player).points, >=, 1000));
                Set Player Variable(Event Player, followerbuy, Hero(Soldier: 76));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1000);
            Else If(Compare((Event Player).points, <, 1000));
                Small Message(Event Player, Custom String("  {0} Your mission requires adequate funding, soldier.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 4)), <, 2));
            If(Compare((Event Player).points, >=, 1000));
                Set Player Variable(Event Player, followerbuy, Hero(Mercy));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1000);
            Else If(Compare((Event Player).points, <, 1000));
                Small Message(Event Player, Custom String("  {0} Your reserves are depleted, angel.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 5)), <, 2));
            If(Compare((Event Player).points, >=, 1000));
                Set Player Variable(Event Player, followerbuy, Hero(Pharah));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1000);
            Else If(Compare((Event Player).points, <, 1000));
                Small Message(Event Player, Custom String("  {0} Refuel the jetpack with more points, commander.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 6)), <, 2));
            If(Compare((Event Player).points, >=, 1000));
                Set Player Variable(Event Player, followerbuy, Hero(Junkrat));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1000);
            Else If(Compare((Event Player).points, <, 1000));
                Small Message(Event Player, Custom String("  {0} Your explosive plans require more points.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 7)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Set Player Variable(Event Player, followerbuy, Hero(Symmetra));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} Allocate more points for the realization of this vision.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 8)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Set Player Variable(Event Player, followerbuy, Hero(Doomfist));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} Our path to dominance is blocked by insufficient funds.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 9)), <, 2));
            If(Compare((Event Player).points, >=, 1250));
                Set Player Variable(Event Player, followerbuy, Hero(Baptiste));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1250);
            Else If(Compare((Event Player).points, <, 1250));
                Small Message(Event Player, Custom String("  {0} To heal and protect, we require sustenance.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 10)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Set Player Variable(Event Player, followerbuy, Hero(Bastion));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} Boop beep boop?", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 11)), <, 2));
            If(Compare((Event Player).points, >=, 1000));
                Set Player Variable(Event Player, followerbuy, Hero(Reaper));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1000);
            Else If(Compare((Event Player).points, <, 1000));
                Small Message(Event Player, Custom String("  {0} Feed this darkness with more points.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 12)), <, 2));
            If(Compare((Event Player).points, >=, 1250));
                Set Player Variable(Event Player, followerbuy, Hero(Genji));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1250);
            Else If(Compare((Event Player).points, <, 1250));
                Small Message(Event Player, Custom String("  {0} Your spirit is strong, but your balance is weak. Seek points.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 13)), <, 2));
            If(Compare((Event Player).points, >=, 1250));
                Set Player Variable(Event Player, followerbuy, Hero(Ashe));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1250);
            Else If(Compare((Event Player).points, <, 1250));
                Small Message(Event Player, Custom String("  {0} This heist requires more capital, partner.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 14)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Set Player Variable(Event Player, followerbuy, Hero(Zarya));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} Acquire more points to fuel your power.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 15)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Set Player Variable(Event Player, followerbuy, Hero(Roadhog));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} No scrap metal without points, you know?", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 16)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Set Player Variable(Event Player, followerbuy, Hero(D.Va));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0}  More points, or it's game over!", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 17)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Set Player Variable(Event Player, followerbuy, Hero(Brigitte));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} Father would be disappointed.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 18)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Set Player Variable(Event Player, followerbuy, Hero(Reinhardt));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} Beer!", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 19)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Set Player Variable(Event Player, followerbuy, Hero(Torbjörn));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} My forge runs cold without fuel", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 20)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Set Player Variable(Event Player, followerbuy, Hero(Sigma));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} Our gravitational experiments require additional energy.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 21)), <, 2));
            If(Compare((Event Player).points, >=, 1250));
                Set Player Variable(Event Player, followerbuy, Hero(Orisa));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1250);
            Else If(Compare((Event Player).points, <, 1250));
                Small Message(Event Player, Custom String("  {0} Your systems require upgrades.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 22)), <, 2));
            If(Compare((Event Player).points, >=, 1250));
                Set Player Variable(Event Player, followerbuy, Hero(Moira));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 1250);
            Else If(Compare((Event Player).points, <, 1250));
                Small Message(Event Player, Custom String("  {0} Acquire more points for scientific advancement.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 23)), <, 2));
            If(Compare((Event Player).points, >=, 30000));
                Set Player Variable(Event Player, followerbuy, Hero(Mei));
                Wait(0.016, Ignore Condition);
                Call Subroutine(followerbuy);
                Modify Player Variable(Event Player, points, Subtract, 30000);
            Else If(Compare((Event Player).points, <, 30000));
                Small Message(Event Player, Custom String("  {0} My experiments require more cryogenic energy.", Hero Icon String(Hero(Ramattra))));
    }
}

rule ("241  follower mystery box") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Button Held(Event Player, Button(Interact)) == True;
        Distance Between(Event Player, Global.rngbox2) <= 2;
        (Event Player).points >= 950;
    }
    actions {
        If(Compare((Event Player).points, >, 950));
            If(Compare((Event Player).emotebox, <, 1));
                Set Player Variable(Event Player, emotebox, 1);
                Communicate(Event Player, Emote Up);
            End;
            Destroy Dummy Bot(Team 1, Add(Slot Of(Event Player), 4));
            Wait(0.25, Ignore Condition);
            Create Dummy Bot(Random Value In Array(All Heroes), Team 1, Add(Slot Of(Event Player), 4), Vector(0, 0, 0), Vector(0, 0, 0));
            Wait(0.03, Ignore Condition);
            Attach Players(Add(Slot Of(Event Player), 4), Event Player, Vector(-0.5, 1.8, -0.2));
            Wait(0.1, Ignore Condition);
            Start Scaling Player(Add(Slot Of(Event Player), 4), 0.2, True);
            Start Modifying Hero Voice Lines(Add(Slot Of(Event Player), 4), 1.3, True);
            Modify Player Variable(Event Player, points, Subtract, 950);
            "if ruleCondition:\nloop()"
            Set Player Variable(Event Player, magazines, 10);
            //lbl_0:
            Modify Global Variable At Index(extraVar, 19, Add, 1);
            Wait(1, Ignore Condition);
            Skip If(Compare(Value In Array(Global.extraVar, 19), <, Random Integer(6, 10)), 2);
            Set Global Variable(rngbox2, Random Value In Array(Global.Mysterylocations2));
            Set Global Variable At Index(extraVar, 19, False);
            //lbl_1:
        Else If(Compare((Event Player).points, <, 950));
            Big Message(Event Player, Custom String("Come back when you've got some money buddy!"));
    }
}

rule ("351 followers ult") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 2)) < 8;
        Is Dummy Bot(Event Player) == True;
        Ultimate Charge Percent(Event Player) == 100;
        Hero Of(Event Player) != Hero(Reinhardt);
        Hero Of(Event Player) != Hero(Bastion);
    }
    actions {
        Press Button(Event Player, Button(Ultimate));
        Wait(0.25, Ignore Condition);
        Start Holding Button(Event Player, Button(Primary Fire));
        Wait(6, Ignore Condition);
        Stop Holding Button(Event Player, Button(Primary Fire));
    }
}

rule ("2 round change") {
    event {
        Ongoing - Global;
    }
    conditions {
        Value In Array(Global.extraVar, 1) <= 0;
        Global.O == False;
        Value In Array(Global.extraVar, 3) == 1;
    }
    actions {
        For Global Variable(forindex, 0, Count Of(Global.omnicspawn), 1);
            Destroy Dummy Bot(Team 2, Value In Array(Global.omnicspawn, Global.forindex));
        End;
        Modify Global Variable At Index(extraVar, 0, Add, 1);
        Set Global Variable(Z, 1);
        Set Ultimate Charge(All Players(Team 1), 100);
        Big Message(All Players(All Teams), String("Round {0}", Value In Array(Global.romanN, Value In Array(Global.extraVar, 27))));
        Set Global Variable(P, False);
        Set Player Variable At Index(All Dead Players(Team 1), extraPlayerVar, 12, False);
        Clear Status(All Dead Players(Team 1), Burning);
        Set Player Variable At Index(All Dead Players(Team 1), extraPlayerVar, 4, 100);
        Teleport(All Dead Players(Team 1), Nearest Walkable Position(Add(Random Value In Array(All Living Players(Team 1)), Vector(Random Integer(-5, 5), 0, Random Integer(-5, 5)))));
        Start Forcing Player To Be Hero(All Dead Players(Team 1), Hero(Cassidy));
        Resurrect(All Dead Players(Team 1));
        "set a loop"
        Set Global Variable At Index(Died, 0, Vector(500, 0, 500));
        Set Global Variable At Index(Died, 1, Vector(500, 0, 500));
        Set Global Variable At Index(Died, 2, Vector(500, 0, 500));
        Set Global Variable At Index(Died, 3, Vector(500, 0, 500));
        "can set these to false"
        Set Player Variable At Index(All Players(Team 1), extraPlayerVar, 6, False);
        Set Player Variable(All Players(Team 1), P, False);
        Set Player Variable At Index(All Players(Team 1), extraPlayerVar, 7, False);
        Set Player Variable At Index(All Players(Team 1), extraPlayerVar, 8, False);
        Set Status(All Living Players(Team 1), Null, Phased Out, 2);
        Set Player Variable(All Players(Team 1), Head_HP, 3);
        Modify Global Variable At Index(extraVar, 21, Add, 1);
        Skip If(Compare(First Of(Global.extraVar), >, 10), 1);
        Modify Global Variable At Index(extraVar, 27, Add, 1);
        //lbl_0:
        Set Player Variable At Index(All Players(Team 1), ultcharge, 0, 100);
        Set Player Variable At Index(All Players(Team 1), ultcharge, 1, 100);
    }
}

rule ("3 Set Round Kills") {
    event {
        Ongoing - Global;
    }
    conditions {
        Global.Z == 1;
        Global.O == False;
    }
    actions {
        "modify this based on difficulty"
        If(Compare(First Of(Global.extraVar), <=, 12));
            Set Global Variable At Index(extraVar, 1, Add(12, Multiply(First Of(Global.extraVar), 2)));
            Wait(1, Ignore Condition);
            Set Global Variable(Z, False);
        Else If(Compare(First Of(Global.extraVar), >=, 13));
            Set Global Variable At Index(extraVar, 1, Workshop Setting Integer(Custom String("difficulty"), Custom String("max zombies per wave"), 72, 8, 100, 0));
            Wait(1, Ignore Condition);
            Set Global Variable(Z, False);
    }
}

rule ("5 Time manager") {
    event {
        Ongoing - Global;
    }
    actions {
        "@Condition O == false\nneed to change later when using soft restart"
        If(Is Assembling Heroes);
            Set Match Time(5);
            "needs to check when game is not started yet that way player always spends time in spawn"
            Wait(6, Ignore Condition);
        End;
        "currently causes issues when the first game ends and all players die"
        Wait(40, Ignore Condition);
        Set Match Time(3599);
        Wait(3000, Abort When False);
        Loop If Condition Is True;
    }
}

rule ("6 Defeat (needs to be refined for soft restart)") {
    event {
        Ongoing - Global;
    }
    conditions {
        Is True For All(All Players(Team 1), Is Dead(Current Array Element)) == True;
        Has Spawned(All Players(Team 1)) == True;
    }
    actions {
        Wait(2, Abort When False);
        Set Global Variable(setspawn, Random Integer(0, 5));
        Destroy All Dummy Bots;
        Start Camera(All Players(Team 1), Vector(317.328, -25.644, -140.906), Vector(320.513, -24.05, -134.612), 0);
        Destroy All HUD Text;
        Destroy All Effects;
        Wait(4, Ignore Condition);
        Go To Assemble Heroes;
        "might be able to make this a subroutine"
        If(Compare(Global.setspawn, ==, False));
            Teleport(All Players(Team 1), Vector(-63.355, -148.766, -17.141));
            Start Forcing Spawn Room(All Teams, 1);
            Set Global Variable At Index(extraVar, 12, 101);
        Else If(Compare(Global.setspawn, ==, 1));
            Teleport(All Players(Team 1), Vector(-65.701, -150.372, 136.652));
            Start Forcing Spawn Room(All Teams, 1);
            Set Global Variable At Index(extraVar, 12, 101);
        Else If(Compare(Global.setspawn, ==, 2));
            Teleport(All Players(Team 1), Vector(354.63, 46.375, 181.943));
            Start Forcing Spawn Room(All Teams, 0);
            Set Global Variable At Index(extraVar, 12, 102);
        Else If(Compare(Global.setspawn, ==, 3));
            Teleport(All Players(Team 1), Vector(185.152, 46.154, 185.661));
            Start Forcing Spawn Room(All Teams, 0);
            Set Global Variable At Index(extraVar, 12, 102);
        Else If(Compare(Global.setspawn, ==, 4));
            Teleport(All Players(Team 1), Vector(367.509, -8.358, -241.533));
            Start Forcing Spawn Room(All Teams, 2);
            Set Global Variable At Index(extraVar, 12, 103);
        Else If(Compare(Global.setspawn, ==, 5));
            Teleport(All Players(Team 1), Vector(200.42, -8.412, -242.411));
            Start Forcing Spawn Room(All Teams, 2);
            Set Global Variable At Index(extraVar, 12, 103);
        End;
        Resurrect(All Players(Team 1));
        Wait(2, Ignore Condition);
        Set Global Variable At Index(extraVar, 0, False);
        Set Global Variable At Index(extraVar, 3, False);
    }
}

rule ("7 Disable Bot Respawn") {
    event {
        Player Joined Match;
        Team 2;
        All;
    }
    actions {
        "set this to ongoing - global"
        Disable Built-In Game Mode Respawning(Event Player);
    }
}

rule ("8 respawn bots") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        "need to include a condition for boss fights being active"
        Number Of Living Players(Team 2) < Value In Array(Global.extraVar, 1);
        Value In Array(Global.extraVar, 1) >= 1;
    }
    actions {
        "check if this needs to be here\n@Condition  > 1\n@Condition eventPlayer.isDead() == true"
        Wait(1, Abort When False);
        "needs to check if player is a wave boss?"
        Respawn(Random Value In Array(All Dead Players(Team 2)));
        Loop If Condition Is True;
    }
}

rule ("1 Setup") {
    event {
        Ongoing - Global;
    }
    actions {
        Set Global Variable At Index(extraVar, 0, False);
        Set Global Variable At Index(extraVar, 1, False);
        Set Global Variable(C, False);
        Set Global Variable(P, False);
        Set Global Variable(Q, Empty Array);
        Set Global Variable(T, Empty Array);
        Set Global Variable(Y, Empty Array);
        "Y.append(vect(-23.738, 22.631, -120.65))\nhudSubtext(getPlayers(Team.1), l\"{0}: {1}\".format(numberOfZombies, l\"Enemies\"), HudPosition.RIGHT, 0, Color.RED, HudReeval.VISIBILITY_AND_STRING, SpecVisibility.ALWAYS)"
        Set Global Variable(O, False);
        Set Global Variable At Index(M, 0, Vector(500, 25, 500));
        Set Global Variable At Index(M, 1, Vector(500, 25, 500));
        Set Global Variable At Index(M, 2, Vector(500, 25, 500));
        Set Global Variable At Index(M, 3, Vector(500, 25, 500));
        Set Global Variable At Index(M, 4, Vector(500, 25, 500));
        Set Global Variable At Index(M, 5, Vector(500, 25, 500));
        Create Effect(All Players(Team 1), Orb, Color(White), First Of(Global.M), 1, Visible To Position and Radius);
        Create Effect(All Players(Team 1), Orb, Color(Yellow), Value In Array(Global.M, 1), 1, Visible To Position and Radius);
        Create Effect(All Players(Team 1), Orb, Color(Green), Value In Array(Global.M, 2), 1, Visible To Position and Radius);
        Create Effect(All Players(Team 1), Orb, Color(Violet), Value In Array(Global.M, 3), 0.1, None);
        Create Effect(All Players(Team 1), Orb, Color(Red), Value In Array(Global.M, 4), 1, Position and Radius);
        Create Effect(All Players(Team 1), Orb, Color(Orange), Value In Array(Global.M, 5), 1, Position and Radius);
        Create HUD Text(Filtered Array(All Players(Team 1), Compare(Value In Array((Current Array Element).S, 1), ==, 1)), Custom String("{0}", Hero Icon String(Hero(Ramattra))), Null, Custom String(" Double points!"), Top, 1, Color(White), Color(White), Color(Orange), Visible To and String, Visible Never);
        Create HUD Text(Filtered Array(All Players(Team 1), Compare(Value In Array((Current Array Element).S, 2), ==, 1)), Custom String("{0}", Hero Icon String(Hero(Ramattra))), Null, Custom String(" Time Freeze"), Top, 1, Color(White), Color(White), Color(Orange), Visible To and String, Visible Never);
        Create HUD Text(Filtered Array(All Players(Team 1), Compare(Value In Array((Current Array Element).S, 4), ==, 1)), Custom String("{0}", Hero Icon String(Hero(Ramattra))), Null, Custom String(" Insta-Kill!"), Top, 1, Color(White), Color(White), Color(Orange), Visible To and String, Visible Never);
        Create HUD Text(Filtered Array(All Players(Team 1), Compare(First Of((Current Array Element).S), ==, 1)), Custom String("{0}", Hero Icon String(Hero(Ramattra))), Null, Custom String(" Ultimate Mayhem!"), Top, 1, Color(White), Color(White), Color(Orange), Visible To and String, Visible Never);
        Create HUD Text(Filtered Array(All Players(Team 1), Compare(Value In Array((Current Array Element).S, 5), ==, 1)), Custom String("{0}", Hero Icon String(Hero(Ramattra))), Null, Custom String("Max Ammo!"), Top, 1, Color(White), Color(White), Color(Orange), Visible To and String, Visible Never);
        Create HUD Text(Filtered Array(All Players(Team 1), Compare(Value In Array((Current Array Element).S, 3), ==, 1)), Custom String("{0}", Hero Icon String(Hero(Ramattra))), Null, Custom String("Data Reset."), Top, 1, Color(White), Color(White), Color(Orange), Visible To and String, Visible Never);
        Set Global Variable At Index(extraVar, 28, Empty Array);
        Set Global Variable At Index(extraVar, 29, Empty Array);
        Set Global Variable(teleportercolor, Color(Blue));
    }
}

rule ("26 Revive Player system") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        "might rebuild downed system to have players be unkillable"
        Distance Between(Event Player, First Of(Global.Died)) <= 4;
        "and only stay alive for 25 seconds then dissapear"
        Event Player != Players In Slot(0, Team 1);
        "then lose their hero and will need to rebuild spectator cam"
        Is Alive(Event Player) == True;
        Is Dummy Bot(Event Player) == False;
        Is True For Any(Global.Died, Compare(Distance Between(Current Array Element, Event Player), <, Value In Array(Global.diedradius, Current Array Index))) == True;
    }
    actions {
        Set Player Variable(Event Player, C, Players In Slot(0, Team 1));
        Chase Player Variable Over Time(Players In Slot(0, Team 1), C, 4, Add(2, Multiply(Global.P, 2)), Destination and Duration);
        Wait(Add(2, Multiply(Global.P, 2)), Abort When False);
        Teleport(Players In Slot(0, Team 1), Event Player);
        Resurrect(Players In Slot(0, Team 1));
        Modify Global Variable(P, Add, 1);
        "wait(0.25)"
        Set Global Variable At Index(Died, 0, Vector(500, 0, 500));
        Modify Player Variable(Event Player, points, Add, Multiply(100, (Event Player).H));
        Skip If(Compare((Event Player).H, !=, 1), 1);
        Skip If(Compare((Event Player).H, ==, 1), 1);
        //lbl_0:
        Set Player Variable At Index(All Players(Team 1), extraPlayerVar, 6, False);
        //lbl_1:
        Modify Global Variable(R, Add, Multiply(100, (Event Player).H));
        Set Status(Players In Slot(0, Team 1), Null, Phased Out, 5);
        Set Max Health(Players In Slot(0, Team 1), 100);
        "dont need attach if player loses follower on downed"
        Attach Players(Players In Slot(6, Team 1), Event Player, Vector(-0.5, 1.8, -0.2));
    }
}

rule ("27 Cancel Revive all players") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        "work in progress"
        Is True For Any(Global.Died, Compare(Distance Between(Current Array Element, Event Player), >, Value In Array(Global.diedradius, Current Array Index))) == True;
        Event Player != Players In Slot(0, Team 1);
    }
    actions {
        Set Player Variable(Players In Slot(0, Team 1), C, False);
        Stop Chasing Player Variable(Players In Slot(0, Team 1), C);
    }
}

rule ("35 Player Respawn, Move Revive Effect") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Alive(Event Player) == True;
    }
    actions {
        "might want to delete downed effect instead of move"
        Set Global Variable At Index(Died, Slot Of(Event Player), Vector(500, 0, 500));
    }
}

rule ("36 Pickup perk drops(should be able to write this as one rule)") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Distance Between(Event Player, Value In Array(Global.M, 1)) <= 1.5;
        Value In Array((All Players(Team 1)).G, 1) == False;
        First Of(Global.extraVar) >= 1;
        Is True For Any(Global.M, Compare(Distance Between(Current Array Element, Event Player), <, Value In Array(Global.diedradius, Current Array Index))) == True;
    }
    actions {
        Set Global Variable At Index(M, 1, Vector(500, 25, 500));
        Set Player Variable At Index(All Players(Team 1), G, 1, True);
        Set Player Variable At Index(All Players(Team 1), S, 1, 1);
        Big Message(All Players(All Teams), Custom String("Double points!"));
        Set Player Variable(All Players(Team 1), H, 2);
        Wait(60, Ignore Condition);
        Set Player Variable(All Players(Team 1), H, 1);
        Set Player Variable At Index(All Players(Team 1), G, 1, False);
        Set Player Variable At Index(All Players(Team 1), S, 1, False);
    }
}

rule ("37 Pickup slowmotion") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Distance Between(Event Player, Value In Array(Global.M, 2)) <= 1.5;
        Value In Array((All Players(Team 1)).G, 2) == False;
        First Of(Global.extraVar) >= 1;
    }
    actions {
        Set Global Variable At Index(M, 2, Vector(500, 25, 500));
        Set Player Variable At Index(All Players(Team 1), G, 2, True);
        Set Player Variable At Index(All Players(Team 1), S, 2, 1);
        Big Message(All Players(All Teams), Custom String("{0} {1} -> {2}", String("Slower"), String("Time"), String("{0} sec", 10)));
        Set Slow Motion(50);
        Wait(5, Ignore Condition);
        Set Slow Motion(100);
        Set Player Variable At Index(All Players(Team 1), G, 2, False);
        Set Player Variable At Index(All Players(Team 1), S, 2, False);
    }
}

rule ("38 Pickup insta kill") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Distance Between(Event Player, Value In Array(Global.M, 4)) <= 1.5;
        Value In Array((All Players(Team 1)).G, 4) == False;
        First Of(Global.extraVar) >= 1;
    }
    actions {
        Set Global Variable At Index(M, 4, Vector(500, 25, 500));
        Set Player Variable At Index(All Players(Team 1), G, 4, True);
        Set Player Variable At Index(All Players(Team 1), S, 4, 1);
        Big Message(All Players(All Teams), Custom String("Insta-Kill!"));
        Set Damage Dealt(All Players(Team 1), Absolute Value(999999));
        Set Damage Received(All Players(Team 2), 1000);
        Wait(30, Ignore Condition);
        Set Damage Dealt(Players In Slot(0, Team 1), Value In Array((Players In Slot(0, Team 1)).extraPlayerVar, 4));
        Set Damage Dealt(Players In Slot(1, Team 1), Value In Array((Players In Slot(1, Team 1)).extraPlayerVar, 4));
        Set Damage Dealt(Players In Slot(2, Team 1), Value In Array((Players In Slot(2, Team 1)).extraPlayerVar, 4));
        Set Damage Dealt(Players In Slot(3, Team 1), Value In Array((Players In Slot(3, Team 1)).extraPlayerVar, 4));
        Set Damage Received(All Players(Team 2), 100);
        Set Player Variable At Index(All Players(Team 1), G, 4, False);
        Set Player Variable At Index(All Players(Team 1), S, 4, False);
    }
}

rule ("39 Pickup InstaUlt") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Distance Between(Event Player, First Of(Global.M)) <= 1.5;
        First Of((All Players(Team 1)).G) == False;
        First Of(Global.extraVar) >= 1;
    }
    actions {
        Set Global Variable At Index(M, 0, Vector(500, 25, 500));
        Set Player Variable At Index(All Players(Team 1), G, 0, True);
        Set Player Variable At Index(All Players(Team 1), S, 0, 1);
        Big Message(All Players(All Teams), Custom String("{0} {1} -> {2}", String("Unlimited"), String("Ultimate Ability"), String("{0} sec", 15)));
        Wait(15, Ignore Condition);
        Set Player Variable At Index(All Players(Team 1), G, 0, False);
        Set Player Variable At Index(All Players(Team 1), S, 0, False);
    }
}

rule ("40 InstaUlt Active") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        First Of((Event Player).G) == True;
    }
    actions {
        Set Ultimate Charge(Event Player, 100);
        Wait(2, Abort When False);
        Loop If Condition Is True;
    }
}

rule ("43 zone blockers (needs arrays)") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        "should use a is true for any"
        Distance Between(Event Player, Vector(-92.307, -149.655, 143.069)) <= 3;
        "@Condition any([distance(player, eventPlayer) < diedradius[i] for player, i in Z]) == true"
        Distance Between(Event Player, Vector(-71.911, -149.645, 141.974)) <= 3;
        Distance Between(Event Player, Vector(-83.688, -149.566, 141.589)) <= 3;
        Players Within Radius(Vector(202.856, -7.605, -227.935), 2.5, Team 1, Off) == True;
        Players Within Radius(Vector(204.956, -7.585, -218.951), 2.5, Team 1, Off) == True;
        Players Within Radius(Vector(-109.785, -151.582, 129.01), 2.5, Team 1, Off) == True;
        Players Within Radius(Vector(196.085, -7.577, -239.357), 2.5, Team 1, Off) == True;
        Value In Array(Global.extraVar, 3) == 1;
    }
    actions {
        Teleport(Event Player, Vector(-93.817, -151.08, 135.029));
        Teleport(Event Player, Vector(-85.208, -152.021, 134.181));
        Teleport(Event Player, Vector(-70.751, -150.926, 132.657));
        Teleport(Event Player, Vector(208.001, -8.354, -232.409));
        Teleport(Event Player, Vector(208.268, -8.333, -222.771));
        Teleport(Event Player, Vector(-108.361, -151.555, 133.284));
        Teleport(Event Player, Vector(202.24, -7.533, -244.729));
    }
}

rule ("48 WORKSHOP SETTINGS") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Has Spawned(Event Player) == True;
    }
    actions {
        Wait(3, Ignore Condition);
        Set Global Variable At Index(extraVar, 7, Workshop Setting Toggle(Custom String("difficulty"), Custom String("zombies jump with no colision"), True, 0));
        Set Player Variable At Index(Event Player, extraPlayerVar, 5, Workshop Setting Integer(Custom String("difficulty"), Custom String("healing dealt"), 25, 0, 500, 0));
        Set Gravity(Event Player, Workshop Setting Real(Custom String("fun"), Custom String("gravity"), 100, 25, 200, 0));
        Wait(3, Ignore Condition);
        Set Healing Dealt(Event Player, Value In Array((Event Player).extraPlayerVar, 5));
        Set Global Variable At Index(extraVar, 10, Workshop Setting Toggle(Custom String("difficulty"), Custom String("zombies speed varies"), True, 0));
        Set Global Variable At Index(extraVar, 9, Workshop Setting Integer(Custom String("difficulty"), Custom String("zombies strafe"), 1, 0, 1, 0));
        Set Global Variable At Index(extraVar, 8, Workshop Setting Integer(Custom String("difficulty"), Custom String("zombies jump"), 1, 0, 1, 0));
        Set Global Variable At Index(extraVar, 14, Workshop Setting Toggle(Custom String("fun"), Custom String("experience system"), True, 0));
        Skip If(Compare(Value In Array(Global.extraVar, 14), ==, False), 3);
        Set Ability 1 Enabled(Event Player, False);
        Set Ability 2 Enabled(Event Player, False);
        Set Ultimate Ability Enabled(Event Player, False);
        //lbl_0:
        Set Global Variable At Index(extraVar, 15, Workshop Setting Toggle(Custom String("stability"), Custom String("idle bots"), False, 0));
        Set Projectile Gravity(All Players(Team 1), Workshop Setting Integer(Custom String("fun"), Custom String("projectile gravity team 1"), 100, 25, 500, 0));
        Set Projectile Speed(All Players(Team 1), Workshop Setting Integer(Custom String("fun"), Custom String("projectile speed team 1"), 100, 25, 500, 0));
        Set Projectile Gravity(All Players(Team 2), Workshop Setting Integer(Custom String("fun"), Custom String("projectile gravity team 2"), 75, 25, 500, 0));
        Set Projectile Speed(All Players(Team 2), Workshop Setting Integer(Custom String("fun"), Custom String("projectile speed team 2"), 50, 25, 500, 0));
        Set Global Variable At Index(extraVar, 23, Workshop Setting Integer(Custom String("difficulty"), Custom String("zombie types -- brig= 0 torb= 1 random= 2 none/testing=3"), 0, 0, 3, 0));
    }
}

rule ("83 power challenge effects") {
    event {
        Ongoing - Global;
    }
    conditions {
        Global.powerconnected == 1;
        First Of(Global.extraVar) < 15;
    }
    actions {
        "change this to be all heros on team 2"
        Set Ultimate Charge(Players On Hero(Hero(Brigitte), Team 2), 100);
    }
}

rule ("88 disable vanilla features") {
    event {
        Player Joined Match;
        All;
        All;
    }
    actions {
        Disable Built-In Game Mode Music;
        Disable Kill Feed(All Players(All Teams));
        Disable Built-In Game Mode Announcer;
        "getAllPlayers().disableScoreboard()"
        Disable Nameplates(All Living Players(Team 2), All Players(Team 1));
        Stop Forcing Player Outlines(All Players(All Teams), All Players(All Teams));
        "disableInspector()"
        Disable Built-In Game Mode Scoring;
        Disable Built-In Game Mode Completion;
        Disable Game Mode In-World UI(All Players(All Teams));
        Disable Game Mode HUD(All Players(All Teams));
        Disable Built-In Game Mode Respawning(All Players(All Teams));
        Set Player Variable(Event Player, F, False);
        Set Player Variable(Event Player, H, 1);
    }
}

rule ("498 Rule 480 start screen") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        "need more player feedback on how they enjoy the start screen"
        Value In Array(Global.extraVar, 3) == False;
    }
    actions {
        Start Camera(Event Player, Vector(255.366, 9.471, -169.75), Vector(261.155, 6.939, -180.808), 0);
        Disable Hero HUD(Event Player);
        Wait(15, Abort When False);
        Start Camera(Event Player, Vector(159.409, 82.32, 212.576), Vector(267.128, 50, 130.027), 0);
        Wait(0.25, Abort When False);
        Start Camera(Event Player, Vector(343.545, 75.093, 219.552), Vector(267.128, 50, 130.027), 0.2);
        Wait(15, Abort When False);
        Start Camera(Event Player, Vector(353.189, 30.177, -98.238), Vector(284.894, -20, -243.771), 0);
        Wait(0.25, Abort When False);
        Start Camera(Event Player, Vector(272.905, 4.398, -171.199), Vector(284.894, -20, -243.771), 0.2);
        Wait(15, Abort When False);
        Start Camera(Event Player, Vector(-135.038, -140.843, -18.138), Vector(-16.898, -155.331, 62.147), 0);
        Wait(0.25, Abort When False);
        Start Camera(Event Player, Vector(-137.925, -143.078, 135.228), Vector(-16.898, -155.331, 62.147), 0.2);
        Wait(15, Abort When False);
        Loop If Condition Is True;
    }
}

rule ("488 button heald 1 teleporter (needs to be one rule)") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        "need to fix this as the index for teleporter has changed"
        Is Button Held(Event Player, Button(Interact)) == True;
        Players Within Radius(Value In Array(Global.Vectordoorpositions, 101), 3, Team 1, Off) == True;
    }
    actions {
        "@Condition any([distance(i, eventPlayer) < doorradius.slice(101, 103)[idx] for i, idx in Vectordoorpositions.slice(101, 103)]) == true"
        If(Compare(All Living Players(Team 1), ==, Players Within Radius(Value In Array(Global.Vectordoorpositions, 101), 3, Team 1, Off)));
            If(Compare(Value In Array(Global.extraVar, 5), ==, False));
                "might need to not use destroy effect last created, and append every single one to array then delete all"
                Create Effect(Event Player, Ana Nano Boosted Effect, Team Of(Event Player), Event Player, 1, Visible To Position and Radius);
                Modify Global Variable(zzz, Append To Array, Last Created Entity);
                "need a for loop needs 4 loops"
                Create Effect(All Players(All Teams), Winston Tesla Cannon Target Effect, Color(Black), Event Player, 80, Visible To Position and Radius);
                Wait(0.25, Ignore Condition);
                Set Status(Players Within Radius(Value In Array(Global.Vectordoorpositions, 101), 5, Team 2, Off), Array(0), Stunned, 0.25);
                Destroy Effect(Last Created Entity);
                Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Event Player, 80);
                Wait(0.25, Ignore Condition);
                Kill(Players Within Radius(Value In Array(Global.Vectordoorpositions, 101), 5, Team 2, Off), First Of(All Living Players(Team 1)));
                Destroy Effect(Last Created Entity);
                Teleport(All Players(Team 1), Value In Array(Global.Vectordoorpositions, 102));
                Set Global Variable At Index(extraVar, 24, 1);
                Set Global Variable At Index(extraVar, 5, 1);
                Set Global Variable(teleportercolor, Color(Red));
                "needs to be set to current telespot"
                Set Global Variable At Index(extraVar, 12, 102);
            Else If(Compare(Value In Array(Global.extraVar, 5), >, 0));
                Small Message(Event Player, Custom String("  {0} That machine is not a toy!", Hero Icon String(Hero(Ramattra))));
                Wait(4, Ignore Condition);
            End;
        Else If(Compare(All Living Players(Team 1), !=, Players Within Radius(Value In Array(Global.Vectordoorpositions, 101), 3, Team 1, Off)));
            Small Message(Event Player, Custom String("  You can't leave your friends behind!"));
            Wait(4, Ignore Condition);
    }
}

rule ("497 start control") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Value In Array(Global.extraVar, 3) == False;
        Is Button Held(Event Player, Button(Jump)) == True;
    }
    actions {
        Set Global Variable(setspawn, Random Integer(0, 5));
        Wait(0.25, Ignore Condition);
        Set Global Variable At Index(extraVar, 3, 1);
        Wait(2, Ignore Condition);
        Set Global Variable At Index(extraVar, 0, Workshop Setting Integer(Custom String("Set Wave number"), Custom String("Set starting wave"), 1, 1, 100, 0));
        Enable Built-In Game Mode Music;
        Set Global Variable(rngbox, Random Value In Array(Global.mysterylocations));
        Stop Camera(All Players(All Teams));
        Wait(0.1, Ignore Condition);
        Enable Hero HUD(All Players(All Teams));
        Set Global Variable At Index(extraVar, 22, Random Integer(1, 100));
        Set Global Variable At Index(extraVar, 6, Random Integer(0, 0));
        Set Player Variable At Index(Event Player, heroswap, 0, Hero Of(Event Player));
        Set Global Variable(rngbox2, Random Value In Array(Global.Mysterylocations2));
    }
}

rule ("521 start screen message") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        Value In Array(Global.extraVar, 3) == False;
    }
    actions {
        Small Message(Event Player, Custom String("  Press melee for settings"));
        Small Message(Event Player, Custom String("  Press jump to start"));
        Wait(8, Ignore Condition);
        Loop If Condition Is True;
    }
}

rule ("565 door message") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        (Event Player).doormessage == 1;
    }
    actions {
        Wait(5, Ignore Condition);
        Set Player Variable(Event Player, doormessage, False);
    }
}

rule ("38 Pickup vaporized") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Distance Between(Event Player, Value In Array(Global.M, 3)) <= 1.5;
        Value In Array((All Players(Team 1)).G, 3) == False;
        First Of(Global.extraVar) >= 1;
    }
    actions {
        Set Global Variable At Index(M, 4, Vector(500, 25, 500));
        Set Player Variable At Index(All Players(Team 1), G, 3, True);
        Set Player Variable At Index(All Players(Team 1), S, 3, 1);
        Big Message(All Players(All Teams), Custom String("Vaporized"));
        Kill(All Living Players(Team 2), First Of(All Living Players(Team 1)));
        Wait(3, Ignore Condition);
        Set Player Variable At Index(All Players(Team 1), G, 3, False);
        Set Player Variable At Index(All Players(Team 1), S, 3, False);
    }
}

rule ("39 Pickup max ammo") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Distance Between(Event Player, Value In Array(Global.M, 5)) <= 1.5;
        Value In Array((All Players(Team 1)).G, 5) == False;
        First Of(Global.extraVar) >= 1;
    }
    actions {
        Set Global Variable At Index(M, 5, Vector(500, 25, 500));
        Set Player Variable At Index(All Players(Team 1), G, 5, True);
        Set Player Variable At Index(All Players(Team 1), S, 5, 1);
        Modify Player Variable(All Living Players(Team 1), magazines, Add, 10);
        Big Message(All Players(All Teams), Custom String("Max ammo!"));
        Wait(3, Ignore Condition);
        Set Player Variable At Index(All Players(Team 1), G, 5, False);
        Set Player Variable At Index(All Players(Team 1), S, 5, False);
    }
}

rule ("143 DIFFICULTY damage resistance") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Has Spawned(Event Player) == True;
    }
    actions {
        If(Compare(Value In Array(Global.extraVar, 2), ==, 1));
            "needs to be changed if i introduce armor"
            Set Damage Received(Event Player, 25);
        Else If(Compare(Value In Array(Global.extraVar, 2), ==, 2));
            Set Damage Received(Event Player, 50);
        Else If(Compare(Value In Array(Global.extraVar, 2), ==, 3));
            Set Damage Received(Event Player, 100);
    }
}

rule ("159 workshop setting explosive rounds(could add a cheats menu somewhere)") {
    event {
        Player Dealt Damage;
        Team 1;
        All;
    }
    conditions {
        Is Button Held(Event Player, Button(Primary Fire)) == True;
        Workshop Setting Toggle(Custom String("fun"), Custom String("explosive rounds"), False, 0) == True;
    }
    actions {
        Damage(Players Within Radius(Victim, 3, Team 2, Off), Attacker, 300);
        Play Effect(All Players(All Teams), Good Explosion, Color(Red), Victim, 3);
        Wait(0.45, Ignore Condition);
    }
}

rule ("191 Trap logic") {
    event {
        Ongoing - Global;
    }
    conditions {
        Value In Array(Global.extraVar, 17) == True;
    }
    actions {
        Create Dummy Bot(Hero(Bastion), Team 1, 12, Vector(-86.342, -150.729, 39.793), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 18, Slot Of(Players In Slot(12, Team 1)));
        Create Dummy Bot(Hero(Bastion), Team 1, 13, Vector(-82.277, -150.687, 80.335), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 19, Slot Of(Players In Slot(13, Team 1)));
        Start Holding Button(Players In Slot(12, Team 1), Button(Primary Fire));
        Wait(0.25, Ignore Condition);
        Set Player Variable(Players In Slot(12, Team 1), T, 1);
        Set Player Variable(Players In Slot(13, Team 1), T, 1);
        Press Button(Players In Slot(12, Team 1), Button(Ability 1));
        Press Button(Players In Slot(13, Team 1), Button(Ability 1));
        Start Holding Button(Players In Slot(13, Team 1), Button(Primary Fire));
        Wait(20, Ignore Condition);
        Destroy Dummy Bot(Team 1, Value In Array(Global.omnicspawn, 18));
        Destroy Dummy Bot(Team 1, Value In Array(Global.omnicspawn, 19));
    }
}

rule ("192 Purchase trap") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Distance Between(Event Player, Vector(-83.799, -160.001, 64.224)) <= 2;
        Is Button Held(Event Player, Button(Interact)) == True;
        Value In Array(Global.extraVar, 17) == False;
    }
    actions {
        If(Compare((Event Player).points, >=, 1000));
            Set Global Variable At Index(extraVar, 17, 1);
            Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Event Player, 70);
            Modify Player Variable(Event Player, points, Subtract, 2000);
            Wait(22, Ignore Condition);
            Set Global Variable At Index(extraVar, 17, False);
        Else If(Compare((Event Player).points, <, 1000));
            Small Message(Event Player, Custom String("  {0}  A Trap? No! Omnics need purpose!", Hero Icon String(Hero(Ramattra))));
            Wait(4, Ignore Condition);
    }
}

disabled rule ("196 (effect) GOAL: omnic part collector") {
    event {
        Ongoing - Global;
    }
    actions {
        Create Effect(All Players(All Teams), Ring, Color(White), Vector(0, 0, 0), 1, Visible To Position and Radius);
    }
}

disabled rule ("197 GOAL: omnic part collector (players gather souls from omnics)") {
    event {
        Ongoing - Global;
    }
    actions {
        Create Effect(All Players(All Teams), Ring, Color(White), Vector(0, 0, 0), 1, Visible To Position and Radius);
    }
}

disabled rule ("198 GOAL: save little winstons (carry miniature winstons to a location)") {
    event {
        Ongoing - Global;
    }
    actions {
        Create Effect(All Players(All Teams), Ring, Color(White), Vector(0, 0, 0), 1, Visible To Position and Radius);
    }
}

disabled rule ("199 GOAL: gather 3 teleporter parts") {
    event {
        Ongoing - Global;
    }
    actions {
        Create Effect(All Players(All Teams), Ring, Color(White), Vector(0, 0, 0), 1, Visible To Position and Radius);
    }
}

disabled rule ("200 GOAL: The main easter egg") {
    event {
        Ongoing - Global;
    }
    actions {
        Create HUD Text(All Players(All Teams), Custom String("stay tuned..."), Null, Null, Left, 0, Color(White), Null, Null, Visible To and String, Default Visibility);
    }
}

rule ("299 out of bounce boundry") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Players Within Radius(Vector(-109.55, -151.893, -6.832), 2.5, Team 1, Off) == True;
        Value In Array(Global.extraVar, 3) == 1;
    }
    actions {
        Teleport(Event Player, Vector(-104.638, -150.413, -15.437));
    }
}

rule ("403 Challenge waves") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Value In Array(Global.extraVar, 20) == 1;
        Is Alive(Event Player) == True;
    }
    actions {
        Set Ultimate Charge(Event Player, 100);
        If(Compare(Value In Array(Global.extraVar, 1), <, 4));
            Set Global Variable At Index(extraVar, 20, False);
    }
}

rule ("404 set challenge wave every few rounds") {
    event {
        Ongoing - Global;
    }
    conditions {
        Value In Array(Global.extraVar, 21) >= 4;
    }
    actions {
        Set Global Variable At Index(extraVar, 20, Random Integer(0, 1));
        If(Compare(Value In Array(Global.extraVar, 20), ==, 1));
            Set Global Variable At Index(extraVar, 21, False);
    }
}

rule ("bastion bot re enter turret mode (need to add cooldown reduction to seemlessly re-enter turret mode)") {
    event {
        Ongoing - Each Player;
        Team 1;
        Bastion;
    }
    conditions {
        Is Dummy Bot(Event Player) == True;
    }
    actions {
        Set Ability Cooldown(Event Player, Button(Ability 1), 0);
        Wait(0.25, Ignore Condition);
        Press Button(Event Player, Button(Ability 1));
        Wait(6.5, Ignore Condition);
        Loop;
    }
}

rule ("235 is not assembling heroes get out of spawn") {
    event {
        Ongoing - Global;
    }
    conditions {
        "might need another condition to check if softrestarted"
        Is Assembling Heroes == False;
    }
    actions {
        Wait(30, Ignore Condition);
        Set Global Variable At Index(extraVar, 26, 1);
    }
}

rule ("teleporter timer") {
    event {
        Ongoing - Global;
    }
    conditions {
        Value In Array(Global.extraVar, 5) > 0;
    }
    actions {
        Wait(60, Ignore Condition);
        Set Global Variable At Index(extraVar, 5, False);
    }
}

rule ("teleporter back to blue") {
    event {
        Ongoing - Global;
    }
    conditions {
        Value In Array(Global.extraVar, 5) == False;
    }
    actions {
        Set Global Variable(teleportercolor, Color(Blue));
    }
}

rule ("Rule 235") {
    event {
        Ongoing - Global;
    }
    conditions {
        Is Assembling Heroes == False;
    }
    actions {
        Wait(30, Ignore Condition);
        Set Global Variable At Index(extraVar, 26, 1);
    }
}

rule ("bastion re enter turret mode (need to add cooldown reduction to seemlessly re-enter turret mode)") {
    event {
        Ongoing - Each Player;
        Team 1;
        Bastion;
    }
    conditions {
        Is Dummy Bot(Event Player) == True;
    }
    actions {
        Set Ability Cooldown(Event Player, Button(Ability 1), 0);
        Wait(0.25, Ignore Condition);
        Press Button(Event Player, Button(Ability 1));
        Wait(6.5, Ignore Condition);
        Loop;
    }
}

rule ("53  mystery box") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Button Held(Event Player, Button(Interact)) == True;
        Distance Between(Event Player, Global.rngbox) <= 2;
        (Event Player).points >= 950;
    }
    actions {
        If(Compare((Event Player).points, >, 950));
            Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Event Player, 70);
            Start Forcing Player To Be Hero(Event Player, First Of(Random Value In Array(Randomized Array(All Heroes))));
            Wait(0.1, Ignore Condition);
            Resurrect(Event Player);
            Modify Player Variable(Event Player, points, Subtract, 950);
            Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero Of(Event Player));
            Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero Of(Event Player)));
            "if ruleCondition:\nloop()"
            Set Player Variable(Event Player, currentmagazines, 10);
            //lbl_0:
            Modify Global Variable At Index(extraVar, 18, Add, 1);
            Wait(1, Ignore Condition);
            Skip If(Compare(Value In Array(Global.extraVar, 18), <, Random Integer(6, 10)), 2);
            Set Global Variable(rngbox, Random Value In Array(Global.mysterylocations));
            Set Global Variable At Index(extraVar, 18, False);
            //lbl_1:
        Else If(Compare((Event Player).points, <, 950));
            Big Message(Event Player, Custom String("Come back when you've got some money buddy!"));
    }
}

rule ("137  get out of spawn bots(buggy effect)") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Is Alive(Event Player) == True;
        Is In Spawn Room(Event Player) == True;
    }
    actions {
        Teleport(Event Player, Nearest Walkable Position(Add(Multiply(Direction From Angles(Random Real(0, 360), Random Real(-3, 3)), Random Real(10, 20)), Position Of(First Of(All Living Players(Team 1))))));
        Wait(1, Ignore Condition);
        Create Effect(All Players(All Teams), Bad Aura, Color(Black), Add(Evaluate Once(Position Of(Event Player)), Vector(0, 1.5, 0)), 1, Visible To Position and Radius);
        Create Effect(All Players(All Teams), Bad Aura Sound, Color(White), Evaluate Once(Position Of(Event Player)), 100, Visible To Position and Radius);
        Set Status(Event Player, Null, Rooted, 1);
        Set Invisible(Event Player, All);
        Wait(1, Ignore Condition);
        Set Invisible(Event Player, None);
        Wait(3, Ignore Condition);
        Destroy Effect(Last Created Entity);
        "i dont think doing it twice works need to append"
        Destroy Effect(Last Created Entity);
    }
}

rule ("15 Unstuck Bots(buggy effect)") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Is In Line of Sight(Event Player, First Of(All Living Players(Team 1)), Barriers Do Not Block LOS) == False;
        Is Alive(Event Player) == True;
        Or(Or(Or(Or(Has Status(Event Player, Hacked), Has Status(Event Player, Knocked Down)), Has Status(Event Player, Frozen)), Has Status(Event Player, Asleep)), Not(Has Status(Event Player, Stunned))) == True;
        "@Condition distance(eventPlayer, getClosestPlayer(eventPlayer, Team.1)) > 2.5"
        (Event Player).idlebot == 1;
    }
    actions {
        Wait(2.5, Abort When False);
        "eventPlayer.teleport(random.choice(Y))"
        Teleport(Event Player, Nearest Walkable Position(Add(Multiply(Direction From Angles(Random Real(0, 360), Random Real(-3, 3)), Random Real(10, 20)), Position Of(First Of(All Living Players(Team 1))))));
        "loop()"
        Wait(0.4, Ignore Condition);
        Create Effect(All Players(All Teams), Bad Aura, Color(Black), Add(Evaluate Once(Position Of(Event Player)), Vector(0, 1.5, 0)), 1, Visible To Position and Radius);
        Create Effect(All Players(All Teams), Good Aura Sound, Color(White), Evaluate Once(Position Of(Event Player)), 100, Visible To Position and Radius);
        Wait(4, Ignore Condition);
        Destroy Effect(Last Created Entity);
        Destroy Effect(Last Created Entity);
    }
}

rule ("16 Jump If Far Away From Player") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        "not sure if this rule is needed"
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) > Random Integer(5, 20);
        Global.O == False;
        "idle bots would be great in concept, its meant to feel like L4D2"
        Value In Array(Global.extraVar, 15) == False;
        Horizontal Speed Of(Event Player) < 0.7;
    }
    actions {
        Skip If(Compare(Value In Array(Global.extraVar, 8), ==, False), 3);
        //lbl_1:
        Press Button(Event Player, Button(Jump));
        Wait(10, Ignore Condition);
        Loop If Condition Is True;
        //lbl_0:
        //lbl_2:
    }
}

rule ("17 Bots Under Player") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Vertical Facing Angle Of(Event Player) < -10;
        Global.O == False;
        Speed Of(Event Player) < 0.95;
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) > 1;
        "needs a (is boss active) condition"
        Or(Or(Or(Or(Has Status(Event Player, Hacked), Has Status(Event Player, Knocked Down)), Has Status(Event Player, Frozen)), Has Status(Event Player, Asleep)), Not(Has Status(Event Player, Stunned))) == True;
    }
    actions {
        Wait(0.33, Abort When False);
        Apply Impulse(Event Player, Up, 15, To World, Cancel Contrary Motion);
        Skip If(Compare(Value In Array(Global.extraVar, 7), ==, False), 3);
        Disable Movement Collision With Environment(Event Player, False);
        Wait(2.5, Ignore Condition);
        Enable Movement Collision With Environment(Event Player);
        //lbl_0:
    }
}

rule ("9 Omnic Kill all powerups)") {
    event {
        Player Died;
        Team 2;
        All;
    }
    conditions {
        First Of(Global.extraVar) > 3;
    }
    actions {
        "insta ultimate"
        If(Compare(Slot Of(Event Player), ==, False));
            "for some reason this goes off constantly\nif  > 3:\nneed to rename event player b"
            Set Player Variable(Event Player, B, Random Integer(1, 75));
            Skip If(Compare((Event Player).B, !=, 1), 1);
            Set Global Variable At Index(M, 0, Add(Nearest Walkable Position(Event Player), Vector(0, 0.5, 0)));
            //lbl_0:
            Set Ultimate Charge(Event Player, 0);
        Else If(Compare(Slot Of(Event Player), ==, 1));
            Set Player Variable(Event Player, B, Random Integer(1, 75));
            Skip If(Compare((Event Player).B, !=, 1), 1);
            Set Global Variable At Index(M, 1, Add(Nearest Walkable Position(Event Player), Vector(0, 0.5, 0)));
            //lbl_1:
            Set Ultimate Charge(Event Player, 0);
            Skip If(Compare(Value In Array(Global.extraVar, 1), <, 6), 1);
        Else If(Compare(Slot Of(Event Player), ==, 2));
            //lbl_2:
            Set Player Variable(Event Player, B, Random Integer(1, 50));
            Skip If(Compare((Event Player).B, !=, 1), 1);
            Set Global Variable At Index(M, 2, Add(Nearest Walkable Position(Event Player), Vector(0, 0.5, 0)));
            //lbl_3:
            Set Ultimate Charge(Event Player, 0);
        Else If(Compare(Slot Of(Event Player), ==, 3));
            Set Player Variable(Event Player, B, Random Integer(1, 75));
            Skip If(Compare((Event Player).B, !=, 1), 1);
            Set Global Variable At Index(M, 3, Add(Nearest Walkable Position(Event Player), Vector(0, 0.5, 0)));
            //lbl_4:
            Set Ultimate Charge(Event Player, 0);
        Else If(Compare(Slot Of(Event Player), ==, 4));
            Set Player Variable(Event Player, B, Random Integer(1, 75));
            Skip If(Compare((Event Player).B, !=, 1), 1);
            Set Global Variable At Index(M, 4, Add(Nearest Walkable Position(Event Player), Vector(0, 0.5, 0)));
            //lbl_5:
            Set Ultimate Charge(Event Player, 0);
        Else If(Compare(Slot Of(Event Player), ==, 5));
            Set Player Variable(Event Player, B, Random Integer(1, 75));
            Skip If(Compare((Event Player).B, !=, 1), 1);
            Set Global Variable At Index(M, 5, Add(Nearest Walkable Position(Event Player), Vector(0, 0.5, 0)));
            //lbl_6:
            Set Ultimate Charge(Event Player, 0);
    }
}

rule ("50 is hacked") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Has Status(Event Player, Hacked) == True;
    }
    actions {
        Set Move Speed(Event Player, 0);
        Set Primary Fire Enabled(Event Player, False);
        Set Status(Event Player, Null, Burning, 4);
        Start Damage Over Time(Event Player, Null, 10, 60);
        Disallow Button(Event Player, Button(Jump));
        Wait(4, Ignore Condition);
        Set Move Speed(Event Player, 100);
        Set Primary Fire Enabled(Event Player, True);
    }
}

rule ("118  Omnic Kill (Global Var B) ALL SLOTS") {
    event {
        Player Died;
        Team 2;
        All;
    }
    actions {
        "this is probably causing constant infinite ult perk"
        Set Player Variable(Event Player, B, Random Integer(1, 50));
        Skip If(Compare((Event Player).B, !=, 1), 1);
        Set Global Variable At Index(M, 0, Add(Nearest Walkable Position(Event Player), Vector(0, 0.5, 0)));
        //lbl_0:
        Set Ultimate Charge(Event Player, 0);
        Wait(0.2, Ignore Condition);
        Modify Global Variable At Index(extraVar, 1, Subtract, 1);
        Skip If(Compare(Value In Array(Global.extraVar, 1), <, Number Of Living Players(Team 2)), 1);
        Respawn(Event Player);
        //lbl_1:
    }
}

rule ("436 OMNIC set features ALL") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Slot Of(Event Player) != Players In Slot(0, Team 2);
        Has Spawned(Event Player) == True;
    }
    actions {
        Start Modifying Hero Voice Lines(Event Player, 0.5, True);
        If(Compare(Hero Of(Event Player), ==, Hero(Roadhog)));
            Start Scaling Player(Event Player, 0.6, True);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Lúcio)));
            Start Scaling Player(Event Player, 0.4, True);
        Else If(Compare(Hero Of(Event Player), ==, Hero(D.Va)));
            Start Scaling Player(Event Player, 0.7, True);
            Disallow Button(Event Player, Button(Primary Fire));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Wrecking Ball)));
            Start Scaling Player(Event Player, 0.65, True);
            Wait(2.5, Ignore Condition);
            Press Button(Event Player, Button(Ability 1));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Orisa)));
            Start Scaling Player(Event Player, 0.65, True);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Sigma)));
            Start Scaling Player(Event Player, 0.65, True);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Mauga)));
            Start Scaling Player(Event Player, 0.65, True);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Torbjörn)));
            Start Scaling Player(Event Player, 1.5, True);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Winston)));
            Start Scaling Player(Event Player, 0.5, True);
            Start Modifying Hero Voice Lines(Event Player, 1.5, True);
    }
}

rule ("519 Spawn wave director") {
    event {
        Ongoing - Global;
    }
    conditions {
        "@Condition getPlayers(Team.1).hasSpawned() == true"
        First Of(Global.extraVar) >= 1;
        Value In Array(Global.extraVar, 1) >= 4;
        Is Game In Progress == True;
    }
    actions {
        "needs a 3, for directors cut version, where each hero is on for 5 rounds then changes using a loop"
        If(Compare(Value In Array(Global.extraVar, 23), ==, False));
            Set Global Variable At Index(extraVar, 4, 0);
            "needs a lot more types as well, since there will be the new addition, random, and legacy from 1.0"
            Set Global Variable(bossSpawn, Array(Null));
            "needs a way to make it so more than 1 wave boss can be spawned at once as well"
            Set Global Variable(bot1spawn, Array(Hero(Brigitte)));
            "need to make it so wave boss doesnt respawn after being killed"
            Set Global Variable(bot2spawn, Array(Hero(Brigitte)));
            "and need wave boss to spawn a 2nd or 3rd one if players are doing well"
            Wait(0.25, Ignore Condition);
            Call Subroutine(wavespawn);
        Else If(Compare(Value In Array(Global.extraVar, 23), ==, 1));
            Set Global Variable At Index(extraVar, 4, 0);
            Wait(0.25, Ignore Condition);
            Set Global Variable(bossSpawn, Array(Null));
            Set Global Variable(bot1spawn, Array(Hero(Torbjörn)));
            Set Global Variable(bot2spawn, Array(Hero(Torbjörn)));
            Wait(0.25, Ignore Condition);
            Call Subroutine(wavespawn);
        Else If(Compare(Value In Array(Global.extraVar, 23), ==, 2));
            Set Global Variable At Index(extraVar, 4, 0);
            Wait(0.25, Ignore Condition);
            If(Compare(First Of(Global.extraVar), <, 5));
                Set Global Variable(bossSpawn, Null);
                Set Global Variable(bot1spawn, Value In Array(Global.hero, Random Integer(0, 38)));
                Set Global Variable(bot2spawn, Value In Array(Global.hero, Random Integer(0, 38)));
                Wait(0.25, Ignore Condition);
                Call Subroutine(wavespawn);
            Else If(Compare(First Of(Global.extraVar), >=, 5));
                Set Global Variable(bossSpawn, Value In Array(Global.hero, Random Integer(0, 38)));
                Set Global Variable(bot1spawn, Value In Array(Global.hero, Random Integer(0, 38)));
                Set Global Variable(bot2spawn, Value In Array(Global.hero, Random Integer(0, 38)));
                Wait(0.25, Ignore Condition);
                Call Subroutine(wavespawn);
            End;
        Else If(Compare(Value In Array(Global.extraVar, 23), ==, 3));
            Set Global Variable(bossSpawn, Array(Null, Hero(Doomfist), Hero(Torbjörn), Hero(Reinhardt), Hero(Winston), Hero(Roadhog), Hero(Junker Queen), Hero(Zenyatta), Hero(Mauga), Hero(Sombra), Hero(Mei), Hero(Reaper), Hero(Ramattra)));
            Set Global Variable(bot1spawn, Array(Hero(Brigitte), Hero(Torbjörn), Hero(Torbjörn), Hero(Moira), Hero(Lúcio), Hero(Torbjörn), Hero(Roadhog), Hero(Moira), Hero(Lúcio), Hero(Mercy), Hero(Junker Queen), Hero(Tracer), Hero(Doomfist)));
            Set Global Variable(bot2spawn, Array(Hero(Brigitte), Hero(Brigitte), Hero(Reinhardt), Hero(Winston), Hero(Genji), Hero(Winston), Hero(Genji), Hero(Brigitte), Hero(Hanzo), Hero(Mauga), Hero(D.Va), Hero(Echo), Hero(Sombra)));
            Wait(0.25, Ignore Condition);
            Call Subroutine(wavespawn);
    }
}

rule ("520 OMNIC hero array list") {
    event {
        Ongoing - Global;
    }
    actions {
        Set Global Variable At Index(hero, 0, Hero(Ana));
        Set Global Variable At Index(hero, 1, Hero(Ashe));
        Set Global Variable At Index(hero, 2, Hero(Baptiste));
        Set Global Variable At Index(hero, 3, Hero(Bastion));
        Set Global Variable At Index(hero, 4, Hero(Brigitte));
        Set Global Variable At Index(hero, 5, Hero(Cassidy));
        Set Global Variable At Index(hero, 6, Hero(D.Va));
        Set Global Variable At Index(hero, 7, Hero(Doomfist));
        Set Global Variable At Index(hero, 8, Hero(Echo));
        Set Global Variable At Index(hero, 9, Hero(Genji));
        Set Global Variable At Index(hero, 10, Hero(Hanzo));
        Set Global Variable At Index(hero, 11, Hero(Illari));
        Set Global Variable At Index(hero, 12, Hero(Junker Queen));
        Set Global Variable At Index(hero, 13, Hero(Junkrat));
        Set Global Variable At Index(hero, 14, Hero(Kiriko));
        Set Global Variable At Index(hero, 15, Hero(Lifeweaver));
        Set Global Variable At Index(hero, 16, Hero(Lúcio));
        Set Global Variable At Index(hero, 17, Hero(Mauga));
        Set Global Variable At Index(hero, 18, Hero(Mei));
        Set Global Variable At Index(hero, 19, Hero(Mercy));
        Set Global Variable At Index(hero, 20, Hero(Moira));
        Set Global Variable At Index(hero, 21, Hero(Orisa));
        Set Global Variable At Index(hero, 22, Hero(Pharah));
        Set Global Variable At Index(hero, 23, Hero(Ramattra));
        Set Global Variable At Index(hero, 24, Hero(Reaper));
        Set Global Variable At Index(hero, 25, Hero(Reinhardt));
        Set Global Variable At Index(hero, 26, Hero(Roadhog));
        Set Global Variable At Index(hero, 27, Hero(Sigma));
        Set Global Variable At Index(hero, 28, Hero(Sojourn));
        Set Global Variable At Index(hero, 29, Hero(Soldier: 76));
        Set Global Variable At Index(hero, 30, Hero(Sombra));
        Set Global Variable At Index(hero, 31, Hero(Symmetra));
        Set Global Variable At Index(hero, 32, Hero(Torbjörn));
        Set Global Variable At Index(hero, 33, Hero(Tracer));
        Set Global Variable At Index(hero, 34, Hero(Widowmaker));
        Set Global Variable At Index(hero, 35, Hero(Winston));
        Set Global Variable At Index(hero, 36, Hero(Wrecking Ball));
        Set Global Variable At Index(hero, 37, Hero(Zarya));
        Set Global Variable At Index(hero, 38, Hero(Zenyatta));
    }
}

rule ("wave director incramenter") {
    event {
        Ongoing - Global;
    }
    conditions {
        First Of(Global.extraVar) > 1;
        Divide(First Of(Global.extraVar), 5) == Round To Integer(Divide(First Of(Global.extraVar), 5), Down);
        Value In Array(Global.extraVar, 23) == 3;
    }
    actions {
        Modify Global Variable At Index(extraVar, 4, Add, 1);
    }
}

disabled rule ("559 stop throttle omnics") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) < 1.75;
    }
    actions {
        Stop Forcing Throttle(Event Player);
    }
}

rule ("435 OMNIC ALL heros (excluding wave boss)") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) < 10;
        Slot Of(Event Player) != Players In Slot(0, Team 2);
    }
    actions {
        "needs to be seperate rules as this is very limited conditions"
        If(Compare(Hero Of(Event Player), ==, Hero(Roadhog)));
            Press Button(Event Player, Button(Ability 2));
            Wait(Random Integer(15, 25), Ignore Condition);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Reaper)));
            Press Button(Event Player, Button(Ability 1));
            Wait(Random Integer(15, 25), Ignore Condition);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Hanzo)));
            Press Button(Event Player, Button(Jump));
            Wait(0.6, Ignore Condition);
            Press Button(Event Player, Button(Jump));
            Wait(Random Integer(20, 25), Ignore Condition);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Pharah)));
            Press Button(Event Player, Button(Ability 1));
            Wait(0.75, Ignore Condition);
            Press Button(Event Player, Button(Ability 2));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Widowmaker)));
            Press Button(Event Player, Button(Ability 1));
            Wait(0.75, Ignore Condition);
            Press Button(Event Player, Button(Ability 2));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Bastion)));
            Press Button(Event Player, Button(Secondary Fire));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Symmetra)));
            Press Button(Event Player, Button(Ability 1));
            Wait(2, Ignore Condition);
            Press Button(Event Player, Button(Ability 1));
            Wait(2, Ignore Condition);
            Press Button(Event Player, Button(Ability 1));
            Wait(2, Ignore Condition);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Cassidy)));
            Press Button(Event Player, Button(Ability 1));
            Wait(0.5, Ignore Condition);
            Press Button(Event Player, Button(Ability 2));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Junkrat)));
            Press Button(Event Player, Button(Ability 1));
            Wait(0.5, Ignore Condition);
            Press Button(Event Player, Button(Ability 2));
            Wait(2, Ignore Condition);
            Press Button(Event Player, Button(Secondary Fire));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Zarya)));
            Press Button(Event Player, Button(Ability 1));
            Wait(6, Ignore Condition);
            Loop If Condition Is True;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Soldier: 76)));
            Press Button(Event Player, Button(Secondary Fire));
            Wait(6, Ignore Condition);
            Loop If Condition Is True;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Lúcio)));
            If(Compare(Distance Between(Event Player, First Of(All Living Players(Team 1))), <, 3));
                Press Button(Event Player, Button(Secondary Fire));
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Brigitte)));
            If(Compare(First Of(Global.extraVar), >=, 20));
            End;
            Press Button(Event Player, Button(Ability 1));
            Wait(6, Ignore Condition);
            Loop If Condition Is True;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Tracer)));
            If(Compare(Normalized Health(Event Player), <=, 0.5));
                Press Button(Event Player, Button(Ability 2));
                Wait(Random Integer(40, 60), Ignore Condition);
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Mercy)));
            Set Ultimate Charge(Event Player, 100);
        Else If(Compare(Hero Of(Event Player), ==, Hero(D.Va)));
            Press Button(Event Player, Button(Ability 1));
            If(Compare(Normalized Health(Event Player), <=, 0.25));
                Start Holding Button(Event Player, Button(Secondary Fire));
                Wait(3, Ignore Condition);
                Stop Holding Button(Event Player, Button(Secondary Fire));
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Mei)));
            If(Compare(Normalized Health(Event Player), <=, 0.4));
                Press Button(Event Player, Button(Ability 1));
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Ana)));
            Press Button(Event Player, Button(Ability 1));
            If(Compare(Normalized Health(Event Player), <=, 0.4));
                Press Button(Event Player, Button(Ability 2));
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Sombra)));
            Press Button(Event Player, Button(Melee));
            Wait(1, Ignore Condition);
            Press Button(Event Player, Button(Ability 2));
            Wait(1.5, Ignore Condition);
            Press Button(Event Player, Button(Ability 1));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Orisa)));
            If(Compare(Normalized Health(Event Player), <=, 0.5));
                Press Button(Event Player, Button(Secondary Fire));
                Press Button(Event Player, Button(Ability 1));
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Ramattra)));
            Press Button(Event Player, Button(Ability 1));
            Wait(8, Ignore Condition);
            Loop;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Wrecking Ball)));
            Press Button(Event Player, Button(Ability 1));
            Press Button(Event Player, Button(Ability 2));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Sojourn)));
            Press Button(Event Player, Button(Ability 1));
            Wait(1, Ignore Condition);
            Press Button(Event Player, Button(Jump));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Ashe)));
            Press Button(Event Player, Button(Ability 2));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Echo)));
            Press Button(Event Player, Button(Secondary Fire));
            Press Button(Event Player, Button(Secondary Fire));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Baptiste)));
            If(Compare(Normalized Health(Event Player), <=, Random Integer(0.5, 0.75)));
                Press Button(Event Player, Button(Ability 1));
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Kiriko)));
            If(Compare(Normalized Health(Event Player), <=, Random Integer(0.5, 0.75)));
                Press Button(Event Player, Button(Ability 2));
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Junker Queen)));
            Press Button(Event Player, Button(Ability 1));
            If(Compare(Distance Between(Event Player, Closest Player To(Event Player, Team 1)), <, 5));
                Press Button(Event Player, Button(Ability 2));
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Sigma)));
            Start Holding Button(Event Player, Button(Secondary Fire));
            Wait(2, Ignore Condition);
            Stop Holding Button(Event Player, Button(Secondary Fire));
            Wait(0.25, Ignore Condition);
            Press Button(Event Player, Button(Secondary Fire));
            If(Compare(Normalized Health(Event Player), <=, Random Integer(0.5, 0.75)));
                Press Button(Event Player, Button(Ability 1));
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Lifeweaver)));
            Press Button(Event Player, Button(Jump));
            Wait(0.3, Ignore Condition);
            Press Button(Event Player, Button(Jump));
            Press Button(Event Player, Button(Ability 1));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Mauga)));
            Press Button(Event Player, Button(Ability 1));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Illari)));
            Press Button(Event Player, Button(Ability 2));
            If(Compare(Normalized Health(Event Player), <=, Random Integer(0.5, 0.75)));
                Press Button(Event Player, Button(Ability 1));
    }
}

rule ("137  bots too far away") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Is Alive(Event Player) == True;
        Distance Between(Event Player, First Of(Sorted Array(If-Then-Else(Compare((Event Player).T, <, 2), All Living Players(Team 1), Empty Array), Current Array Element))) > 25;
    }
    actions {
        "good to keep but might need bigger radius when implementing pathfinding"
        Wait(0.5, Abort When False);
        "also might need to set to ongoing - global, and just teleport them one at a time"
        Teleport(Event Player, Nearest Walkable Position(Add(Multiply(Direction From Angles(Random Real(0, 360), Random Real(-3, 3)), Random Real(10, 20)), Position Of(First Of(All Living Players(Team 1))))));
    }
}

rule ("164 OMNIC brigg hold sheild") {
    event {
        Ongoing - Each Player;
        Team 2;
        Brigitte;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) >= 15;
        Value In Array(Global.extraVar, 15) == False;
    }
    actions {
        Skip If(Compare(Global.powerconnected, ==, 1), 1);
        Skip If(Compare(First Of(Global.extraVar), <, 10), 1);
        //lbl_0:
        Start Holding Button(Event Player, Button(Secondary Fire));
        //lbl_1:
    }
}

rule ("165 OMNIC brigg hold sheild") {
    event {
        Ongoing - Each Player;
        Team 2;
        Brigitte;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) < 12;
    }
    actions {
        Stop Holding Button(Event Player, Button(Secondary Fire));
    }
}

rule ("183 Rule 303 bots spawn idle") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Has Spawned(Event Player) == True;
        Value In Array(Global.extraVar, 15) == True;
    }
    actions {
        "eventPlayer.idlebot = 1"
        Stop Forcing Throttle(Event Player);
    }
}

rule ("184 zombies move if player close") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) < 6;
        Value In Array(Global.extraVar, 15) == True;
    }
    actions {
        Set Player Variable(Event Player, idlebot, 1);
        Start Forcing Throttle(Event Player, 1, 1, 0, 1, 0, 1);
        Communicate(Event Player, Hello);
    }
}

rule ("185 zombie took damage start moving") {
    event {
        Player Took Damage;
        Team 2;
        All;
    }
    conditions {
        (Event Player).idlebot == False;
        Value In Array(Global.extraVar, 15) == True;
    }
    actions {
        Set Player Variable(Event Player, idlebot, 1);
        Start Forcing Throttle(Event Player, 1, 1, 0, 1, 0, 1);
    }
}

rule ("402 Omnic movespeed + health") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Has Spawned(Event Player) == True;
    }
    actions {
        Set Max Health(Event Player, Multiply(5, First Of(Global.extraVar)));
        If(Compare(First Of(Global.extraVar), <=, 6));
            Set Move Speed(Event Player, Add(52, Multiply(8, First Of(Global.extraVar))));
        Else If(Compare(First Of(Global.extraVar), >, 6));
            Set Move Speed(Event Player, 100);
    }
}

rule ("407 OMNIC Bots Move Toward Players") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Global.O == False;
        Value In Array(Global.extraVar, 15) == False;
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) >= 1.75;
    }
    actions {
        Start Forcing Throttle(Event Player, 1, 1, 0, 1, 0, 1);
        Skip If(Compare(Value In Array(Global.extraVar, 9), ==, False), 9);
        Skip If(Compare(Global.powerconnected, ==, 1), 1);
        Skip If(Compare(First Of(Global.extraVar), <, 15), 7);
        //lbl_1:
        Wait(Random Integer(3, 4), Ignore Condition);
        Start Forcing Throttle(Event Player, 1, 1, 0, 1, 1, 1);
        Wait(Random Integer(0.3, 1), Ignore Condition);
        Start Throttle In Direction(Event Player, Left, 1, To Player, Replace existing throttle, Direction and Magnitude);
        Wait(Random Integer(0.3, 1), Ignore Condition);
        Stop Throttle In Direction(Event Player);
        Loop If Condition Is True;
        //lbl_0:
        //lbl_2:
    }
}

rule ("408 OMNIC Bots Face Nearest Player") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        "@Condition eventPlayer.hasSpawned() == true"
        Global.O == False;
    }
    actions {
        "if eventPlayer == Team.2:"
        Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Eye Position(First Of(Sorted Array(Filtered Array(All Living Players(Team 1), Compare((Current Array Element).T, ==, False)), Distance Between(Event Player, Current Array Element))))), 400, To World, Direction and Turn Rate);
    }
}

rule ("409 OMNIC Bots Attack if Near") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) < 1.8;
        Global.O == False;
        Or(Or(Or(Or(Or(Or(Compare(Hero Of(Event Player), ==, Hero(Torbjörn)), First Of(Hero(Brigitte))), First Of(Hero(Winston))), First Of(Hero(Genji))), First Of(Hero(Ramattra))), First Of(Hero(Reaper))), First Of(Hero(Reinhardt))) == True;
    }
    actions {
        Wait(Workshop Setting Real(Custom String("difficulty"), Custom String("zombie reaction time"), 0.35, 0, 1, 0), Abort When False);
        Start Holding Button(Event Player, Button(Primary Fire));
    }
}

rule ("410 OMNIC Bots Dont Attack if Not Near") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) >= 1.8;
        Is Firing Primary(Event Player) == True;
        Is Using Ultimate(Event Player) == False;
        Or(Or(Or(Or(Or(Or(Compare(Hero Of(Event Player), ==, Hero(Torbjörn)), First Of(Hero(Brigitte))), First Of(Hero(Winston))), First Of(Hero(Genji))), First Of(Hero(Ramattra))), First Of(Hero(Reaper))), First Of(Hero(Reinhardt))) == True;
    }
    actions {
        Stop Holding Button(Event Player, Button(Primary Fire));
        Set Ability 2 Enabled(Event Player, True);
    }
}

rule ("411 OMNIC Bots AutoUlt") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Ultimate Charge Percent(Event Player) == 100;
        Hero Of(Event Player) != Hero(Zenyatta);
    }
    actions {
        Wait(Add(Multiply(0.16, Slot Of(Event Player)), 1), Abort When False);
        Press Button(Event Player, Button(Ultimate));
        Wait(Random Integer(0.25, 0.45), Ignore Condition);
        Loop If Condition Is True;
    }
}

rule ("412 OMNIC Bots Ult Attack") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Is Using Ultimate(Event Player) == True;
        Hero Of(Event Player) != Hero(Genji);
        Hero Of(Event Player) != Hero(Moira);
        Hero Of(Event Player) != Hero(Zenyatta);
        Hero Of(Event Player) != Hero(Mercy);
    }
    actions {
        Start Holding Button(Event Player, Button(Primary Fire));
        Wait(2, Ignore Condition);
        Loop If Condition Is True;
    }
}

rule ("413 OMNIC torb use ability") {
    event {
        Ongoing - Each Player;
        Team 2;
        Torbjörn;
    }
    conditions {
        Is Moving(Event Player) == True;
        First Of(Global.extraVar) >= 15;
    }
    actions {
        Press Button(Event Player, Button(Ability 2));
        Wait(5, Ignore Condition);
        Loop;
    }
}

rule ("414 OMNIC rien use ability 2") {
    event {
        Ongoing - Each Player;
        Team 2;
        Reinhardt;
    }
    conditions {
        Is Moving(Event Player) == True;
        First Of(Global.extraVar) >= 26;
    }
    actions {
        Press Button(Event Player, Button(Ability 2));
    }
}

rule ("415 OMNIC brigg wave 16") {
    event {
        Ongoing - Each Player;
        Team 2;
        Brigitte;
    }
    conditions {
        First Of(Global.extraVar) >= 16;
    }
    actions {
        Set Ultimate Charge(Event Player, 100);
        Set Move Speed(Event Player, 120);
    }
}

rule ("417 OMNIC torb use ability") {
    event {
        Ongoing - Each Player;
        Team 2;
        Torbjörn;
    }
    conditions {
        Is Moving(Event Player) == True;
        Global.powerconnected == 1;
        First Of(Global.extraVar) < 15;
    }
    actions {
        Press Button(Event Player, Button(Ability 2));
        Wait(5, Ignore Condition);
        Loop;
    }
}

rule ("419 OMNIC set winston always has ult") {
    event {
        Ongoing - Each Player;
        Team 2;
        Winston;
    }
    conditions {
        Has Spawned(Event Player) == True;
    }
    actions {
        Set Ultimate Charge(Event Player, 100);
    }
}

rule ("420 OMNIC set genji always has ult") {
    event {
        Ongoing - Each Player;
        Team 2;
        Genji;
    }
    conditions {
        Has Spawned(Event Player) == True;
    }
    actions {
        Set Ultimate Charge(Event Player, 100);
    }
}

rule ("422 OMNIC Dont Attack if Not Near genji") {
    event {
        Ongoing - Each Player;
        Team 2;
        Genji;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) >= 1.8;
        Is Firing Primary(Event Player) == True;
    }
    actions {
        Stop Holding Button(Event Player, Button(Primary Fire));
    }
}

rule ("423 OMNIC genji use reflect after hitting player") {
    event {
        Player Dealt Damage;
        Team 2;
        Genji;
    }
    actions {
        Press Button(Event Player, Button(Ability 2));
    }
}

rule ("424 OMNIC moira Attack if Near") {
    event {
        Ongoing - Each Player;
        Team 2;
        Moira;
    }
    conditions {
        Distance Between(Event Player, Closest Player To(Event Player, Team 1)) < 1.8;
        Global.O == False;
    }
    actions {
        Wait(0.49, Abort When False);
        Press Button(Event Player, Button(Melee));
        Loop If Condition Is True;
    }
}

rule ("425 OMNIC moira fade if far away") {
    event {
        Ongoing - Each Player;
        Team 2;
        Moira;
    }
    conditions {
        Distance Between(Event Player, First Of(Sorted Array(If-Then-Else(Compare((Event Player).T, ==, False), All Living Players(Team 1), Empty Array), Current Array Element))) > 8;
    }
    actions {
        Press Button(Event Player, Button(Ability 1));
        Wait(5, Ignore Condition);
        Loop If Condition Is True;
    }
}

rule ("Torbjorn pack a punch Dispencer active") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Players Within Radius(Value In Array(Global.extraVar, 11), 3.5, Team 1, Surfaces And Enemy Barriers) == True;
        Value In Array(Global.extraVar, 16) == 1;
    }
    actions {
        Wait(0.5, Abort When False);
        Heal(Event Player, Null, 20);
        Modify Player Variable(Event Player, currentmagazines, Add, 0.2);
        Wait(0.5, Abort When False);
        Loop If Condition Is True;
    }
}

rule ("give pack a punch a sound") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Value In Array((Event Player).extraPlayerVar, 12) >= 1;
        Server Load < 220;
        "this needs to check if secondary fire is the gun or not"
        Or(Is Firing Primary(Event Player), Is Firing Secondary(Event Player)) == True;
    }
    actions {
        If(Is Firing Primary(Event Player));
            If(Array Contains(Array(Hero(Cassidy), Hero(Cassidy), Hero(Cassidy), Hero(Cassidy), Hero(Cassidy)), Hero Of(Event Player)));
                Call Subroutine(PaPsound);
            End;
        Else If(Is Firing Secondary(Event Player));
            If(Array Contains(Array(Hero(Cassidy), Hero(Cassidy), Hero(Cassidy), Hero(Cassidy), Hero(Cassidy)), Hero Of(Event Player)));
                Call Subroutine(PaPsound);
    }
}

rule ("Pack a punch Ongoing - player") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        Value In Array((Event Player).extraPlayerVar, 12) >= 1;
        Or(Or(Or(Or(Is Using Ability 1(Event Player), Is Using Ability 2(Event Player)), Is Using Ultimate(Event Player)), Is Firing Primary(Event Player)), Is Firing Secondary(Event Player)) == True;
    }
    actions {
        If(Compare(Hero Of(Event Player), ==, Hero(Ashe)));
            If(Event Was Critical Hit);
                "fix this and the positions for status, and damage over time. - dealt damage"
                Set Status(Ray Cast Hit Player(Event Player, Vector(0, 0, 0), All Players(Team 2), All Players(Team 1), True), Event Player, Burning, 4);
                Start Damage Over Time(Ray Cast Hit Player(Vector(0, 0, 0), Vector(0, 0, 0), All Players(Team 2), Event Player, True), Event Player, 4, 150);
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Baptiste)));
            If(Is Using Ability 1(Event Player));
                Remove All Health Pools From Player(Event Player);
                Wait(0.016, Ignore Condition);
                Add Health Pool To Player(Event Player, Health, 100, False, False);
            End;
        Else If(Is Firing Primary(Event Player));
            If(Compare(Hero Of(Event Player), ==, Hero(Bastion)));
                If(Is In Alternate Form(Event Player));
                    Wait(0.5, Abort When False);
                    Create Homing Projectile(Pharah Rocket, Event Player, Add(Eye Position(Event Player), Facing Direction Of(Event Player)), Facing Direction Of(Event Player), To World, Damage, Team 2, 500, 1, 15, Ashe Dynamite Explosion Effect, Explosion Sound, 0.2, 25, 5, 0, All Living Players(Team 2), 0.5);
                    Wait(1.5, Abort When False);
                    Loop If Condition Is True;
                End;
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Torbjörn)));
            If(Compare(Value In Array(Global.extraVar, 16), ==, False));
                If(Is Communicating(Event Player, Need Healing));
                    Set Player Variable(Event Player, dispencereffect, Empty Array);
                    Wait(0.016, Ignore Condition);
                    Create Effect(All Players(All Teams), Sphere, Color(Green), Position Of(Event Player), 0.8, Visible To);
                    Modify Player Variable(Event Player, dispencereffect, Append To Array, Last Created Entity);
                    Wait(0.016, Ignore Condition);
                    Create Effect(All Players(All Teams), Sphere, Color(Green), Add(Vector(0, 1.3, 0), Position Of(Event Player)), 0.8, Visible To);
                    Modify Player Variable(Event Player, dispencereffect, Append To Array, Last Created Entity);
                    Wait(0.016, Ignore Condition);
                    Create Effect(All Players(All Teams), Ring, Color(Green), Position Of(Event Player), 3.5, Visible To);
                    Modify Player Variable(Event Player, dispencereffect, Append To Array, Last Created Entity);
                    Set Global Variable At Index(extraVar, 11, Evaluate Once(Position Of(Event Player)));
                    Set Global Variable At Index(extraVar, 16, 1);
                    Wait(30, Ignore Condition);
                    Set Global Variable At Index(extraVar, 16, 2);
                    Play Effect(Event Player, Debuff Impact Sound, Color(White), Event Player, 60);
                    Wait(0.1, Ignore Condition);
                    Destroy Effect(First Of((Event Player).dispencereffect));
                    Destroy Effect(Value In Array((Event Player).dispencereffect, 1));
                    Destroy Effect(Value In Array((Event Player).dispencereffect, 2));
                    Wait(0.1, Ignore Condition);
                    Modify Player Variable At Index(Event Player, dispencereffect, 0, Remove From Array By Index, 0);
                    Modify Player Variable At Index(Event Player, dispencereffect, 1, Remove From Array By Index, 0);
                    Modify Player Variable At Index(Event Player, dispencereffect, 2, Remove From Array By Index, 0);
                    Wait(60, Ignore Condition);
                    Set Global Variable At Index(extraVar, 16, False);
                End;
            End;
        Else If(Is Firing Secondary(Event Player));
            If(Compare(Hero Of(Event Player), ==, Hero(Roadhog)));
                If(Compare(Ability Resource(Event Player, Button(Secondary Fire)), >, 0));
                    Start Heal Over Time(Players Within Radius(Event Player, 5, Team 1, Surfaces And Enemy Barriers), Event Player, 2, 20);
                    Create Effect(All Players(Team 1), Ring, Color(Orange), Event Player, 5, Visible To Position and Radius);
                    Wait Until(False, 5);
                    Destroy Effect(Last Created Entity);
                End;
            Else If(Compare(Hero Of(Event Player), ==, Hero(Soldier: 76)));
                Create Homing Projectile(Pharah Rocket, Event Player, Add(Eye Position(Event Player), Facing Direction Of(Event Player)), Facing Direction Of(Event Player), To World, Damage, Team 2, 500, 1, 15, Ashe Dynamite Explosion Effect, Explosion Sound, 0.2, 25, 5, 0, All Living Players(Team 2), 0.5);
            Else If(Compare(Hero Of(Event Player), ==, Hero(Echo)));
                "needs more than 1 but will fix later"
                Create Homing Projectile(Echo Sticky Bomb, Event Player, Add(Eye Position(Event Player), Facing Direction Of(Event Player)), Facing Direction Of(Event Player), To World, Damage, Team 2, 500, 1, 15, Ashe Dynamite Explosion Effect, Explosion Sound, 0.2, 25, 5, 0, All Living Players(Team 2), 0.5);
                Wait(0.2, Abort When False);
                Loop If Condition Is True;
            Else If(Compare(Hero Of(Event Player), ==, Hero(Juno)));
                Create Homing Projectile(Echo Sticky Bomb, Event Player, Add(Eye Position(Event Player), Facing Direction Of(Event Player)), Facing Direction Of(Event Player), To World, Damage, Team 2, 500, 1, 15, Ashe Dynamite Explosion Effect, Explosion Sound, 0, 25, 5, 0, All Living Players(Team 2), 0.5);
                Wait(0.15, Abort When False);
                Loop If Condition Is True;
            End;
        Else If(Is Using Ultimate(Event Player));
            If(Compare(Hero Of(Event Player), ==, Hero(Winston)));
                Set Status(Event Player, Event Player, Unkillable, 10);
            Else If(Compare(Hero Of(Event Player), ==, Hero(Symmetra)));
                Set Status(Event Player, Null, Phased Out, 10);
            Else If(Compare(Hero Of(Event Player), ==, Hero(Reinhardt)));
                Set Status(All Living Players(Team 1), Event Player, Knocked Down, 8);
            Else If(Compare(Hero Of(Event Player), ==, Hero(Brigitte)));
                Start Scaling Player(Event Player, 1.5, True);
                Add Health Pool To Player(Event Player, Health, 1000, False, False);
                Wait(8, Ignore Condition);
                Stop Scaling Player(Event Player);
                Remove All Health Pools From Player(Event Player);
            Else If(Compare(Hero Of(Event Player), ==, Hero(Zenyatta)));
                Damage(Players Within Radius(Event Player, 10.5, Team 2, Surfaces And Enemy Barriers), Event Player, 300);
                Wait(1, Abort When False);
                Loop If Condition Is True;
            Else If(Compare(Hero Of(Event Player), ==, Hero(Zarya)));
                If(Is Using Ability 1(Event Player));
                    Set Ability Cooldown(Event Player, Button(Ability 1), 0);
                Else If(Is Using Ability 2(Event Player));
                    Set Ability Cooldown(Event Player, Button(Ability 2), 0);
                End;
            Else If(Compare(Hero Of(Event Player), ==, Hero(Widowmaker)));
                Set Player Variable(Event Player, T, 1);
                If(Compare(Number Of Players(Team 1), <, 2));
                    Wait Until(False, 4);
                    Set Player Variable(Event Player, T, False);
                Else If(Compare(Number Of Players(Team 1), >=, 2));
                    Wait Until(False, 16);
                    Set Player Variable(Event Player, T, False);
                End;
            Else If(Compare(Hero Of(Event Player), ==, Hero(Lúcio)));
                Set Status(Players Within Radius(Event Player, 3, Team 2, Surfaces And Enemy Barriers), Event Player, Rooted, 3);
            Else If(Compare(Hero Of(Event Player), ==, Hero(Ramattra)));
                Modify Player Variable(All Living Players(Team 1), points, Add, 1000);
                Modify Player Variable(All Living Players(Team 1), magazines, Add, 5);
            Else If(Compare(Hero Of(Event Player), ==, Hero(Genji)));
                If(Is Firing Primary(Event Player));
                    Create Projectile(Reinhardt Fire Strike, Event Player, Eye Position(Event Player), Facing Direction Of(Event Player), To World, Damage, Team 2, 300, 1, 0, Bad Explosion, Explosion Sound, 0, 10, 5, 0, 0, 0);
                End;
            Else If(Compare(Hero Of(Event Player), ==, Hero(Orisa)));
                Start Scaling Player(Event Player, 2, True);
                Set Damage Dealt(Event Player, 1000);
                Wait Until(False, 8);
                Start Scaling Player(Event Player, 1, True);
                Set Damage Dealt(Event Player, Value In Array((Event Player).extraPlayerVar, 4));
            Else If(Compare(Hero Of(Event Player), ==, Hero(Kiriko)));
                Set Move Speed(Players Within Radius(Event Player, 15, Team 2, Off), 50);
                Wait(8, Ignore Condition);
                If(Compare(First Of(Global.extraVar), <=, 6));
                    Set Move Speed(All Players(Team 2), Add(52, Multiply(8, First Of(Global.extraVar))));
                Else If(Compare(First Of(Global.extraVar), >, 6));
                    Set Move Speed(All Players(Team 2), 100);
                End;
            End;
        Else If(Is Using Ability 1(Event Player));
            If(Compare(Hero Of(Event Player), ==, Hero(Sojourn)));
                Set Status(Players Within Radius(Event Player, 3, Team 2, Off), Event Player, Knocked Down, 4);
            End;
        Else If(Is Using Ability 2(Event Player));
            If(Compare(Hero Of(Event Player), ==, Hero(Tracer)));
                Set Status(Players Within Radius(Evaluate Once(Position Of(Event Player)), 5, Team 2, Off), Event Player, Stunned, 4);
            Else If(Compare(Hero Of(Event Player), ==, Hero(Sombra)));
                Wait(1, Ignore Condition);
                Set Player Variable(Event Player, T, 1);
                Wait(4, Ignore Condition);
                Set Player Variable(Event Player, T, False);
            Else If(Compare(Hero Of(Event Player), ==, Hero(D.Va)));
                Wait(0.2, Abort When False);
                Create Homing Projectile(Pharah Rocket, Event Player, Add(Eye Position(Event Player), Facing Direction Of(Event Player)), Facing Direction Of(Event Player), To World, Damage, Team 2, 400, 1, 15, Ashe Dynamite Explosion Effect, Explosion Sound, 0, 25, 5, 0, All Living Players(Team 2), 0.5);
            Else If(Compare(Hero Of(Event Player), ==, Hero(Lifeweaver)));
                Add Health Pool To Player(Players in View Angle(Event Player, Team 1, 5), Health, 100, False, False);
            Else If(Compare(Hero Of(Event Player), ==, Hero(Pharah)));
                Create Homing Projectile(Pharah Rocket, Event Player, Add(Eye Position(Event Player), Facing Direction Of(Event Player)), Facing Direction Of(Event Player), To World, Damage, Team 2, 500, 1, 15, Ashe Dynamite Explosion Effect, Explosion Sound, 0.2, 25, 5, 0, All Living Players(Team 2), 0.5);
                Wait(0.2, Abort When False);
                Loop If Condition Is True;
    }
}

rule ("Pack a Punch - Damage dealt") {
    event {
        Player Dealt Damage;
        Team 1;
        All;
    }
    conditions {
        Array Contains(Array(Hero(Soldier: 76), Hero(Cassidy), Hero(Sigma), Hero(Junkrat), Hero(Moira), Hero(Brigitte), Hero(Doomfist)), Hero Of(Event Player)) == True;
        Value In Array((Event Player).extraPlayerVar, 12) >= 1;
        Or(Or(Or(Or(Is Using Ability 1(Event Player), Is Using Ability 2(Event Player)), Is Using Ultimate(Event Player)), Is Firing Primary(Event Player)), Is Firing Secondary(Event Player)) == True;
    }
    actions {
        If(Compare(Hero Of(Attacker), ==, Hero(Cassidy)));
            If(Is Button Held(Event Player, Button(Primary Fire)));
                Damage(Players Within Radius(Victim, 3, Team 2, Off), Attacker, 420);
                Play Effect(All Players(All Teams), Good Explosion, Color(White), Victim, 3);
                Wait(0.45, Ignore Condition);
            End;
        Else If(Compare(Hero Of(Attacker), ==, Hero(Sigma)));
            Damage(Players Within Radius(Victim, 5, All Teams, Off), Event Player, 200);
            Play Effect(All Players(All Teams), Good Explosion, Color(Blue), Victim, 5);
        Else If(Compare(Hero Of(Attacker), ==, Hero(Junkrat)));
            Play Effect(All Players(All Teams), Good Explosion, Color(Orange), Victim, 8);
            "make sure this doesnt damage self"
            Damage(Players Within Radius(Victim, 8, Team 2, Off), Attacker, 300);
        Else If(Is Using Ultimate(Event Player));
            If(Compare(Hero Of(Attacker), ==, Hero(Moira)));
                Set Status(Victim, Event Player, Rooted, 4);
                Wait(0.25, Ignore Condition);
            Else If(Compare(Hero Of(Attacker), ==, Hero(Moira)));
                Play Effect(All Players(All Teams), Good Explosion, Color(Blue), Victim, 5);
                Damage(Players Within Radius(Victim, 5, Team 2, Off), Attacker, 400);
            Else If(Compare(Hero Of(Attacker), ==, Hero(Brigitte)));
                If(Has Status(Victim, Stunned));
                    Set Status(Victim, Event Player, Knocked Down, 4);
                End;
            Else If(Is Using Ability 1(Event Player));
                If(Compare(Hero Of(Attacker), ==, Hero(Doomfist)));
                    Set Status(Victim, Event Player, Knocked Down, 4);
    }
}

rule ("") {
    event {
        Player Dealt Final Blow;
        Team 1;
        All;
    }
    conditions {
        Array Contains(Array(Hero(Venture), Hero(Mauga), Hero(Sigma)), Hero Of(Event Player)) == True;
        Value In Array((Event Player).extraPlayerVar, 12) >= 1;
        Or(Or(Or(Or(Or(Is Using Ability 1(Event Player), Is Using Ability 2(Event Player)), Is Using Ultimate(Event Player)), Is Firing Primary(Event Player)), Is Firing Secondary(Event Player)), Is Meleeing(Event Player)) == True;
    }
    actions {
        If(Compare(Hero Of(Attacker), ==, Hero(Venture)));
            If(Is Meleeing(Event Player));
                Play Effect(All Players(All Teams), Good Explosion, Color(Blue), Victim, 5);
                Damage(Players Within Radius(Victim, 5, All Teams, Off), Attacker, 800);
            End;
        Else If(Compare(Hero Of(Attacker), ==, Hero(Mauga)));
            Set Ability Cooldown(Event Player, Button(Ability 1), 0);
            Set Ability Cooldown(Event Player, Button(Ability 2), 0);
        Else If(Compare(Hero Of(Attacker), ==, Hero(Sigma)));
            Modify Player Variable(Event Player, points, Add, 50);
    }
}

rule ("23 Initiate Health, Damage, and Healing Variables") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        "outdated rule need new variable names and more variables here for all perks"
        Has Spawned(Event Player) == True;
        Value In Array((Event Player).extraPlayerVar, 3) == False;
    }
    actions {
        Set Player Variable At Index(Event Player, extraPlayerVar, 3, 50);
        Set Player Variable At Index(Event Player, extraPlayerVar, 4, 100);
        Set Player Variable At Index(Event Player, extraPlayerVar, 5, 100);
    }
}

rule ("55  starting hero set") {
    event {
        Player Joined Match;
        All;
        All;
    }
    actions {
        Start Forcing Player To Be Hero(Event Player, Hero(Cassidy));
    }
}

rule ("56  points loss for high roller") {
    event {
        Player Died;
        Team 1;
        All;
    }
    conditions {
        (Event Player).points >= 3000;
    }
    actions {
        Modify Player Variable(Event Player, points, Subtract, Multiply((Event Player).points, 0.2));
        Set Player Variable(Event Player, points, Round To Integer((Event Player).points, Up));
    }
}

rule ("57  death points loss") {
    event {
        Player Died;
        Team 1;
        All;
    }
    conditions {
        (Event Player).points >= 1000;
    }
    actions {
        Modify Player Variable(Event Player, points, Subtract, Multiply(200, (Event Player).H));
        Set Player Variable(Event Player, points, Round To Integer((Event Player).points, Up));
    }
}

rule ("58  Single player lives mechanic") {
    event {
        Player Died;
        Team 1;
        All;
    }
    conditions {
        Number Of Players(Team 1) == 1;
        Value In Array((Event Player).extraPlayerVar, 11) < 3;
    }
    actions {
        Resurrect(Event Player);
        Wait(0.05, Ignore Condition);
        Set Status(Event Player, Null, Knocked Down, 2);
        Set Status(Event Player, Null, Phased Out, 10);
        Modify Player Variable At Index(Event Player, extraPlayerVar, 11, Add, 1);
    }
}

rule ("59 DAMAGE Melee does more damage") {
    event {
        Player Dealt Damage;
        Team 1;
        All;
    }
    conditions {
        Is Meleeing(Event Player) == True;
    }
    actions {
        Damage(Victim, Event Player, 150);
    }
}

rule ("67 solo play mode effect") {
    event {
        Player Joined Match;
        Team 1;
        All;
    }
    conditions {
        Number Of Players(Team 1) < 2;
        Value In Array(Global.extraVar, 3) == 1;
    }
    actions {
        "might make this a perk that the player can buy, instead of just having"
        Wait(15, Ignore Condition);
        Abort If Condition Is False;
        Big Message(All Players(All Teams), Custom String("SOLO MODE: YOU NOW HAVE 3 LIVES TOTAL"));
    }
}

rule ("switch between 2 heros (needs ultimates, followers, ammo, systems working)") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Button Held(Event Player, Button(Crouch)) == True;
        Is Alive(Event Player) == True;
    }
    actions {
        If(Compare(Server Load Average, <, 220));
            Play Effect(All Players(All Teams), Moira Fade Disappear Sound, Color(White), Event Player, 200);
            Remove All Health Pools From Player(Event Player);
            If(Compare((Event Player).currentswap, ==, False));
                Set Player Variable(Event Player, swapvar, Array(1, 0, 0, 1, 2));
                Wait(0.016, Ignore Condition);
                Call Subroutine(heroswap);
            Else If(Compare((Event Player).currentswap, ==, 1));
                Set Player Variable(Event Player, swapvar, Array(0, 1, 3, 4, 5));
                Wait(0.016, Ignore Condition);
                Call Subroutine(heroswap);
            End;
            Start Forcing Player To Be Hero(Event Player, Value In Array((Event Player).heroswap, (Event Player).currentswap));
            Set Player Health(Event Player, Value In Array((Event Player).herohp, First Of((Event Player).swap)));
            Set Ability Cooldown(Event Player, Button(Ability 1), Value In Array((Event Player).abilitycooldown, Value In Array((Event Player).swap, 2)));
            Set Ability Cooldown(Event Player, Button(Ability 2), Value In Array((Event Player).abilitycooldown, Value In Array((Event Player).swap, 3)));
            Set Ability Cooldown(Event Player, Button(Secondary Fire), Value In Array((Event Player).abilitycooldown, Value In Array((Event Player).swap, 4)));
            Set Ultimate Charge(Event Player, (Event Player).currentultcharge);
            Play Effect(All Players(All Teams), Moira Fade Disappear Effect, Color(White), Event Player, 1);
            Wait(1, Ignore Condition);
        Else If(Compare(Server Load Average, >=, 220));
            Small Message(All Players(All Teams), Custom String("{0} Error: {1} Not on my watch! (--anticrashsys--)", Hero Icon String(Hero(Ramattra)), Random Integer(10, 1000)));
            Wait(6, Ignore Condition);
    }
}

rule ("18 Get out of Spawn") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        "need to make sure this doesnt conflict with soft restart"
        Is In Spawn Room(Event Player) == True;
        Value In Array(Global.extraVar, 26) == 1;
    }
    actions {
        "should be able to make this a subroutine"
        Wait(1, Ignore Condition);
        If(Compare(Global.setspawn, ==, False));
            Teleport(Event Player, Vector(-63.355, -148.766, -17.141));
            Set Global Variable At Index(extraVar, 24, False);
            Start Forcing Spawn Room(All Teams, 1);
            Set Global Variable At Index(extraVar, 12, 101);
        Else If(Compare(Global.setspawn, ==, 1));
            Teleport(Event Player, Vector(-65.701, -150.372, 136.652));
            Set Global Variable At Index(extraVar, 24, False);
            Start Forcing Spawn Room(All Teams, 1);
            Set Global Variable At Index(extraVar, 12, 101);
        Else If(Compare(Global.setspawn, ==, 2));
            Teleport(Event Player, Vector(354.63, 46.375, 181.943));
            Set Global Variable At Index(extraVar, 24, 1);
            Start Forcing Spawn Room(All Teams, 0);
            Set Global Variable At Index(extraVar, 12, 102);
        Else If(Compare(Global.setspawn, ==, 3));
            Teleport(Event Player, Vector(185.152, 46.154, 185.661));
            Set Global Variable At Index(extraVar, 24, 1);
            Start Forcing Spawn Room(All Teams, 0);
            Set Global Variable At Index(extraVar, 12, 102);
        Else If(Compare(Global.setspawn, ==, 4));
            Teleport(Event Player, Vector(367.509, -8.358, -241.533));
            Set Global Variable At Index(extraVar, 24, 2);
            Start Forcing Spawn Room(All Teams, 2);
            Set Global Variable At Index(extraVar, 12, 103);
        Else If(Compare(Global.setspawn, ==, 5));
            Teleport(Event Player, Vector(200.42, -8.412, -242.411));
            Set Global Variable At Index(extraVar, 24, 2);
            Start Forcing Spawn Room(All Teams, 2);
            Set Global Variable At Index(extraVar, 12, 103);
    }
}

rule ("77 multiplayer extra life Perk") {
    event {
        Player Died;
        Team 1;
        All;
    }
    conditions {
        Value In Array((Event Player).extraPlayerVar, 14) == 1;
    }
    actions {
        "should set this to be a quick revive perk"
        Set Status(Event Player, Null, Knocked Down, 2);
        Resurrect(Event Player);
        Set Status(Event Player, Null, Invincible, 10);
        Set Player Variable At Index(Event Player, extraPlayerVar, 14, False);
    }
}

rule ("79 player died with maniac") {
    event {
        Player Died;
        Team 1;
        All;
    }
    conditions {
        Value In Array((Event Player).extraPlayerVar, 13) == 1;
    }
    actions {
        Set Global Variable At Index(Died, Slot Of(Event Player), Nearest Walkable Position(Event Player));
        Big Message(All Players(All Teams), Custom String("{0} {1}", Event Player, Random Value In Array(Global.diedphrase)));
        Set Global Variable At Index(E, Slot Of(Event Player), True);
        Set Max Health(Event Player, 100);
        Wait(0.016, Ignore Condition);
        Set Player Variable At Index(Event Player, extraPlayerVar, 10, False);
        Wait(0.016, Ignore Condition);
        Set Player Variable At Index(Event Player, extraPlayerVar, 3, 50);
        Set Player Variable At Index(Event Player, extraPlayerVar, 13, False);
        Wait(0.016, Ignore Condition);
        Set Damage Dealt(Event Player, 100);
        Set Player Variable At Index(Event Player, extraPlayerVar, 4, 100);
        Wait(0.016, Ignore Condition);
        Set Player Variable At Index(Event Player, extraPlayerVar, 5, 100);
        Set Healing Dealt(Event Player, 100);
        Set Player Variable At Index(Event Player, extraPlayerVar, 1, False);
        Wait(0.1, Ignore Condition);
        Set Player Variable At Index(Event Player, extraPlayerVar, 2, False);
    }
}

rule ("80 player died without maniac") {
    event {
        Player Died;
        Team 1;
        All;
    }
    conditions {
        Value In Array((Event Player).extraPlayerVar, 13) == False;
    }
    actions {
        Set Global Variable At Index(Died, Slot Of(Event Player), Nearest Walkable Position(Event Player));
        Big Message(All Players(All Teams), Custom String("{0} {1}", Event Player, String("{0}!", String("Down"))));
        Set Max Health(Event Player, 100);
        Set Global Variable At Index(E, Slot Of(Event Player), True);
        Wait(0.1, Ignore Condition);
        Set Player Variable At Index(Event Player, extraPlayerVar, 10, False);
        Wait(0.1, Ignore Condition);
        Set Player Variable At Index(Event Player, extraPlayerVar, 3, 50);
        Wait(0.1, Ignore Condition);
        Set Player Variable At Index(Event Player, extraPlayerVar, 5, 100);
        Wait(0.1, Ignore Condition);
        Set Healing Dealt(Event Player, 100);
        Set Player Variable At Index(Event Player, extraPlayerVar, 1, False);
        Wait(0.1, Ignore Condition);
        Set Player Variable At Index(Event Player, extraPlayerVar, 2, False);
        Destroy Dummy Bot(Team 1, Add(Slot Of(Event Player), 4));
    }
}

rule ("81 Died Low points Bonus") {
    event {
        Player Died;
        Team 1;
        All;
    }
    conditions {
        (Event Player).points < 1500;
        First Of(Global.extraVar) > 5;
    }
    actions {
        Set Player Variable(Event Player, points, 1500);
    }
}

rule ("84 reloading all heros without doublemag") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        "can be made into one rule with or without perk"
        Is Reloading(Event Player) == True;
        Value In Array((Event Player).extraPlayerVar, 1) == False;
    }
    actions {
        Modify Player Variable(Event Player, currentmagazines, Subtract, 1);
    }
}

rule ("89 out of ammo") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        "can just have an if else statement for specific heros"
        Hero Of(Event Player) != Hero(Moira);
        Hero Of(Event Player) != Hero(Mercy);
        Hero Of(Event Player) != Hero(Reinhardt);
        Hero Of(Event Player) != Hero(Brigitte);
        Hero Of(Event Player) != Hero(Torbjörn);
        Hero Of(Event Player) != Hero(Mei);
        Is Dummy Bot(Event Player) == False;
    }
    actions {
        If(Compare((Event Player).currentmagazines, <=, 0));
            Set Primary Fire Enabled(Event Player, False);
            Set Secondary Fire Enabled(Event Player, False);
    }
}

rule ("90 initialize ammo amount") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    actions {
        Set Player Variable At Index(Event Player, magazines, 0, 5);
        Set Player Variable At Index(Event Player, magazines, 1, 5);
        Set Player Variable(Event Player, currentmagazines, First Of((Event Player).magazines));
        Set Player Variable(Event Player, currentswap, False);
        Disallow Button(Event Player, Button(Crouch));
        Set Player Variable At Index(Event Player, ultcharge, 0, False);
        Set Player Variable At Index(Event Player, ultcharge, 1, False);
        Wait(0.016, Ignore Condition);
        Set Player Variable(Event Player, currentultcharge, First Of((Event Player).ultcharge));
        Wait(0.016, Ignore Condition);
        Set Ultimate Charge(Event Player, First Of((Event Player).ultcharge));
    }
}

rule ("91 enable guns when they have ammo") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        (Event Player).currentmagazines > 0;
        Hero Of(Event Player) != Hero(Mei);
    }
    actions {
        Set Primary Fire Enabled(Event Player, True);
        Set Secondary Fire Enabled(Event Player, True);
    }
}

rule ("94 out of ammo moira") {
    event {
        Ongoing - Each Player;
        All;
        Moira;
    }
    conditions {
        (Event Player).currentmagazines <= 0;
    }
    actions {
        Set Secondary Fire Enabled(Event Player, False);
    }
}

rule ("96 mercy disable gun if no ammo") {
    event {
        Ongoing - Each Player;
        Team 1;
        Mercy;
    }
    conditions {
        Weapon(Event Player) == 2;
        (Event Player).magazines <= 0;
    }
    actions {
        Set Weapon(Event Player, 1);
    }
}

rule ("97 torb disable gun if no ammo") {
    event {
        Ongoing - Each Player;
        Team 1;
        Torbjörn;
    }
    conditions {
        Weapon(Event Player) == 1;
        (Event Player).magazines <= 0;
    }
    actions {
        Set Weapon(Event Player, 2);
    }
}

rule ("98  reloading with doublemag") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        Is Reloading(Event Player) == True;
        Value In Array((Event Player).extraPlayerVar, 1) == 1;
    }
    actions {
        Modify Player Variable(Event Player, currentmagazines, Subtract, 0.5);
    }
}

rule ("99  hero ultimate adjustments") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Using Ultimate(Event Player) == True;
    }
    actions {
        If(Compare(Hero Of(Event Player), ==, Hero(Ashe)));
            Set Damage Dealt(Event Player, 300);
            Wait(10, Ignore Condition);
            Set Damage Dealt(Event Player, 100);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Widowmaker)));
            Set Damage Dealt(All Players(Team 1), 300);
            Wait(12.5, Ignore Condition);
            Set Damage Dealt(All Players(Team 1), 100);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Symmetra)));
            Add Health Pool To Player(All Living Players(Team 1), Health, 200, False, True);
            Wait(12.5, Ignore Condition);
            Remove Health Pool From Player(Last Created Health Pool);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Junkrat)));
            Set Status(Event Player, Null, Phased Out, 10);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Mercy)));
            Resurrect(All Dead Players(Team 1));
        Else If(Compare(Hero Of(Event Player), ==, Hero(Zenyatta)));
            Set Status(Event Player, Null, Phased Out, 6);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Cassidy)));
            Set Gravity(Event Player, 0);
            Wait Until(False, 7);
            Set Gravity(Event Player, 100);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Lúcio)));
            Add Health Pool To Player(All Living Players(Team 1), Health, 500, False, False);
            Wait(10, Ignore Condition);
            Remove All Health Pools From Player(All Living Players(Team 1));
    }
}

rule ("103  remove less than zero issue on ammo") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        (Event Player).currentmagazines < 0;
    }
    actions {
        Set Player Variable(Event Player, currentmagazines, False);
    }
}

rule ("104 fix reload disabled") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Hero Of(Event Player) != Hero(Ashe);
    }
    actions {
        Allow Button(Event Player, Button(Reload));
    }
}

rule ("109 PERK player hit speed boost sprint burst") {
    event {
        Player Took Damage;
        Team 1;
        All;
    }
    conditions {
        Event Damage == True;
        Value In Array((Event Player).extraPlayerVar, 2) == 1;
    }
    actions {
        Set Move Speed(Event Player, 180);
        Wait(1, Ignore Condition);
        Set Move Speed(Event Player, 105);
    }
}

rule ("110 player hit speed boost default") {
    event {
        Player Took Damage;
        Team 1;
        All;
    }
    conditions {
        Event Damage == True;
        Value In Array((Event Player).extraPlayerVar, 2) == False;
        "change this and many other features to be dependant on difficulty"
        Workshop Setting Toggle(Custom String("difficulty"), Custom String("speed boost when hit"), True, 0) == True;
    }
    actions {
        Set Move Speed(Event Player, 150);
        Wait(1, Ignore Condition);
        Set Move Speed(Event Player, 100);
    }
}

rule ("113  ashe reload fix") {
    event {
        Ongoing - Each Player;
        Team 1;
        Ashe;
    }
    conditions {
        Is Reloading(Event Player) == True;
    }
    actions {
        Set Ammo(Event Player, 0, 12);
    }
}

rule ("115  ammo message force melee when out of ammo") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        (Event Player).currentmagazines == False;
        Is Button Held(Event Player, Button(Primary Fire)) == True;
    }
    actions {
        Small Message(Event Player, Custom String("NO AMMO"));
        Big Message(Event Player, Custom String("USE MELEE"));
        Wait(5, Ignore Condition);
        Small Message(Event Player, Custom String("MELEE BONUS DAMAGE"));
        Wait(5, Ignore Condition);
        Small Message(Event Player, Custom String("buy any hero for more ammo"));
    }
}

disabled rule ("set allowed heros (wip)") {
    event {
        Player Joined Match;
        All;
        All;
    }
    actions {
        "this needs to store what heroes the player has purchased through their playthrough"
        Set Player Allowed Heroes(Event Player, Empty Array);
    }
}

rule ("126 healing dealt points") {
    event {
        Player Received Healing;
        Team 1;
        All;
    }
    conditions {
        Healee != Healer;
    }
    actions {
        Modify Player Variable(Healer, points, Add, 20);
        Wait(0.25, Ignore Condition);
    }
}

rule ("158 melee stun") {
    event {
        Player Took Damage;
        Team 2;
        All;
    }
    conditions {
        Workshop Setting Toggle(Custom String("difficulty"), Custom String("melee stun"), True, 0) == True;
        Is Meleeing(Attacker) == True;
        Distance Between(Attacker, Victim) <= 3;
    }
    actions {
        Set Status(Event Player, Null, Stunned, 1);
    }
}

rule ("161 life weiver no ammo") {
    event {
        Ongoing - Each Player;
        Team 1;
        Lifeweaver;
    }
    conditions {
        (Event Player).currentmagazines == False;
    }
    actions {
        "this doesnt seem to work, need to measure time instead of reloads"
        Disallow Button(Event Player, Button(Primary Fire));
        Disallow Button(Event Player, Button(Secondary Fire));
    }
}

rule ("160 life weaver ammo") {
    event {
        Ongoing - Each Player;
        Team 1;
        Lifeweaver;
    }
    conditions {
        Is Reloading(Event Player) == False;
        Is Button Held(Event Player, Button(Secondary Fire)) == True;
    }
    actions {
        Modify Player Variable(Event Player, currentmagazines, Subtract, 0.025);
        Wait(0.1, Ignore Condition);
        Loop If Condition Is True;
    }
}

rule ("163 heal over time effect solo") {
    event {
        Player Took Damage;
        Team 1;
        All;
    }
    conditions {
        All Living Players(Team 1) == True;
        Number Of Players(Team 1) == 1;
    }
    actions {
        If(Compare(Number Of Players(Team 1), ==, 1));
            "need to disable built in health regen as well"
            Stop Heal Over Time((Event Player).healovertime);
            Wait(5, Restart When True);
            Start Heal Over Time(Event Player, Event Player, 3, Multiply(4, Value In Array((Event Player).extraPlayerVar, 5)));
            Set Player Variable(Event Player, healovertime, Last Heal Over Time ID);
        Else If(Compare(Number Of Players(Team 1), >, 1));
            Stop Heal Over Time((Event Player).healovertime);
            Wait(5, Restart When True);
            Start Heal Over Time(Event Player, Event Player, 3, Multiply(4, Value In Array((Event Player).extraPlayerVar, 5)));
            Set Player Variable(Event Player, healovertime, Last Heal Over Time ID);
    }
}

rule ("171 no ammo force melee") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        (Event Player).magazines == False;
        Or(Is Button Held(Event Player, Button(Primary Fire)), Is Button Held(Event Player, Button(Secondary Fire))) == True;
    }
    actions {
        Press Button(Event Player, Button(Melee));
    }
}

rule ("245 Rule 388 tank sheild") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Button Held(Event Player, Button(Secondary Fire)) == True;
    }
    actions {
        If(Compare(Hero Of(Event Player), ==, Hero(Sigma)));
            Add Health Pool To Player(Event Player, Health, 100, False, False);
            Wait(10, Ignore Condition);
            Remove All Health Pools From Player(Event Player);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Reinhardt)));
            Add Health Pool To Player(Event Player, Health, 100, False, False);
            Wait(10, Ignore Condition);
            Remove All Health Pools From Player(Event Player);
        Else If(Compare(Hero Of(Event Player), ==, Hero(D.Va)));
            Add Health Pool To Player(Event Player, Health, 100, False, False);
            Wait(10, Ignore Condition);
            Remove All Health Pools From Player(Event Player);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Ramattra)));
            Add Health Pool To Player(Event Player, Health, 100, False, False);
            Wait(10, Ignore Condition);
            Remove All Health Pools From Player(Event Player);
    }
}

rule ("393 POINTS Omnic kill (final hit (could probably make this one rule))") {
    event {
        Player Dealt Final Blow;
        Team 1;
        All;
    }
    actions {
        If(Not(Is Meleeing(Event Player)));
            If(Not(Event Was Critical Hit));
                Chase Player Variable At Rate(Event Player, points, Multiply(Add(Evaluate Once((Event Player).points), 50), (Event Player).H), 100, Destination and Rate);
                Modify Player Variable(Event Player, points, Add, Add(50, Multiply((Event Player).heropoints, (Event Player).H)));
                Skip If(Compare((Event Player).H, !=, 1), 1);
                Skip If(Compare((Event Player).H, ==, 1), 1);
                //lbl_0:
                Modify Global Variable(R, Add, Multiply(100, (Event Player).H));
                //lbl_1:
                Modify Player Variable At Index(Event Player, xp, (Event Player).currentheroxp, Add, 5);
            Else If(Event Was Critical Hit);
                Modify Player Variable(Event Player, points, Add, Add(100, Multiply((Event Player).heropoints, (Event Player).H)));
                Skip If(Compare((Event Player).H, !=, 1), 1);
                Skip If(Compare((Event Player).H, ==, 1), 1);
                //lbl_2:
                Modify Global Variable(R, Add, Multiply(200, (Event Player).H));
                //lbl_3:
                Modify Player Variable At Index(Event Player, xp, (Event Player).currentheroxp, Add, 10);
            End;
        Else If(Is Meleeing(Event Player));
            Modify Player Variable(Event Player, points, Add, Add(130, Multiply((Event Player).heropoints, (Event Player).H)));
            Skip If(Compare((Event Player).H, !=, 1), 1);
            Skip If(Compare((Event Player).H, ==, 1), 1);
            //lbl_4:
            Modify Global Variable(R, Add, Multiply(260, (Event Player).H));
            //lbl_5:
            Modify Player Variable At Index(Event Player, xp, (Event Player).currentheroxp, Add, 15);
    }
}

rule ("396 POINTS Omnic kill (elimination)") {
    event {
        Player Earned Elimination;
        Team 1;
        All;
    }
    conditions {
        Event Was Critical Hit == False;
        Is Meleeing(Event Player) == False;
    }
    actions {
        If(Not(Event Was Critical Hit));
            If(Array Contains(All Damage Heroes, Hero Of(Event Player)));
                Set Player Variable(Event Player, heropoints, 15);
            Else If(Array Contains(All Support Heroes, Hero Of(Event Player)));
                Set Player Variable(Event Player, heropoints, 5);
            Else If(Array Contains(All Tank Heroes, Hero Of(Event Player)));
                Set Player Variable(Event Player, heropoints, 10);
            End;
            Modify Player Variable(Event Player, points, Add, Add(40, Multiply((Event Player).heropoints, (Event Player).H)));
            Skip If(Compare((Event Player).H, !=, 1), 1);
            Skip If(Compare((Event Player).H, ==, 1), 1);
            //lbl_0:
            Modify Global Variable(R, Add, Multiply(80, (Event Player).H));
            //lbl_1:
            Modify Player Variable At Index(Event Player, xp, (Event Player).currentheroxp, Add, 5);
        Else If(Event Was Critical Hit);
            If(Array Contains(All Damage Heroes, Hero Of(Event Player)));
                Set Player Variable(Event Player, heropoints, 30);
            Else If(Array Contains(All Support Heroes, Hero Of(Event Player)));
                Set Player Variable(Event Player, heropoints, 10);
            Else If(Array Contains(All Tank Heroes, Hero Of(Event Player)));
                Set Player Variable(Event Player, heropoints, 20);
            End;
            Modify Player Variable(Event Player, points, Add, Add(80, Multiply((Event Player).heropoints, (Event Player).H)));
            Skip If(Compare((Event Player).H, !=, 1), 1);
            Skip If(Compare((Event Player).H, ==, 1), 1);
            //lbl_2:
            Modify Global Variable(R, Add, Multiply(160, (Event Player).H));
            //lbl_3:
            Modify Player Variable At Index(Event Player, xp, (Event Player).currentheroxp, Add, 10);
    }
}

rule ("Set starting heros (hero needs to be a variable, and also need to set up a way to go through hero selection twice)") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    actions {
        Set Player Variable At Index(Event Player, heroswap, 0, Hero(Cassidy));
        Set Player Variable At Index(Event Player, heroswap, 1, Hero(D.Va));
        Set Player Variable At Index(Event Player, heroiconswap, 0, Hero Icon String(Hero(Cassidy)));
        Set Player Variable At Index(Event Player, heroiconswap, 1, Hero Icon String(Hero(D.Va)));
    }
}

rule ("245  tank sheild 2") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Button Held(Event Player, Button(Ability 2)) == True;
    }
    actions {
        If(Compare(Hero Of(Event Player), ==, Hero(Winston)));
            Add Health Pool To Player(Event Player, Health, 100, False, False);
            Wait(10, Ignore Condition);
            "will create future conflicts with other sheilds need patch"
            Remove All Health Pools From Player(Event Player);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Doomfist)));
            Add Health Pool To Player(Event Player, Health, 100, False, False);
            Wait(10, Ignore Condition);
            Remove All Health Pools From Player(Event Player);
    }
}

rule ("ultimate use check") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Using Ultimate(Event Player) == True;
    }
    actions {
        Set Player Variable(Event Player, currentultcharge, False);
    }
}

rule ("soldier explosive rounds (could make this one rule)") {
    event {
        Ongoing - Each Player;
        Team 1;
        Soldier: 76;
    }
    conditions {
        Is Firing Primary(Event Player) == True;
        Is Using Ultimate(Event Player) == True;
    }
    actions {
        "higher than .11 due to lag"
        Wait(0.22, Ignore Condition);
        Play Effect(All Players(All Teams), Good Explosion, Color(Blue), Ray Cast Hit Position(Eye Position(Event Player), Add(Eye Position(Event Player), Multiply(Facing Direction Of(Event Player), 100)), All Players(Team 2), Event Player, True), 5);
        Loop If Condition Is True;
    }
}

rule ("buy perk subroutine") {
    event {
        Subroutine;
        perkbuyanimation;
    }
    actions {
        Wait(0.25, Ignore Condition);
        Communicate(Event Player, Emote Up);
        Wait(0.05, Ignore Condition);
        Set Move Speed(Event Player, 0);
        Wait(2, Ignore Condition);
        Set Move Speed(Event Player, 100);
    }
}

rule ("229 buy perks and power activate") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Button Held(Event Player, Button(Interact)) == True;
        Is True For Any(Global.perkbuyrandomized, Compare(Distance Between(Current Array Element, Event Player), <, Value In Array(Global.heroradius, Current Array Index))) == True;
    }
    actions {
        "add a subroutine for the perk system"
        If(Compare(Distance Between(Event Player, First Of(Global.perkbuyrandomized)), <, 2));
            If(Compare(Global.K, ==, False));
                Destroy Effect(First Of(Global.powerconnected));
                Destroy In-World Text(Value In Array(Global.powerconnected, 1));
                Set Global Variable(powerconnected, 1);
                Set Global Variable(K, 1);
                Big Message(All Players(All Teams), Custom String("{0} {1}", String("Power"), String("On")));
                Set Ultimate Charge(All Players(Team 2), 100);
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.perkbuyrandomized, 1)), <, 2));
            If(Compare((Event Player).points, >=, 2500));
                If(Compare(Value In Array((Event Player).extraPlayerVar, 10), ==, False));
                    Modify Player Variable(Event Player, points, Subtract, 2500);
                    Wait(0.25, Ignore Condition);
                    Set Max Health(Event Player, Workshop Setting Integer(Custom String("perks"), Custom String("max HP/ juggernaut"), 100, 100, 400, 0));
                    Heal(Event Player, Null, 1000);
                    Set Player Variable At Index(Event Player, extraPlayerVar, 10, 1);
                    Call Subroutine(perkbuyanimation);
                Else If(Compare(Value In Array((Event Player).extraPlayerVar, 10), ==, 1));
                    Modify Player Variable(Event Player, points, Subtract, 2500);
                    Wait(0.25, Ignore Condition);
                    Small Message(Event Player, Custom String("  you now get (25) shields 10 seconds after not taking damage"));
                    Heal(Event Player, Null, 1000);
                    Set Player Variable At Index(Event Player, extraPlayerVar, 10, 2);
                    Call Subroutine(perkbuyanimation);
                Else If(Compare(Value In Array((Event Player).extraPlayerVar, 10), ==, 2));
                    Modify Player Variable(Event Player, points, Subtract, 2500);
                    Wait(0.25, Ignore Condition);
                    Small Message(Event Player, Custom String("  you now get (50) shields 10 seconds after not taking damage"));
                    Heal(Event Player, Null, 1000);
                    Set Player Variable At Index(Event Player, extraPlayerVar, 10, 3);
                    Call Subroutine(perkbuyanimation);
                End;
            Else If(Compare((Event Player).points, <, 2500));
                Small Message(Event Player, Custom String("  {0} No points? NO perks!", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.perkbuyrandomized, 2)), <, 2));
            If(Compare((Event Player).points, >=, 5000));
                If(Compare(Value In Array((Event Player).extraPlayerVar, 12), ==, False));
                    Modify Player Variable(Event Player, magazines, Add, 20);
                    Modify Player Variable(Event Player, points, Subtract, 5000);
                    Set Player Variable At Index(Event Player, extraPlayerVar, 4, Workshop Setting Integer(Custom String("perks"), Custom String("pack a punch; damage"), 200, 200, 500, 0));
                    Set Damage Dealt(Event Player, Value In Array((Event Player).extraPlayerVar, 4));
                    Create Effect(All Players(Team 1), Baptiste Immortality Field Protected Effect, Color(White), Event Player, 1, Visible To Position Radius and Color);
                    Set Player Variable At Index(Event Player, extraPlayerVar, 12, 1);
                    Set Player Variable At Index(Event Player, extraPlayerVar, 13, False);
                    Call Subroutine(perkbuyanimation);
                Else If(Compare(Value In Array((Event Player).extraPlayerVar, 12), ==, 1));
                    Modify Player Variable(Event Player, points, Subtract, 5000);
                    Set Player Variable At Index(Event Player, extraPlayerVar, 4, 400);
                    Set Damage Dealt(Event Player, Value In Array((Event Player).extraPlayerVar, 4));
                    Wait(0.25, Ignore Condition);
                    Small Message(Event Player, Custom String("  you now get (+400%) damage with this hero"));
                    Create Effect(All Players(Team 1), Ana Nano Boosted Effect, Color(White), Event Player, 1, Visible To Position Radius and Color);
                    Set Player Variable At Index(Event Player, extraPlayerVar, 12, 2);
                    Call Subroutine(perkbuyanimation);
                Else If(Compare(Value In Array((Event Player).extraPlayerVar, 12), ==, 2));
                    Modify Player Variable(Event Player, points, Subtract, 5000);
                    Set Player Variable At Index(Event Player, extraPlayerVar, 4, 800);
                    Set Damage Dealt(Event Player, Value In Array((Event Player).extraPlayerVar, 4));
                    Wait(0.25, Ignore Condition);
                    Small Message(Event Player, Custom String("  you now get (+800%) damage with this hero"));
                    Create Effect(All Players(Team 1), Echo Cloning Effect, Color(Green), Event Player, 1, Visible To Position Radius and Color);
                    Set Player Variable At Index(Event Player, extraPlayerVar, 12, 3);
                    Call Subroutine(perkbuyanimation);
                End;
            Else If(Compare((Event Player).points, <, 5000));
                Small Message(Event Player, Custom String("  {0} How about pack a few points first!", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.perkbuyrandomized, 4)), <, 2));
            "check this variable name"
            Set Player Variable At Index(Event Player, extraPlayerVar, 12, False);
            If(Compare((Event Player).points, >=, 4000));
                Modify Player Variable(Event Player, points, Subtract, 4000);
                Clear Status(Event Player, Burning);
                "check this variable name"
                Set Player Variable At Index(Event Player, extraPlayerVar, 4, 200);
                Set Player Variable At Index(Event Player, extraPlayerVar, 13, 1);
                Call Subroutine(perkbuyanimation);
            Else If(Compare(Distance Between(Event Player, Value In Array(Global.perkbuyrandomized, 5)), <, 2));
                If(Compare((Event Player).points, >=, 2000));
                    Modify Player Variable(Event Player, points, Subtract, 2000);
                    Set Player Variable At Index(Event Player, extraPlayerVar, 1, 1);
                    Call Subroutine(perkbuyanimation);
                Else If(Compare(Distance Between(Event Player, Value In Array(Global.perkbuyrandomized, 6)), <, 2));
                    If(Compare((Event Player).points, >=, 2000));
                        Modify Player Variable(Event Player, points, Subtract, 2000);
                        Set Player Variable At Index(Event Player, extraPlayerVar, 1, 1);
                        Call Subroutine(perkbuyanimation);
                    Else If(Compare(Distance Between(Event Player, Value In Array(Global.perkbuyrandomized, 7)), <, 2));
                        If(Compare((Event Player).points, >=, 2000));
                            Modify Player Variable(Event Player, points, Subtract, 2000);
                            Set Player Variable At Index(Event Player, extraPlayerVar, 2, 1);
                            Call Subroutine(perkbuyanimation);
    }
}

rule ("boss buy (consolidate later)") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Button Held(Event Player, Button(Interact)) == True;
        Is True For Any(Global.bossbuypositions, Compare(Distance Between(Current Array Element, Event Player), <, Value In Array(Global.heroradius, Current Array Index))) == True;
    }
    actions {
        If(Compare(Distance Between(First Of(Global.bossbuypositions), Event Player), <, 2));
            Set Global Variable At Index(extraVar, 25, 1);
        Else If(Compare(Distance Between(Value In Array(Global.bossbuypositions, 1), Event Player), <, 2));
            Set Global Variable At Index(extraVar, 25, 2);
        Else If(Compare(Distance Between(Value In Array(Global.bossbuypositions, 2), Event Player), <, 2));
            Set Global Variable At Index(extraVar, 25, 3);
    }
}

rule ("202 Purchase hero action (needs purchase hero subroutine)") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Button Held(Event Player, Button(Interact)) == True;
        Is True For Any(Global.herobuyrandomized, Compare(Distance Between(Current Array Element, Event Player), <, Value In Array(Global.heroradius, Current Array Index))) == True;
    }
    actions {
        "lucio"
        If(Compare(Distance Between(Event Player, First Of(Global.herobuyrandomized)), <, 2));
            If(Compare((Event Player).points, >=, 1000));
                Start Forcing Player To Be Hero(Event Player, Hero(Lúcio));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Lúcio));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Lúcio)));
                Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Event Player, 70);
                Modify Player Variable(Event Player, points, Subtract, 1000);
                Wait(0.25, Ignore Condition);
                Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Event Player, 70);
                Set Player Variable(Event Player, currentmagazines, 10);
                Skip If(Compare(Hero Of(Event Player), ==, Hero(Lúcio)), 3);
                Skip If(Compare(Value In Array(Global.extraVar, 14), ==, False), 2);
                Set Player Variable At Index(Event Player, extraPlayerVar, 9, False);
                Set Player Variable(Event Player, xp, False);
                //lbl_0:
                //lbl_1:
            Else If(Compare((Event Player).points, <, 1000));
                Small Message(Event Player, Custom String("  {0} This melody requires a different kind of rythem", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 1)), <, 2));
            If(Compare((Event Player).points, >=, 1250));
                Call Subroutine(herobuy1250);
                Start Forcing Player To Be Hero(Event Player, Hero(Hanzo));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Hanzo));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Hanzo)));
                Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Event Player, 70);
                Skip If(Compare(Hero Of(Event Player), ==, Hero(Hanzo)), 1);
                Set Player Variable(Event Player, xp, First Of((Event Player).xparray));
                //lbl_2:
            Else If(Compare((Event Player).points, <, 1250));
                Small Message(Event Player, Custom String("  {0} This path requires greater discipline", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 2)), <, 2));
            If(Compare((Event Player).points, >=, 1000));
                Start Forcing Player To Be Hero(Event Player, Hero(Zenyatta));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Zenyatta));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Zenyatta)));
                Modify Player Variable(Event Player, points, Subtract, 1000);
                Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Event Player, 70);
                Wait(0.25, Ignore Condition);
                Set Player Variable(Event Player, currentmagazines, 10);
                Skip If(Compare(Hero Of(Event Player), ==, Hero(Zenyatta)), 3);
                Skip If(Compare(Value In Array(Global.extraVar, 14), ==, False), 2);
                Set Player Variable At Index(Event Player, extraPlayerVar, 9, False);
                Set Player Variable(Event Player, xp, False);
                //lbl_3:
                //lbl_4:
            Else If(Compare((Event Player).points, <, 1000));
                Small Message(Event Player, Custom String("  {0} Harmony requires a different balance", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 3)), <, 2));
            If(Compare((Event Player).points, >=, 1000));
                Start Forcing Player To Be Hero(Event Player, Hero(Soldier: 76));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Soldier: 76));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Soldier: 76)));
                Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Event Player, 70);
                Modify Player Variable(Event Player, points, Subtract, 1000);
                Wait(0.25, Ignore Condition);
                Set Player Variable(Event Player, currentmagazines, 10);
                Skip If(Compare(Hero Of(Event Player), ==, Hero(Soldier: 76)), 3);
                Skip If(Compare(Value In Array(Global.extraVar, 14), ==, False), 2);
                Set Player Variable At Index(Event Player, extraPlayerVar, 9, False);
                Set Player Variable(Event Player, xp, False);
                //lbl_5:
                //lbl_6:
            Else If(Compare((Event Player).points, <, 1000));
                Small Message(Event Player, Custom String("  {0} This hero cant be bought on impulse! Earn it.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 4)), <, 2));
            If(Compare((Event Player).points, >=, 1000));
                Start Forcing Player To Be Hero(Event Player, Hero(Mercy));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Mercy));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Mercy)));
                Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Event Player, 70);
                Modify Player Variable(Event Player, points, Subtract, 1000);
                Wait(0.25, Ignore Condition);
                Set Player Variable(Event Player, currentmagazines, 10);
                Skip If(Compare(Hero Of(Event Player), ==, Hero(Mercy)), 3);
                Skip If(Compare(Value In Array(Global.extraVar, 14), ==, False), 2);
                Set Player Variable At Index(Event Player, extraPlayerVar, 9, False);
                Set Player Variable(Event Player, xp, False);
                //lbl_7:
                //lbl_8:
            Else If(Compare((Event Player).points, <, 1000));
                Small Message(Event Player, Custom String("  {0} You think you can afford a medical license? ", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 5)), <, 2));
            If(Compare((Event Player).points, >=, 1000));
                Start Forcing Player To Be Hero(Event Player, Hero(Pharah));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Pharah));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Pharah)));
                Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Event Player, 70);
                Modify Player Variable(Event Player, points, Subtract, 1000);
                Wait(0.25, Ignore Condition);
                Set Player Variable(Event Player, currentmagazines, 10);
                Skip If(Compare(Hero Of(Event Player), ==, Hero(Pharah)), 3);
                Skip If(Compare(Value In Array(Global.extraVar, 14), ==, False), 2);
                Set Player Variable At Index(Event Player, extraPlayerVar, 9, False);
                Set Player Variable(Event Player, xp, False);
                //lbl_9:
                //lbl_10:
            Else If(Compare((Event Player).points, <, 1000));
                Small Message(Event Player, Custom String("  {0} Come back when you're ready to fly.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 6)), <, 2));
            If(Compare((Event Player).points, >=, 1000));
                Start Forcing Player To Be Hero(Event Player, Hero(Junkrat));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Junkrat));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Junkrat)));
                Call Subroutine(herobuy1250);
            Else If(Compare((Event Player).points, <, 1000));
                Small Message(Event Player, Custom String("  {0} This hero needs a more... Explosive budget", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 7)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Start Forcing Player To Be Hero(Event Player, Hero(Symmetra));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Symmetra));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Symmetra)));
                Modify Player Variable(Event Player, points, Subtract, 1750);
                Wait(0.25, Ignore Condition);
                Set Player Variable(Event Player, currentmagazines, 10);
                Skip If(Compare(Hero Of(Event Player), ==, Hero(Symmetra)), 3);
                Skip If(Compare(Value In Array(Global.extraVar, 14), ==, False), 2);
                Set Player Variable At Index(Event Player, extraPlayerVar, 9, False);
                Set Player Variable(Event Player, xp, False);
                //lbl_11:
                //lbl_12:
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} This architect requires a stronger foundation", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 8)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Start Forcing Player To Be Hero(Event Player, Hero(Doomfist));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Doomfist));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Doomfist)));
                Call Subroutine(herobuy1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} This gauntlet wasnt built for free, you know!", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 9)), <, 2));
            If(Compare((Event Player).points, >=, 1250));
                Start Forcing Player To Be Hero(Event Player, Hero(Baptiste));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Baptiste));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Baptiste)));
                Call Subroutine(herobuy1250);
            Else If(Compare((Event Player).points, <, 1250));
                Small Message(Event Player, Custom String("  {0} This detective needs a deeper well of empathy.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 10)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Start Forcing Player To Be Hero(Event Player, Hero(Bastion));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Bastion));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Bastion)));
                Call Subroutine(herobuy1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} No, the bird doesnt come free.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 11)), <, 2));
            If(Compare((Event Player).points, >=, 1000));
                Start Forcing Player To Be Hero(Event Player, Hero(Reaper));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Reaper));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Reaper)));
                Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Event Player, 70);
                Modify Player Variable(Event Player, points, Subtract, 1000);
                Wait(0.25, Ignore Condition);
                Set Player Variable(Event Player, currentmagazines, 10);
                Skip If(Compare(Hero Of(Event Player), ==, Hero(Reaper)), 3);
                Skip If(Compare(Value In Array(Global.extraVar, 14), ==, False), 2);
                Set Player Variable At Index(Event Player, extraPlayerVar, 9, False);
                Set Player Variable(Event Player, xp, False);
                //lbl_13:
                //lbl_14:
            Else If(Compare((Event Player).points, <, 1000));
                Small Message(Event Player, Custom String("  {0} Death awaits... you, if you dont get some points!", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 12)), <, 2));
            If(Compare((Event Player).points, >=, 1250));
                Start Forcing Player To Be Hero(Event Player, Hero(Genji));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Genji));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Genji)));
                Call Subroutine(herobuy1250);
            Else If(Compare((Event Player).points, <, 1250));
                Small Message(Event Player, Custom String("  {0} Well dont wait for a coupon. start getting points!", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 13)), <, 2));
            If(Compare((Event Player).points, >=, 1250));
                Start Forcing Player To Be Hero(Event Player, Hero(Ashe));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Ashe));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Ashe)));
                Call Subroutine(herobuy1250);
            Else If(Compare((Event Player).points, <, 1250));
                Small Message(Event Player, Custom String("  {0} this isnt the right iron for your holster.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 14)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Start Forcing Player To Be Hero(Event Player, Hero(Zarya));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Zarya));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Zarya)));
                Call Subroutine(herobuy1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} You need a bigger heart to bear this power.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 15)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Start Forcing Player To Be Hero(Event Player, Hero(Roadhog));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Roadhog));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Roadhog)));
                Call Subroutine(herobuy1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} This ain't your brand of brawl", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 16)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Start Forcing Player To Be Hero(Event Player, Hero(D.Va));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(D.Va));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(D.Va)));
                Set Ultimate Ability Enabled(Event Player, True);
                Call Subroutine(herobuy1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} This is in fact, not easy mode.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 17)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Start Forcing Player To Be Hero(Event Player, Hero(Brigitte));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Brigitte));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Brigitte)));
                Call Subroutine(herobuy1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} This armor doesnt come cheap!", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 18)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Start Forcing Player To Be Hero(Event Player, Hero(Reinhardt));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Reinhardt));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Reinhardt)));
                Call Subroutine(herobuy1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} Honor demands courage... and more points. Now get to it!", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 19)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Start Forcing Player To Be Hero(Event Player, Hero(Torbjörn));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Torbjörn));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Torbjörn)));
                Call Subroutine(herobuy1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} Seems like your hard works not paying off.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 20)), <, 2));
            If(Compare((Event Player).points, >=, 1750));
                Start Forcing Player To Be Hero(Event Player, Hero(Sigma));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Sigma));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Sigma)));
                Call Subroutine(herobuy1750);
            Else If(Compare((Event Player).points, <, 1750));
                Small Message(Event Player, Custom String("  {0} The melody sounds like you're broke.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 21)), <, 2));
            If(Compare((Event Player).points, >=, 1250));
                Start Forcing Player To Be Hero(Event Player, Hero(Orisa));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Orisa));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Orisa)));
                Call Subroutine(herobuy1250);
            Else If(Compare((Event Player).points, <, 1250));
                Small Message(Event Player, Custom String("  {0} This protector needs more purpose... and points.", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 22)), <, 2));
            If(Compare((Event Player).points, >=, 1250));
                Start Forcing Player To Be Hero(Event Player, Hero(Moira));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Moira));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Moira)));
                Call Subroutine(herobuy1250);
            Else If(Compare((Event Player).points, <, 1250));
                Small Message(Event Player, Custom String("  {0} This scientist demands a more curious mind!", Hero Icon String(Hero(Ramattra))));
            End;
        Else If(Compare(Distance Between(Event Player, Value In Array(Global.herobuyrandomized, 23)), <, 2));
            If(Compare((Event Player).points, >=, 30000));
                Start Forcing Player To Be Hero(Event Player, Hero(Mei));
                Set Player Variable At Index(Event Player, heroswap, (Event Player).currentswap, Hero(Mei));
                Set Player Variable At Index(Event Player, heroiconswap, (Event Player).currentswap, Hero Icon String(Hero(Mei)));
                Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Event Player, 70);
                Modify Player Variable(Event Player, points, Subtract, 30000);
                Wait(0.25, Ignore Condition);
                Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Event Player, 70);
                Set Player Variable(Event Player, currentmagazines, 50);
                Skip If(Compare(Hero Of(Event Player), ==, Hero(Mei)), 3);
                Skip If(Compare(Value In Array(Global.extraVar, 14), ==, False), 2);
                Set Player Variable At Index(Event Player, extraPlayerVar, 9, False);
                Set Player Variable(Event Player, xp, False);
                //lbl_15:
                //lbl_16:
            Else If(Compare((Event Player).points, <, 30000));
                Small Message(Event Player, Custom String("  {0} No, this is not... A-mei-zing. Get points!", Hero Icon String(Hero(Ramattra))));
            End;
        End;
        "buy ending"
        If(Compare(Distance Between(Event Player, Vector(-101.303, -150.36, -17.831)), <, 2));
            If(Compare((Event Player).points, >=, 50000));
                Set Slow Motion(40);
                Wait(2, Ignore Condition);
                Declare Team Victory(Team 1);
            Else If(Compare((Event Player).points, <, 50000));
                Small Message(Event Player, Custom String("  {0} HA, good luck escaping...", Hero Icon String(Hero(Ramattra))));
    }
}

rule ("78 buy revive multiplayer") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Distance Between(Event Player, Vector(-83.583, -155.045, 120.352)) < 4;
        Is Button Held(Event Player, Button(Interact)) == True;
        (Event Player).points >= 4000;
        Global.powerconnected == 1;
        "@Condition __assignTo__(eventPlayer.revivebought, false)"
        Number Of Players(Team 1) > 1;
    }
    actions {
        Modify Player Variable(Event Player, points, Subtract, 10000);
        Set Player Variable At Index(Event Player, extraPlayerVar, 14, 1);
        Wait(0.1, Ignore Condition);
        Communicate(Event Player, Emote Up);
        "eventPlayer.revivebought = 1"
        Wait(0.05, Ignore Condition);
        Set Move Speed(Event Player, 0);
        Wait(2, Ignore Condition);
        Set Move Speed(Event Player, 100);
    }
}

rule ("173 Purchase winston Omnic bomb") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Distance Between(Event Player, Value In Array(Global.buyperks, 9)) < 4;
        Is Button Held(Event Player, Button(Interact)) == True;
        (Event Player).points >= 2500;
        Global.powerconnected == 1;
        (Event Player).Movement == False;
    }
    actions {
        Modify Player Variable(Event Player, points, Subtract, 2500);
        Set Player Variable(Event Player, Movement, 1);
        Play Effect(All Players(Team 1), Buff Impact Sound, Color(White), Event Player, 70);
        Wait(0.1, Ignore Condition);
        Communicate(Event Player, Emote Up);
        Set Player Variable(Event Player, Head_HP, 3);
        Wait(0.05, Ignore Condition);
        Set Move Speed(Event Player, 0);
        Wait(2, Ignore Condition);
        Set Move Speed(Event Player, 100);
        Set Player Variable(Event Player, Part2, False);
    }
}

rule ("242 Rule 426 subroutine hero buy 1250") {
    event {
        Subroutine;
        herobuy1250;
    }
    actions {
        If(Compare((Event Player).points, >, 1250));
            Modify Player Variable(Event Player, points, Subtract, 1250);
            Play Effect(Event Player, Moira Fade Disappear Sound, Color(White), Event Player, 70);
            Wait(0.25, Ignore Condition);
            Set Player Variable(Event Player, currentmagazines, 10);
            Skip If(Compare(Value In Array(Global.extraVar, 14), ==, True), 2);
            Set Player Variable At Index(Event Player, extraPlayerVar, 9, False);
            Set Player Variable(Event Player, xp, False);
            //lbl_0:
        Else If(Compare((Event Player).points, <, 1250));
            Small Message(Event Player, Custom String("Come back when you've got some money buddy!"));
        End;
    }
}

rule ("243 Rule 427 subroutine hero buy1750") {
    event {
        Subroutine;
        herobuy1750;
    }
    actions {
        If(Compare((Event Player).points, >, 1750));
            Play Effect(All Players(All Teams), Ring Explosion, Color(Purple), Event Player, 10);
            Play Effect(All Players(All Teams), Moira Fade Disappear Sound, Color(Purple), Event Player, 70);
            Modify Player Variable(Event Player, points, Subtract, 1750);
            Wait(0.25, Ignore Condition);
            Set Player Variable(Event Player, currentmagazines, 10);
            Skip If(Compare(Value In Array(Global.extraVar, 14), ==, False), 2);
            Set Player Variable At Index(Event Player, extraPlayerVar, 9, False);
            Set Player Variable(Event Player, xp, False);
            //lbl_0:
        Else If(Compare((Event Player).points, <, 1750));
            Small Message(Event Player, Custom String("Come back when you've got some money buddy!"));
        End;
    }
}

rule ("hero swap subroutine") {
    event {
        Subroutine;
        heroswap;
    }
    actions {
        Preload Hero(Event Player, Value In Array((Event Player).heroswap, First Of((Event Player).swapvar)));
        "could simplify this further by using less variable names"
        Set Player Variable At Index(Event Player, herohp, Value In Array((Event Player).swapvar, 1), Health(Event Player));
        Set Player Variable At Index(Event Player, ultcharge, Value In Array((Event Player).swapvar, 1), (Event Player).currentultcharge);
        Set Player Variable At Index(Event Player, abilitycooldown, Value In Array((Event Player).swapvar, 2), Ability Cooldown(Event Player, Button(Ability 1)));
        Set Player Variable At Index(Event Player, abilitycooldown, Value In Array((Event Player).swapvar, 3), Ability Cooldown(Event Player, Button(Ability 2)));
        Set Player Variable At Index(Event Player, abilitycooldown, Value In Array((Event Player).swapvar, 4), Ability Cooldown(Event Player, Button(Secondary Fire)));
        Press Button(Event Player, Button(Reload));
        Wait(0.016, Ignore Condition);
        Set Player Variable At Index(Event Player, magazines, Value In Array((Event Player).swapvar, 1), (Event Player).currentmagazines);
        Set Player Variable(Event Player, currentswap, First Of((Event Player).swapvar));
        Wait(0.016, Ignore Condition);
        Set Player Variable(Event Player, currentmagazines, Value In Array((Event Player).magazines, First Of((Event Player).swapvar)));
        Set Player Variable(Event Player, currentultcharge, Value In Array((Event Player).ultcharge, First Of((Event Player).swapvar)));
    }
}

rule ("follower subroutine") {
    event {
        Subroutine;
        followerbuy;
    }
    actions {
        Destroy Dummy Bot(Team 1, Add(Slot Of(Event Player), 4));
        Wait(0.25, Ignore Condition);
        Create Dummy Bot((Event Player).followerbuy, Team 1, Add(Slot Of(Event Player), 4), Vector(0, 0, 0), Vector(0, 0, 0));
        Wait(0.03, Ignore Condition);
        Attach Players(Players In Slot(Add(Slot Of(Event Player), 4), Team 1), Event Player, Vector(-0.5, 1.8, -0.2));
        Wait(0.1, Ignore Condition);
        Start Scaling Player(Players In Slot(Add(Slot Of(Event Player), 4), Team 1), 0.2, True);
        Start Modifying Hero Voice Lines(Add(Slot Of(Event Player), 4), 1.3, True);
        //lbl_0:
    }
}

rule ("PaP Sound subroutine") {
    event {
        Subroutine;
        PaPsound;
    }
    actions {
        Play Effect(All Players(All Teams), Baptiste Biotic Launcher Explosion Sound, Color(White), Event Player, 80);
        Wait(0.2, Ignore Condition);
        Loop If Condition Is True;
    }
}

rule ("518 spawn bots subroutine") {
    event {
        Subroutine;
        wavespawn;
    }
    actions {
        "need a for loop"
        Wait(9, Abort When False);
        Communicate(Random Value In Array(All Living Players(Team 1)), Countdown);
        Wait(Random Real(3, 4), Abort When False);
        Communicate(Random Value In Array(All Living Players(Team 1)), Incoming);
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bossSpawn, Value In Array(Global.extraVar, 4)), Team 2, 0, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 0, Slot Of(Players In Slot(0, Team 2)));
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot1spawn, Value In Array(Global.extraVar, 4)), Team 2, 1, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 1, Slot Of(Players In Slot(1, Team 2)));
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot2spawn, Value In Array(Global.extraVar, 4)), Team 2, 2, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 2, Slot Of(Players In Slot(2, Team 2)));
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot1spawn, Value In Array(Global.extraVar, 4)), Team 2, 3, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 3, Slot Of(Players In Slot(3, Team 2)));
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot2spawn, Value In Array(Global.extraVar, 4)), Team 2, 4, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 4, Slot Of(Players In Slot(4, Team 2)));
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot1spawn, Value In Array(Global.extraVar, 4)), Team 2, 5, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 5, Slot Of(Players In Slot(5, Team 2)));
        Skip If(Compare(First Of(Global.extraVar), <, 5), 38);
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot2spawn, Value In Array(Global.extraVar, 4)), Team 2, 6, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 6, Slot Of(Players In Slot(6, Team 2)));
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot1spawn, Value In Array(Global.extraVar, 4)), Team 2, 7, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 7, Slot Of(Players In Slot(7, Team 2)));
        "if getNumberOfPlayers(Team.1) > 3:\ngoto lbl_1"
        Skip If(Compare(Value In Array(Global.extraVar, 13), ==, True), 31);
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot2spawn, Value In Array(Global.extraVar, 4)), Team 2, 8, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 8, Slot Of(Players In Slot(8, Team 2)));
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot1spawn, Value In Array(Global.extraVar, 4)), Team 2, 9, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 9, Slot Of(Players In Slot(9, Team 2)));
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot1spawn, Value In Array(Global.extraVar, 4)), Team 2, 10, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 10, Slot Of(Players In Slot(10, Team 2)));
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot2spawn, Value In Array(Global.extraVar, 4)), Team 2, 11, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 11, Slot Of(Players In Slot(11, Team 2)));
        "if getNumberOfPlayers(Team.1) > 2:\ngoto lbl_3"
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot1spawn, Value In Array(Global.extraVar, 4)), Team 2, 12, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 12, Slot Of(Players In Slot(12, Team 2)));
        Skip If(Compare(First Of(Global.extraVar), <, 10), 15);
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot2spawn, Value In Array(Global.extraVar, 4)), Team 2, 13, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 13, Slot Of(Players In Slot(13, Team 2)));
        "if getNumberOfPlayers(Team.1) > 1:\ngoto lbl_5"
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot1spawn, Value In Array(Global.extraVar, 4)), Team 2, 14, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 14, Slot Of(Players In Slot(14, Team 2)));
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot2spawn, Value In Array(Global.extraVar, 4)), Team 2, 15, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 15, Slot Of(Players In Slot(15, Team 2)));
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot1spawn, Value In Array(Global.extraVar, 4)), Team 2, 16, Spawn Points(Team 2), Vector(0, 0, 0));
        //lbl_1:
        Set Global Variable At Index(omnicspawn, 16, Slot Of(Players In Slot(16, Team 2)));
        Wait(0.5, Ignore Condition);
        Create Dummy Bot(Value In Array(Global.bot2spawn, Value In Array(Global.extraVar, 4)), Team 2, 17, Spawn Points(Team 2), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 17, Slot Of(Players In Slot(17, Team 2)));
        //lbl_0:
        //lbl_2:
        //lbl_3:
        //lbl_4:
        //lbl_5:
    }
}

rule ("65 ring around each player") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    actions {
        "this could probably be simpler"
        If(Compare(Slot Of(Event Player), ==, False));
            Create Effect(All Players(All Teams), Ring, Color(Red), Event Player, 1.2, Visible To Position and Radius);
        Else If(Compare(Slot Of(Event Player), ==, 1));
            Create Effect(All Players(All Teams), Ring, Color(Blue), Event Player, 1.2, Visible To Position and Radius);
        Else If(Compare(Slot Of(Event Player), ==, 2));
            Create Effect(All Players(All Teams), Ring, Color(Green), Event Player, 1.2, Visible To Position and Radius);
        Else If(Compare(Slot Of(Event Player), ==, 3));
            Create Effect(All Players(All Teams), Ring, Color(Orange), Event Player, 1.2, Visible To Position and Radius);
    }
}

rule ("Bot effect (each player team 2)") {
    event {
        Player Died;
        Team 2;
        All;
    }
    conditions {
        Is Dummy Bot(Event Player) == True;
    }
    actions {
        "need to see how this looks when the bots dont instantly disappear on death"
        Play Effect(All Players(All Teams), Junkrat Frag Launcher Explosion Effect, Color(White), Event Player, 5);
        Play Effect(All Players(All Teams), Wrecking Ball Minefield Explosion Sound, Color(White), Event Player, 100);
    }
}

rule ("toggle perk info") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        (Event Player).perkinfo == False;
        Is Button Held(Event Player, Button(Jump)) == True;
    }
    actions {
        Wait(2, Abort When False);
        Set Player Variable(Event Player, perkinfo, 1);
        Wait(0.5, Ignore Condition);
        Set Player Variable(Event Player, perkinfo, 2);
        Wait(7, Ignore Condition);
        Set Player Variable(Event Player, perkinfo, 1);
        Wait(0.5, Ignore Condition);
        Set Player Variable(Event Player, perkinfo, False);
    }
}

rule ("perk info expanded") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        (Event Player).perkinfo == 2;
    }
    actions {
        "these need to have an array of details with info for each perk"
        Create HUD Text(Event Player, Custom String("{0}", Icon String(Club)), Custom String("Increased health"), Custom String("juggernaut"), Left, 3, Color(Orange), Color(Orange), Color(White), Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, Perkui, Append To Array, Last Text ID);
        Create HUD Text(Event Player, Custom String("{0}", Icon String(Diamond)), Custom String("increased damage"), Custom String("Pack-a-Punch"), Left, 3, Color(Sky Blue), Color(Orange), Color(White), Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, Perkui, Append To Array, Last Text ID);
        Create HUD Text(Event Player, Custom String("{0}", Icon String(Bolt)), Custom String("speed increased"), Custom String("sprint boost"), Left, 3, Color(Red), Color(Orange), Color(White), Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, Perkui, Append To Array, Last Text ID);
        Create HUD Text(Event Player, Custom String("{0}", Icon String(Heart)), Custom String("increased healing"), Custom String("Field Medic"), Left, 3, Color(Red), Color(Orange), Color(White), Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, Perkui, Append To Array, Last Text ID);
    }
}

rule ("perk delete") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        (Event Player).perkinfo == 1;
    }
    actions {
        Destroy HUD Text(Value In Array((Event Player).Perkui, Subtract(Count Of((Event Player).Perkui), 1)));
        Modify Player Variable(Event Player, Perkui, Remove From Array By Index, Subtract(Count Of((Event Player).Perkui), 1));
        Wait(0.016, Ignore Condition);
        Loop If(Compare(Count Of((Event Player).Perkui), !=, 0));
        Abort;
    }
}

rule ("perk info simplified") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Value In Array(Global.extraVar, 3) == 1;
        (Event Player).perkinfo == False;
    }
    actions {
        "this could be a loop"
        Skip If(Compare(First Of(Global.extraVar), >, 0), 1);
        Wait(5, Ignore Condition);
        //lbl_0:
        Create HUD Text(Event Player, Custom String("{0}", Icon String(Club)), Null, Null, Left, 3, Color(Orange), Null, Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, Perkui, Append To Array, Last Text ID);
        Create HUD Text(Event Player, Custom String("{0}", Icon String(Diamond)), Null, Null, Left, 3, Color(Sky Blue), Null, Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, Perkui, Append To Array, Last Text ID);
        Create HUD Text(Event Player, Custom String("{0}", Icon String(Bolt)), Null, Null, Left, 3, Color(Red), Null, Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, Perkui, Append To Array, Last Text ID);
        Create HUD Text(Event Player, Custom String("{0}", Icon String(Heart)), Null, Null, Left, 3, Color(Red), Null, Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, Perkui, Append To Array, Last Text ID);
        Create HUD Text(Event Player, Null, Custom String(" \n\n"), Null, Left, 6, Null, Color(Green), Null, Visible To, Visible Never);
        Modify Player Variable(Event Player, Perkui, Append To Array, Last Text ID);
    }
}

rule ("settings page (not finished)") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Value In Array(Global.extraVar, 3) == 2;
    }
    actions {
        Start Camera(Event Player, Vector(169.539, 51.549, 424.869), Vector(183.415, 49.892, 412.655), 0);
        Create HUD Text(All Players(All Teams), Custom String("Difficulty settings:"), Null, Null, Top, 0, Color(White), Null, Null, Visible To and String, Default Visibility);
        Create HUD Text(Event Player, Null, Null, Custom String("Damage recieved: {0}", Value In Array(Global.extraVar, 2)), Top, 0, Null, Null, Color(Red), Visible To and String, Default Visibility);
        Create HUD Text(Event Player, Null, Null, Custom String("bonus points: 0"), Top, 0, Null, Null, Color(Red), Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Custom String("Stability settings:"), Null, Null, Top, 0, Color(White), Null, Null, Visible To and String, Default Visibility);
        Create HUD Text(Event Player, Null, Null, Custom String("less zombies: {0}", Value In Array(Global.extraVar, 13)), Top, 0, Null, Null, Color(Red), Visible To and String, Default Visibility);
    }
}

rule ("settings page initial control") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        Value In Array(Global.extraVar, 3) != 1;
    }
    actions {
        "could probably use a if-then-else here unless double if doesnt work with this"
        If(Compare(Value In Array(Global.extraVar, 3), ==, False));
            If(Is Button Held(Event Player, Button(Melee)));
                Set Global Variable At Index(extraVar, 3, 2);
            Else If(Compare(Value In Array(Global.extraVar, 3), ==, 2));
                If(Is Button Held(Event Player, Button(Crouch)));
                    Set Global Variable At Index(extraVar, 3, False);
    }
}

rule ("521 settings screen message (i feel like a small message isnt what i want)") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        Value In Array(Global.extraVar, 3) == 2;
    }
    actions {
        Small Message(Event Player, Custom String("Press crouch to go back!"));
        Wait(8, Ignore Condition);
        Loop If Condition Is True;
    }
}

disabled rule ("fun fact system (make this on main menu, or its only when the team dies on a game over screen)") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Value In Array(Global.extraVar, 3) == False;
    }
    actions {
        Wait(3, Ignore Condition);
        Create HUD Text(Event Player, Null, Null, Custom String("Tip: {0}", Random Value In Array(Global.tipstrings)), Right, 0, Null, Null, Color(White), Visible To and String, Default Visibility);
        Wait(15, Ignore Condition);
        Destroy HUD Text(Last Text ID);
    }
}

rule ("66 wave >1 warning") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        "might need to make this for any starting hero, and"
        Is Hero Being Played(Hero(Cassidy), Team 1) == Hero Of(Event Player);
        "then once player buys said hero again they become stronger, but playtesting required"
        First Of(Global.extraVar) > 1;
    }
    actions {
        Abort If(Compare(Hero Of(Event Player), !=, Hero(Cassidy)));
        Wait(0.25, Ignore Condition);
        Big Message(Event Player, Custom String("WARNING:STARTING HERO - LOW DAMAGE CAPABILITY"));
        Wait(30, Ignore Condition);
        Loop If Condition Is True;
    }
}

rule ("69 round won sound effect") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Global.Z <= 0;
    }
    actions {
        Play Effect(All Players(All Teams), Ring Explosion Sound, Color(White), Event Player, 80);
    }
}

rule ("info UI cancel") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Value In Array(Global.extraVar, 3) > 0;
    }
    actions {
        Skip If(Compare(Count Of((Event Player).InfoUI), ==, False), 5);
        Destroy HUD Text(Value In Array((Event Player).InfoUI, Subtract(Count Of((Event Player).InfoUI), 1)));
        Modify Player Variable(Event Player, InfoUI, Remove From Array By Index, Subtract(Count Of((Event Player).InfoUI), 1));
        Wait(0, Ignore Condition);
        Loop If(Compare(Count Of((Event Player).InfoUI), !=, 0));
        Set Player Variable At Index(Event Player, extraPlayerVar, 6, Add(Total Time Elapsed, 5));
        //lbl_0:
        Abort;
    }
}

rule ("Info UI") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        Value In Array(Global.extraVar, 3) == False;
    }
    actions {
        "might make this a subroutine and then let it be a toggle players can use to read while playing\nhudSubtext(eventPlayer, \".\", HudPosition.LEFT, 1, Color.WHITE, HudReeval.VISIBILITY_AND_STRING)\neventPlayer.InfoUI.append(getLastCreatedText())\nwait()"
        Create HUD Text(Event Player, Null, Null, Custom String("Hold spacebar for perk info, and use crouch to switch heros."), Left, 15, Null, Null, Color(Green), Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Custom String("You will only get your ultimate once per wave, use it wisely!"), Null, Left, 15, Null, Color(White), Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Custom String("You can find the latest version on Workshop.codes made by dropthatbeat"), Null, Left, 102, Null, Color(White), Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Custom String("Zombies collection:workshop.codes/c/bvziup"), Null, Left, 101, Null, Color(White), Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Null, Custom String("{0} Workshop Information:", Icon String(Heart)), Left, 100, Null, Null, Color(Yellow), Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Custom String("You have limited ammo, Reloading throws away your old magazine"), Null, Left, 33, Null, Color(White), Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Custom String("shooting the same zombie in coop gives bonus points"), Null, Left, 32, Null, Color(White), Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Custom String("Score in the bottom right. prices displayed in game. press interact to buy"), Null, Left, 31, Null, Color(White), Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Null, Custom String("{0}How points work:", Icon String(Diamond)), Left, 30, Null, Null, Color(Yellow), Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Custom String("Connecting the power allows you to buy perks and pack a punch."), Null, Left, 22, Null, Color(White), Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Custom String("When you connect the power make sure no zombies are around as they will ultimate"), Null, Left, 21, Null, Color(White), Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Null, Custom String("{0}Connect the power", Icon String(Bolt)), Left, 20, Null, Null, Color(Yellow), Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Custom String(" in the map there is a mystery box, several perks, if you die you lose them, excluding Pack a punch"), Null, Left, 13, Null, Color(White), Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Custom String("Try to progress and survive by switching heros, starting heros do less damage, instead melee for bonus damage!"), Null, Left, 12, Null, Color(White), Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Custom String("most waves are normal zombies, but randomly picked waves will have challenges"), Null, Left, 11, Null, Color(White), Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Null, Custom String("{0} How This mode works:", Icon String(Checkmark)), Left, 10, Null, Null, Color(Yellow), Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        Create HUD Text(Event Player, Null, Custom String("In solo play, you get 3 lives, however in coop you can revive each other"), Null, Left, 14, Null, Color(White), Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Wait(0.016, Ignore Condition);
        "hudSubtext(eventPlayer, \".\", HudPosition.LEFT, 2, Color.ORANGE, HudReeval.VISIBILITY_AND_STRING)\neventPlayer.InfoUI.append(getLastCreatedText())"
        Create HUD Text(Event Player, Null, Custom String("                                                    |   Start the mode to hide the instructions   |"), Null, Left, 900, Null, Color(White), Null, Visible To and String, Default Visibility);
        Modify Player Variable(Event Player, InfoUI, Append To Array, Last Text ID);
        Set Player Variable At Index(Event Player, extraPlayerVar, 6, Add(Total Time Elapsed, 0.16));
        Set Player Variable At Index(Event Player, extraPlayerVar, 8, True);
        Set Player Variable(Event Player, UI, 1);
    }
}

rule ("all the effects (each player) (and huds)") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Value In Array(Global.extraVar, 3) == 1;
    }
    actions {
        "if experiencesystem == 1:\nprogressBarHud(eventPlayer, eventPlayer.xp[eventPlayer.currentheroxp], \"current level {0}\".format(eventPlayer.XPlevel[eventPlayer.currentheroxp]), HudPosition.TOP, 0, Color.GREEN, Color.BLUE, ProgressHudReeval.VALUES)"
        Set Global Variable At Index(Died, 0, Vector(500, 0, 500));
        Set Global Variable At Index(Died, 1, Vector(500, 0, 500));
        Set Global Variable At Index(Died, 2, Vector(500, 0, 500));
        Set Global Variable At Index(Died, 3, Vector(500, 0, 500));
        Wait(5, Ignore Condition);
        Abort If Condition Is False;
        Create HUD Text(Event Player, Null, Null, Custom String("lives used: {0}", Value In Array((Event Player).extraPlayerVar, 11)), Right, 0, Null, Null, Color(White), Visible To and String, Default Visibility);
        Create HUD Text(Event Player, Null, Custom String(" \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"), Null, Right, 1, Null, Color(Green), Null, Visible To, Visible Never);
        Create HUD Text(Event Player, Null, Custom String(" \n\n"), Null, Right, 6, Null, Color(Green), Null, Visible To, Visible Never);
        Create HUD Text(Event Player, Null, Null, Custom String("Magazines {0}", (Event Player).currentmagazines), Right, 7, Null, Null, Color(White), Visible To and String, Default Visibility);
        Create HUD Text(Event Player, Custom String(""), Null, Custom String("{0} : {1} : {2}", Hero Icon String(Hero Of(Players In Slot(0, Team 1))), Players In Slot(0, Team 1), (Players In Slot(0, Team 1)).points), Right, 5, Color(White), Color(White), Color(Red), Visible To and String, Default Visibility);
        Create HUD Text(Event Player, Custom String(""), Null, Custom String("{0} : {1} : {2}", Hero Icon String(Hero Of(Players In Slot(1, Team 1))), Players In Slot(1, Team 1), (Players In Slot(1, Team 1)).points), Right, 5, Color(White), Color(White), Color(Blue), Visible To and String, Default Visibility);
        Create HUD Text(Event Player, Custom String(""), Null, Custom String("{0} : {1} : {2}", Hero Icon String(Hero Of(Players In Slot(2, Team 1))), Players In Slot(2, Team 1), (Players In Slot(2, Team 1)).points), Right, 5, Color(White), Color(White), Color(Green), Visible To and String, Default Visibility);
        Create HUD Text(Event Player, Custom String(""), Null, Custom String("{0} : {1} : {2}", Hero Icon String(Hero Of(Players In Slot(3, Team 1))), Players In Slot(3, Team 1), (Players In Slot(3, Team 1)).points), Right, 5, Color(White), Color(White), Color(Orange), Visible To and String, Default Visibility);
        Create HUD Text(Event Player, Null, Custom String(" \n\n"), Null, Right, 8, Null, Color(Green), Null, Visible To, Visible Never);
        Create HUD Text(Event Player, Null, Null, Custom String("Heroes {0} {1}  {2}", First Of((Event Player).heroiconswap), Value In Array((Event Player).heroiconswap, 1), Input Binding String(Button(Crouch))), Right, 9, Null, Null, Color(White), Visible To and String, Default Visibility);
        Create HUD Text(Event Player, Null, Null, Custom String("Follower: {0}", Hero Icon String(Hero Of(Players In Slot(Add(Slot Of(Event Player), 4), Team 1)))), Left, 5, Null, Null, Color(White), Visible To and String, Default Visibility);
        Create HUD Text(Event Player, Null, Custom String(" \n\n"), Null, Left, 4, Null, Color(Green), Null, Visible To, Visible Never);
        Create HUD Text(Event Player, Null, Null, Custom String("                                                                             {0}", Value In Array(Global.romanN, Value In Array(Global.extraVar, 27))), Left, 7, Null, Null, Color(Orange), Visible To and String, Default Visibility);
        Create HUD Text(Event Player, Null, Custom String(" \n\n"), Null, Left, 6, Null, Color(Green), Null, Visible To, Visible Never);
        Create HUD Text(Event Player, Null, Custom String(" \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"), Null, Left, 1, Null, Color(Green), Null, Visible To, Visible Never);
        Create HUD Text(Event Player, Null, Custom String("workshop.codes/ap-zombies \n Code:T5M30"), Null, Left, -1, Null, Color(White), Null, Visible To and String, Default Visibility);
        Create HUD Text(Event Player, Null, Custom String(" \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"), Null, Top, 1, Null, Color(Green), Null, Visible To, Visible Never);
    }
}

disabled rule ("193 achivements logic") {
    event {
        Ongoing - Global;
    }
}

disabled rule ("194 achivements menu") {
    event {
        Ongoing - Global;
    }
    actions {
        Create HUD Text(All Players(All Teams), Null, Null, Custom String("achivement progress carries between playthroughs"), Top, 0, Null, Null, Color(White), Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Null, Custom String("deal 50000 damage {0}"), Top, 0, Null, Null, Color(White), Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Null, Custom String("teleport 20 times {0}"), Top, 0, Null, Null, Color(White), Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Null, Custom String("play as each hero once {0}"), Top, 0, Null, Null, Color(White), Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Null, Custom String("complete the easteregg {0}"), Top, 0, Null, Null, Color(White), Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Null, Custom String("buy the trap 10 times {0}"), Top, 0, Null, Null, Color(White), Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Null, Custom String("pack a punch the wonderweapon {0}"), Top, 0, Null, Null, Color(White), Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Null, Custom String("earn 500 eliminations {0}"), Top, 0, Null, Null, Color(White), Visible To and String, Default Visibility);
        Create HUD Text(All Players(All Teams), Null, Null, Custom String("beat all 3 boss'"), Top, 0, Null, Null, Color(White), Visible To and String, Default Visibility);
    }
}

disabled rule ("195 credits") {
    event {
        Ongoing - Global;
    }
    actions {
        Create In-World Text(All Players(All Teams), Custom String("by Dropthatbeat#11756"), Vector(0, 0, 0), 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
        Create In-World Text(All Players(All Teams), Custom String("B73NS#2325 for the boss fights"), Vector(0, 0, 0), 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
        Create In-World Text(All Players(All Teams), Custom String("with the help of the people over at workshop.codes"), Vector(0, 0, 0), 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
        Create In-World Text(All Players(All Teams), Custom String("and lastly: you guys, Thanks for playing!"), Vector(0, 0, 0), 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
        Start Camera(All Players(Team 1), Vector(0, 0, 0), Vector(0, 0, 0), 0);
    }
}

disabled rule ("257 Devestator Big Boss 1===============================================") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Value In Array(Global.extraVar, 25) == 1;
    }
    actions {
        "might make it so the hammonds arent attached and roll around"
        Create Dummy Bot(Hero(Orisa), Team 2, -1, Vector(-80.776, -159.164, 59.549), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 0, Slot Of(Players In Slot(0, Team 2)));
        Wait(5, Ignore Condition);
        Set Damage Dealt(Event Player, 200);
        Set Knockback Received(Event Player, 0);
        Set Player Variable(Event Player, Speed, 100);
        Start Scaling Player(Event Player, 3, True);
        Set Max Health(Event Player, 1000);
        Start Forcing Dummy Bot Name(Event Player, Custom String("Devastator"));
        Wait(0.016, Ignore Condition);
        Create Dummy Bot(Hero(Wrecking Ball), Team 2, -1, Event Player, Vector(0, 0, 0));
        Wait(0.016, Ignore Condition);
        Attach Players(Last Created Entity, Players On Hero(Hero(Orisa), Team 2), Vector(1, 3, 1));
        Wait(0.016, Ignore Condition);
        Set Player Variable(Last Created Entity, Part, Custom String("Rocket launcher"));
        Add Health Pool To Player(Event Player, Armor, 3000, True, True);
        Add Health Pool To Player(Event Player, Health, 3000, True, True);
        Wait(0.016, Ignore Condition);
        Create Dummy Bot(Hero(Wrecking Ball), Team 2, -1, Event Player, Vector(0, 0, 0));
        Wait(0.016, Ignore Condition);
        Attach Players(Last Created Entity, Event Player, Vector(-1, 3, 1));
        Wait(0.016, Ignore Condition);
        Set Player Variable(Last Created Entity, Part, Custom String("Rocket launcher"));
        Wait(0.016, Ignore Condition);
        Create Dummy Bot(Hero(Wrecking Ball), Team 2, -1, Event Player, Vector(0, 0, 0));
        Wait(0.016, Ignore Condition);
        Attach Players(Last Created Entity, Event Player, Vector(0, 4, -1));
        Wait(0.016, Ignore Condition);
        Set Player Variable(Last Created Entity, Part, Custom String("Generator"));
        Wait(0.016, Ignore Condition);
        Create Dummy Bot(Hero(Bastion), Team 2, -1, Event Player, Vector(0, 0, 0));
        Wait(0.016, Ignore Condition);
        Attach Players(Last Created Entity, Event Player, Vector(1.75, 4.25, 0));
        Wait(0.016, Ignore Condition);
        Set Player Variable(Last Created Entity, Part, Custom String("Cannon"));
        Wait(0.016, Ignore Condition);
        Create Dummy Bot(Hero(Bastion), Team 2, -1, Event Player, Vector(0, 0, 0));
        Wait(0.016, Ignore Condition);
        Attach Players(Last Created Entity, Event Player, Vector(-1.75, 4.25, 0));
        Wait(0.016, Ignore Condition);
        Set Player Variable(Last Created Entity, Part, Custom String("Cannon"));
        Wait(0.016, Ignore Condition);
        Create Dummy Bot(Hero(Wrecking Ball), Team 2, -1, Event Player, Vector(0, 0, 0));
        Wait(0.016, Ignore Condition);
        Attach Players(Last Created Entity, Event Player, Vector(0, 1.75, -1.25));
        Wait(0.016, Ignore Condition);
        Set Player Variable(Last Created Entity, Part, Custom String("Leg joint"));
        If(Is Dead(Event Player));
            "set this to be looped and simplified"
            Remove All Health Pools From Player(Event Player);
            Play Effect(All Players(All Teams), Junkrat RIP Tire Explosion Effect, Color(White), Event Player, 1);
            Play Effect(All Players(All Teams), Junkrat RIP Tire Explosion Sound, Color(White), Eye Position(Event Player), 200);
            Play Effect(All Players(All Teams), Ashe Dynamite Explosion Effect, Color(White), Event Player, 1);
            Play Effect(All Players(All Teams), Ashe Dynamite Explosion Sound, Color(White), Eye Position(Event Player), 200);
            Play Effect(All Players(All Teams), DVa Self Destruct Explosion Effect, Color(White), Event Player, 1);
            Play Effect(All Players(All Teams), DVa Self Destruct Explosion Sound, Color(White), Eye Position(Event Player), 200);
            Wait(0.25, Ignore Condition);
        End;
        Wait Until(Is Alive(Event Player), 99999);
        If(Compare((Event Player).Part, ==, Custom String("rocket launcher")));
            Start Forcing Dummy Bot Name(Event Player, Custom String("Rocket launcher"));
            Set Max Health(Event Player, 500);
            Wait(2, Ignore Condition);
            Set Healing Received(Event Player, 0);
        Else If(Compare((Event Player).Part, ==, Custom String("generator")));
            Start Forcing Dummy Bot Name(Event Player, Custom String("Generator"));
            Create Effect(All Players(All Teams), Ana Nano Boosted Effect, Color(White), Event Player, 1, Visible To Position and Radius);
            Set Max Health(Event Player, 500);
            Wait(2, Ignore Condition);
            Set Healing Received(Event Player, 0);
        Else If(Compare((Event Player).Part, ==, Custom String("Cannon")));
            Wait(0.25, Abort When False);
            Start Forcing Throttle(Event Player, 1, 1, 0, 1, 0, 1);
            Set Knockback Dealt(Event Player, 0);
            Start Forcing Dummy Bot Name(Event Player, Custom String("Cannon"));
            Set Max Health(Event Player, 1000);
            Start Scaling Player(Event Player, 1.5, True);
            Wait(2, Ignore Condition);
            Set Healing Received(Event Player, 0);
        Else If(Compare((Event Player).Part, ==, Custom String("Leg joint")));
            Start Forcing Dummy Bot Name(Event Player, Custom String("Leg joint"));
            Set Max Health(Event Player, 500);
            Start Scaling Player(Event Player, 1.2, True);
            Create Effect(All Players(All Teams), Ana Nano Boosted Effect, Color(White), Event Player, 1, Visible To Position and Radius);
            Wait(2, Ignore Condition);
            Set Healing Received(Event Player, 0);
        Else If(Compare((Event Player).Part, ==, Custom String("Leg joint")));
    }
}

disabled rule ("263 Cannon stay in form") {
    event {
        Ongoing - Each Player;
        Team 2;
        Bastion;
    }
    conditions {
        Is Using Ability 1(Event Player) == False;
        (Event Player).Part == Custom String("Cannon");
    }
    actions {
        Press Button(Event Player, Button(Ability 1));
        Wait(0.25, Ignore Condition);
        Loop If Condition Is True;
    }
}

disabled rule ("266 Omnic Big Boss Part destroyed") {
    event {
        Player Died;
        Team 2;
        All;
    }
    actions {
        If(Compare((Event Player).Part, ==, Custom String("leg joint")));
            Set Player Variable(Players Within Radius(Event Player, 5, Team Of(Event Player), Off), Speed, False);
            Set Status(Players Within Radius(Event Player, 5, Team Of(Event Player), Off), Null, Stunned, 2);
        Else If(Compare((Event Player).Part, ==, Custom String("rocket launcher")));
            Set Status(Players Within Radius(Event Player, 5, Team Of(Event Player), Off), Null, Stunned, 2);
        Else If(Compare((Event Player).Part, ==, Custom String("Cannon")));
            Set Status(Players Within Radius(Event Player, 5, Team Of(Event Player), Off), Null, Stunned, 2);
            Play Effect(All Players(All Teams), Ashe Dynamite Explosion Effect, Color(White), Event Player, 1);
            Play Effect(All Players(All Teams), Ashe Dynamite Explosion Sound, Color(White), Eye Position(Event Player), 200);
        Else If(Compare((Event Player).Part, ==, Custom String("Generator")));
            Play Effect(All Players(All Teams), Sombra EMP Explosion Effect, Color(White), Event Player, 1);
            Play Effect(All Players(All Teams), Sombra EMP Explosion Sound, Color(White), Eye Position(Event Player), 200);
            Set Status(Players Within Radius(Event Player, 5, Team Of(Event Player), Off), Null, Stunned, 4);
            Damage(Players Within Radius(Event Player, 5, Team Of(Event Player), Off), Attacker, 1500);
            Play Effect(All Players(All Teams), Junkrat RIP Tire Explosion Effect, Color(White), Event Player, 1);
            Play Effect(All Players(All Teams), Junkrat RIP Tire Explosion Sound, Color(White), Eye Position(Event Player), 200);
    }
}

disabled rule ("270 Making cannons shoot") {
    event {
        Ongoing - Each Player;
        Team 2;
        Bastion;
    }
    conditions {
        Is Button Held(Players On Hero(Hero(Orisa), Team 2), Button(Primary Fire)) == True;
        (Event Player).Part == Custom String("Cannon");
    }
    actions {
        Press Button(Event Player, Button(Secondary Fire));
        Wait(0.1, Ignore Condition);
        Cancel Primary Action(Event Player);
        Wait(0.1, Ignore Condition);
        Wait(3, Ignore Condition);
        Loop If Condition Is True;
    }
}

disabled rule ("271 Making rockets shoot") {
    event {
        Ongoing - Each Player;
        Team 2;
        Wrecking Ball;
    }
    conditions {
        Is Button Held(Players On Hero(Hero(Orisa), Team 2), Button(Primary Fire)) == True;
        Is Alive(Event Player) == True;
        (Event Player).Part == Custom String("Rocket launcher");
    }
    actions {
        Play Effect(All Players(All Teams), DVa Micro Missiles Explosion Sound, Color(White), Eye Position(Event Player), 200);
        Play Effect(All Players(All Teams), DVa Micro Missiles Explosion Effect, Color(White), Event Player, 1);
        Create Homing Projectile(Pharah Rocket, Event Player, Null, Null, To World, Damage, Opposite Team Of(Team Of(Event Player)), 100, 1, 3, Ashe Dynamite Explosion Effect, Ashe Dynamite Explosion Sound, 0, 50, 5, 0, Ray Cast Hit Player(Eye Position(Event Player), Add(Eye Position(Event Player), Multiply(Facing Direction Of(Event Player), 100)), All Players(All Teams), Event Player, True), 0.25);
        Wait(0.5, Ignore Condition);
        Wait(3, Ignore Condition);
        Loop If Condition Is True;
    }
}

disabled rule ("272 Unleash fire breath shoot") {
    event {
        Ongoing - Each Player;
        Team 2;
        Orisa;
    }
    conditions {
        Is Using Ability 2(Event Player) == True;
    }
    actions {
        Create Projectile(Reinhardt Fire Strike, Event Player, Null, Null, To World, Damage, Opposite Team Of(Team Of(Event Player)), 50, 1, 0, Reinhardt Fire Strike Target Impact Effect, Reinhardt Fire Strike Target Impact Sound, 0.1, 50, 5, 0, 0, 0);
        Wait(0.05, Ignore Condition);
        Loop If Condition Is True;
    }
}

disabled rule ("273 Colossal charger stats Big boss 2 ===================================================") {
    event {
        Ongoing - Each Player;
        Team 2;
        Reinhardt;
    }
    conditions {
        Is Alive(Event Player) == True;
        Value In Array(Global.extraVar, 25) == 2;
    }
    actions {
        Create Dummy Bot(Hero(Reinhardt), Team 2, 0, Vector(-80.776, -159.164, 59.549), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 0, Slot Of(Players In Slot(0, Team 2)));
        Set Damage Dealt(Event Player, 50);
        Set Move Speed(Event Player, 50);
        Set Player Variable(Event Player, Part, 1);
        Set Knockback Received(Event Player, 20);
        Set Player Variable(Event Player, Head_HP, 1500);
        Set Status(Event Player, Null, Unkillable, 9999);
        Set Max Health(Event Player, 1000);
        Start Forcing Dummy Bot Name(Event Player, Custom String("Colossal Charger "));
        Start Scaling Player(Event Player, 2, True);
        Wait(0.25, Ignore Condition);
        Create Effect(All Players(All Teams), Echo Cloning Effect, Color(White), Event Player, 1, Visible To Position and Radius);
        Wait(0.016, Ignore Condition);
        Create Dummy Bot(Hero(Bastion), Team 2, -1, Event Player, Vector(0, 0, 0));
        Wait(0.5, Ignore Condition);
        Attach Players(Last Created Entity, Players On Hero(Hero(Reinhardt), Team 2), Vector(-1.5, 1.25, 0));
        Start Facing(Last Created Entity, Facing Direction Of(Event Player), 1000, To World, Direction and Turn Rate);
        Set Player Variable(Last Created Entity, Part, Custom String("Minigun"));
        Wait(0.016, Ignore Condition);
        Create Dummy Bot(Hero(Wrecking Ball), Team 2, -1, Event Player, Vector(0, 0, 0));
        Wait(0.016, Ignore Condition);
        Attach Players(Last Created Entity, Players On Hero(Hero(Reinhardt), Team 2), Vector(1.25, 2.5, 0.75));
        Add Health Pool To Player(Event Player, Health, 2000, True, True);
        Set Player Variable(Last Created Entity, Part, Custom String("Arm connector"));
        Wait Until(Is Dead(Event Player), 99999);
        Remove All Health Pools From Player(Event Player);
    }
}

disabled rule ("274 Minigun stats") {
    event {
        Ongoing - Each Player;
        Team 2;
        Bastion;
    }
    conditions {
        Is Dummy Bot(Event Player) == True;
        (Event Player).Part == Custom String("Minigun");
    }
    actions {
        Wait(0.25, Abort When False);
        Set Projectile Speed(Event Player, 125);
        Set Knockback Dealt(Event Player, 0);
        Set Max Health(Event Player, 1000);
        Start Forcing Dummy Bot Name(Event Player, Custom String("Minigun"));
        Start Forcing Throttle(Event Player, 1, 1, 0, 1, 0, 1);
        Wait(0.25, Ignore Condition);
        "createEffect(getAllPlayers(), Effect.ECHO_CLONING, Color.WHITE, eventPlayer, 1, EffectReeval.VISIBILITY_POSITION_AND_RADIUS)"
        Wait Until(Is Dead(Event Player), 99999);
        Set Status(Players Within Radius(Event Player, 3, Team Of(Event Player), Off), Null, Stunned, 1);
    }
}

disabled rule ("Minigun stay in form") {
    event {
        Ongoing - Each Player;
        Team 2;
        Bastion;
    }
    conditions {
        Is Using Ability 1(Event Player) == False;
    }
    actions {
        Press Button(Event Player, Button(Ability 1));
        Set Ability Cooldown(Event Player, Button(Ability 1), 0);
        Wait(0.25, Ignore Condition);
        Loop If Condition Is True;
    }
}

disabled rule ("276 Arm connector stats") {
    event {
        Ongoing - Each Player;
        Team 2;
        Wrecking Ball;
    }
    conditions {
        Is Dummy Bot(Event Player) == True;
        (Event Player).Part == Custom String("Arm connector");
    }
    actions {
        Set Healing Received(Event Player, 0);
        Set Max Health(Event Player, 500);
        Start Forcing Dummy Bot Name(Event Player, Custom String("Arm connector"));
        Start Scaling Player(Event Player, 0.8, True);
        Set Player Variable(Event Player, Part2, True);
        Wait(0.25, Ignore Condition);
        Create Effect(All Players(All Teams), Echo Cloning Effect, Color(White), Event Player, 1, Visible To Position and Radius);
        Wait Until(Is Dead(Event Player), 99999);
        Set Status(Players Within Radius(Event Player, 3, Team Of(Event Player), Off), Null, Stunned, 1);
        Set Ultimate Ability Enabled(Players Within Radius(Event Player, 3, Team Of(Event Player), Off), False);
        Set Player Variable(Players Within Radius(Event Player, 3, Team Of(Event Player), Off), Part, False);
    }
}

disabled rule ("277 Colossal charger dies") {
    event {
        Player Took Damage;
        Team 2;
        Reinhardt;
    }
    conditions {
        Health(Event Player) == 1;
        First Of(Global.extraVar) == 20;
    }
    actions {
        Set Status(Players Within Radius(Event Player, 3, Team Of(Event Player), Off), Null, Stunned, 6);
        Wait(3, Ignore Condition);
        Set Status(Event Player, Null, Knocked Down, 9999);
        Stop Forcing Throttle(Players Within Radius(Event Player, 3, Team Of(Event Player), Off));
        Detach Players(Players Within Radius(Event Player, 3, Team Of(Event Player), Off));
        Wait(1, Ignore Condition);
        Clear Status(Event Player, Unkillable);
        Wait(0.016, Ignore Condition);
        Kill(Players Within Radius(Event Player, 3, Team Of(Event Player), Off), Null);
        Wait Until(Is Alive(Event Player), 99999);
        Destroy All Effects;
    }
}

disabled rule ("278 Colossal charger head hp function") {
    event {
        Player Took Damage;
        Team 2;
        Reinhardt;
    }
    conditions {
        Event Was Critical Hit == True;
        (Event Player).Head_HP > 0;
        First Of(Global.extraVar) == 20;
    }
    actions {
        Modify Player Variable(Event Player, Head_HP, Subtract, Event Damage);
    }
}

disabled rule ("279 Colossal charger lose head") {
    event {
        Ongoing - Each Player;
        Team 2;
        Reinhardt;
    }
    conditions {
        (Event Player).Head_HP <= 0;
        First Of(Global.extraVar) == 20;
    }
    actions {
        Set Status(Event Player, Null, Stunned, 2);
        Create Effect(All Players(All Teams), Bad Aura, Color(Red), Eye Position(Event Player), 2, Visible To Position and Radius);
        Play Effect(All Players(All Teams), Wrecking Ball Minefield Explosion Effect, Color(White), Eye Position(Event Player), 1);
        Play Effect(All Players(All Teams), Wrecking Ball Minefield Explosion Sound, Color(White), Eye Position(Event Player), 200);
    }
}

disabled rule ("280 Colossal charger slam") {
    event {
        Ongoing - Each Player;
        Team 2;
        Reinhardt;
    }
    conditions {
        Is Using Ultimate(Event Player) == True;
        First Of(Global.extraVar) == 20;
    }
    actions {
        Play Effect(All Players(All Teams), Doomfist Meteor Strike Impact Effect, Color(White), Position Of(Event Player), 1);
        Play Effect(All Players(All Teams), Doomfist Meteor Strike Impact Sound, Color(White), Eye Position(Event Player), 200);
        Damage(Players Within Radius(Event Player, 15, Opposite Team Of(Team Of(Event Player)), Surfaces And Enemy Barriers), Event Player, 75);
    }
}

disabled rule ("281 Colossal charger firestrike barrage") {
    event {
        Ongoing - Each Player;
        Team 2;
        Reinhardt;
    }
    conditions {
        Is Using Ability 2(Event Player) == True;
        First Of(Global.extraVar) == 20;
    }
    actions {
        Cancel Primary Action(Event Player);
        Press Button(Event Player, Button(Ability 2));
        Wait(0.5, Ignore Condition);
        Set Ability Cooldown(Event Player, Button(Ability 2), 8);
    }
}

disabled rule ("282 Making minigun shoot") {
    event {
        Ongoing - Each Player;
        Team 2;
        Bastion;
    }
    conditions {
        Is Button Held(Players On Hero(Hero(Reinhardt), Team 2), Button(Primary Fire)) == True;
        (Event Player).Part == Custom String("Minigun");
    }
    actions {
        Press Button(Event Player, Button(Secondary Fire));
        Wait(0.05, Ignore Condition);
        Cancel Primary Action(Event Player);
        Wait(0.05, Ignore Condition);
        Wait(5, Ignore Condition);
        Loop If Condition Is True;
    }
}

disabled rule ("283 Imperial warmech setup ================================================") {
    event {
        Ongoing - Each Player;
        Team 2;
        D.Va;
    }
    conditions {
        Value In Array(Global.extraVar, 25) == 3;
    }
    actions {
        Create Dummy Bot(Hero(D.Va), Team 2, 0, Vector(-80.776, -159.164, 59.549), Vector(0, 0, 0));
        Set Global Variable At Index(omnicspawn, 0, Slot Of(Players In Slot(0, Team 2)));
        "Imperial warmech"
        Set Knockback Received(Event Player, 0);
        Set Move Speed(Event Player, 100);
        Set Damage Dealt(Event Player, 200);
        Start Scaling Player(Event Player, 3, True);
        Start Forcing Dummy Bot Name(Event Player, Custom String("Imperial warmech "));
        Wait(3, Ignore Condition);
        "Cannon 1"
        Create Dummy Bot(Hero(Wrecking Ball), Team 2, -1, Event Player, Vector(0, 0, 0));
        Wait(1, Ignore Condition);
        Attach Players(Last Created Entity, Players On Hero(Hero(D.Va), Team 2), Vector(0, 6.1, 1));
        Set Player Variable(Last Created Entity, Part, Custom String("Cannon"));
        Start Facing(Last Created Entity, Facing Direction Of(Event Player), 1000, To World, Direction and Turn Rate);
        Wait(0.016, Ignore Condition);
        "Cannon 2"
        Create Dummy Bot(Hero(Wrecking Ball), Team 2, -1, Event Player, Vector(0, 0, 0));
        Wait(1, Ignore Condition);
        Attach Players(Last Created Entity, Players On Hero(Hero(D.Va), Team 2), Vector(2.15, 5.4, 1));
        Set Player Variable(Last Created Entity, Part, Custom String("Cannon"));
        Start Facing(Last Created Entity, Facing Direction Of(Event Player), 1000, To World, Direction and Turn Rate);
        Wait(0.016, Ignore Condition);
        "Cannon 3"
        Create Dummy Bot(Hero(Wrecking Ball), Team 2, -1, Event Player, Vector(0, 0, 0));
        Wait(1, Ignore Condition);
        Attach Players(Last Created Entity, Players On Hero(Hero(D.Va), Team 2), Vector(-2.15, 5.4, 1));
        Set Player Variable(Last Created Entity, Part, Custom String("Cannon"));
        Start Facing(Last Created Entity, Facing Direction Of(Event Player), 1000, To World, Direction and Turn Rate);
        Wait(0.016, Ignore Condition);
        "Machine gun 1"
        Create Dummy Bot(Hero(Bastion), Team 2, -1, Event Player, Vector(0, 0, 0));
        Wait(1, Ignore Condition);
        Attach Players(Last Created Entity, Players On Hero(Hero(D.Va), Team 2), Vector(2, 3, 1));
        Set Player Variable(Last Created Entity, Part, Custom String("Machine gun"));
        Start Facing(Last Created Entity, Facing Direction Of(Event Player), 1000, To World, Direction and Turn Rate);
        Wait(0.016, Ignore Condition);
        "Machine gun 2"
        Create Dummy Bot(Hero(Bastion), Team 2, -1, Event Player, Vector(0, 0, 0));
        Wait(1, Ignore Condition);
        Attach Players(Last Created Entity, Players On Hero(Hero(D.Va), Team 2), Vector(-2, 3, 1));
        Set Player Variable(Last Created Entity, Part, Custom String("Machine gun"));
        Add Health Pool To Player(Event Player, Armor, 9999, True, True);
        Start Facing(Last Created Entity, Facing Direction Of(Event Player), 1000, To World, Direction and Turn Rate);
        Wait Until(Is Dead(Event Player), 99999);
        Remove All Health Pools From Player(Event Player);
    }
}

disabled rule ("284 Cannon stats") {
    event {
        Ongoing - Each Player;
        Team 2;
        Wrecking Ball;
    }
    conditions {
        (Event Player).Part == Custom String("Cannon");
    }
    actions {
        Set Healing Received(Event Player, 0);
        Set Max Health(Event Player, 500);
        Start Forcing Dummy Bot Name(Event Player, Custom String("Homing Cannon"));
        Wait(0.35, Ignore Condition);
        Wait Until(Is Dead(Event Player), 99999);
        Set Status(Players Within Radius(Event Player, 5, Team Of(Event Player), Off), Null, Stunned, 2);
    }
}

disabled rule ("285 Cannon shoot") {
    event {
        Ongoing - Each Player;
        Team 2;
        Wrecking Ball;
    }
    conditions {
        Is Button Held(Players On Hero(Hero(D.Va), Team 2), Button(Primary Fire)) == True;
    }
    actions {
        Create Homing Projectile(Sigma Hypersphere, Event Player, Null, Null, To World, Damage, Opposite Team Of(Team Of(Event Player)), 75, 0, 5, Bastion Tank Cannon Explosion Effect, Bastion Tank Cannon Explosion Sound, 0.1, 30, 5, 5, Player Closest To Reticle(Event Player, Opposite Team Of(Team Of(Event Player))), 0.5);
        Play Effect(All Players(All Teams), Cassidy Flashbang Explosion Sound, Color(White), Eye Position(Event Player), 100);
        Play Effect(All Players(All Teams), Bad Explosion, Color(Gray), Event Player, 2);
        Wait(1, Ignore Condition);
        Loop If Condition Is True;
    }
}

disabled rule ("286 Machine gun stats") {
    event {
        Ongoing - Each Player;
        Team 2;
        Bastion;
    }
    conditions {
        Is Dummy Bot(Event Player) == True;
        (Event Player).Part == Custom String("Machine gun");
    }
    actions {
        Set Damage Dealt(Event Player, 100);
        Start Scaling Player(Event Player, 1.25, True);
        Set Max Health(Event Player, 1000);
        Start Forcing Dummy Bot Name(Event Player, Custom String("Machine gun"));
        Start Forcing Throttle(Event Player, 1, 1, 0, 1, 0, 1);
        Wait(0.35, Ignore Condition);
        Wait Until(Is Dead(Event Player), 99999);
        Set Status(Players Within Radius(Event Player, 5, Team Of(Event Player), Off), Null, Stunned, 2);
    }
}

disabled rule ("287 Machine gun keep form") {
    event {
        Ongoing - Each Player;
        Team 2;
        Bastion;
    }
    conditions {
        Is Using Ability 1(Event Player) == False;
        Is Dummy Bot(Event Player) == True;
    }
    actions {
        Set Ability Cooldown(Event Player, Button(Ability 1), 0);
        Press Button(Event Player, Button(Ability 1));
        Wait(0.25, Ignore Condition);
        Loop If Condition Is True;
    }
}

disabled rule ("288 Machine gun shoot") {
    event {
        Ongoing - Each Player;
        Team 2;
        Bastion;
    }
    conditions {
        Is Button Held(Players On Hero(Hero(D.Va), Team 2), Button(Primary Fire)) == True;
        Is Dummy Bot(Event Player) == True;
    }
    actions {
        Start Holding Button(Event Player, Button(Primary Fire));
        Wait(2, Ignore Condition);
        Stop Holding Button(Event Player, Button(Primary Fire));
        Wait(1, Abort When False);
        Loop If Condition Is True;
    }
}

disabled rule ("289 Imperial warmech set attacks") {
    event {
        Ongoing - Each Player;
        Team 2;
        D.Va;
    }
    conditions {
        Is Button Held(Event Player, Button(Primary Fire)) == True;
        Is Alive(Event Player) == True;
    }
    actions {
        Set Player Variable(Event Player, Major_Attacks, Random Integer(2, 6));
        Wait(0.25, Ignore Condition);
        If(Compare((Event Player).Major_Attacks, ==, 2));
            Play Effect(All Players(All Teams), Wrecking Ball Piledriver Impact Sound, Color(White), Eye Position(Event Player), 200);
            Play Effect(All Players(All Teams), Wrecking Ball Piledriver Impact Effect, Color(White), Position Of(Event Player), 1);
            Wait(0.75, Ignore Condition);
            Create Dummy Bot(Hero(Pharah), Team 2, -1, Event Player, Vector(0, 0, 0));
            Wait(0.016, Ignore Condition);
            Set Status(Last Created Entity, Null, Phased Out, 9999);
            Attach Players(Last Created Entity, Event Player, Vector(0, 5, 0));
            Start Facing(Last Created Entity, Facing Direction Of(Event Player), 1000, To World, Direction and Turn Rate);
            Wait(7, Ignore Condition);
            Loop If Condition Is True;
        Else If(Compare((Event Player).Major_Attacks, ==, 3));
            Create Dummy Bot(Hero(Zarya), Team 2, -1, Event Player, Vector(0, 0, 0));
            Wait(0.016, Ignore Condition);
            Set Status(Last Created Entity, Null, Phased Out, 9999);
            Attach Players(Last Created Entity, Event Player, Vector(0, 2, 0));
            Start Facing(Last Created Entity, Add(Facing Direction Of(Event Player), Vector(Random Integer(-1, 1), 0, 0)), 1000, To Player, Direction and Turn Rate);
            Wait(7, Ignore Condition);
            Loop If Condition Is True;
        Else If(Compare((Event Player).Major_Attacks, ==, 4));
            Create Dummy Bot(Hero(Sojourn), Team 2, -1, Event Player, Vector(0, 0, 0));
            Wait(0.016, Ignore Condition);
            Set Status(Last Created Entity, Null, Phased Out, 9999);
            Attach Players(Last Created Entity, Event Player, Vector(0, 5, 0));
            Start Facing(Last Created Entity, Facing Direction Of(Event Player), 1000, To World, Direction and Turn Rate);
            Wait(7, Ignore Condition);
            Loop If Condition Is True;
        Else If(Compare((Event Player).Major_Attacks, ==, 5));
            Create Dummy Bot(Hero(Moira), Team 2, -1, Event Player, Vector(0, 0, 0));
            Wait(0.016, Ignore Condition);
            Set Status(Last Created Entity, Null, Phased Out, 9999);
            Attach Players(Last Created Entity, Event Player, Vector(0, 4, 0));
            Start Facing(Last Created Entity, Facing Direction Of(Event Player), 1000, To World, Direction and Turn Rate);
            Wait(7, Ignore Condition);
            Loop If Condition Is True;
        Else If(Compare((Event Player).Major_Attacks, ==, 6));
            Create Dummy Bot(Hero(Junkrat), Team 2, -1, Event Player, Vector(0, 0, 0));
            Wait(0.016, Ignore Condition);
            Set Status(Last Created Entity, Null, Phased Out, 9999);
            Attach Players(Last Created Entity, Event Player, Vector(0, 4, -1));
            Start Facing(Last Created Entity, Facing Direction Of(Event Player), 1000, To World, Direction and Turn Rate);
            Wait(7, Ignore Condition);
            Loop If Condition Is True;
    }
}

disabled rule ("290 Rockets function") {
    event {
        Ongoing - Each Player;
        Team 2;
        Pharah;
    }
    conditions {
        Is Dummy Bot(Event Player) == True;
    }
    actions {
        Set Damage Dealt(Event Player, 100);
        Set Invisible(Event Player, All);
        Start Forcing Dummy Bot Name(Event Player, Custom String("Rockets"));
        Wait(0.25, Ignore Condition);
        Set Ultimate Charge(Event Player, 100);
        Press Button(Event Player, Button(Ultimate));
        Wait(2.5, Ignore Condition);
        Set Ultimate Charge(Event Player, 100);
        Press Button(Event Player, Button(Ultimate));
        Wait(3.5, Ignore Condition);
        Destroy Dummy Bot(Team Of(Event Player), Slot Of(Event Player));
    }
}

disabled rule ("291 Artillery setup") {
    event {
        Ongoing - Each Player;
        Team 2;
        Zarya;
    }
    conditions {
        Is Dummy Bot(Event Player) == True;
    }
    actions {
        Set Damage Dealt(Event Player, 100);
        Start Forcing Dummy Bot Name(Event Player, Custom String("Artillery"));
        Set Ammo(Event Player, 0, 1);
        Set Max Ammo(Event Player, 0, 1);
        Set Invisible(Event Player, All);
        Wait(6, Ignore Condition);
        Destroy Dummy Bot(Team Of(Event Player), Slot Of(Event Player));
    }
}

disabled rule ("292 Artillery function") {
    event {
        Ongoing - Each Player;
        Team 2;
        Zarya;
    }
    conditions {
        Is Dummy Bot(Event Player) == True;
    }
    actions {
        Start Holding Button(Event Player, Button(Secondary Fire));
        Wait(0.05, Ignore Condition);
        Set Ammo(Event Player, 0, 1);
        Loop If Condition Is True;
    }
}

disabled rule ("293 Imperial warmech destroyed") {
    event {
        Ongoing - Each Player;
        Team 2;
        D.Va;
    }
    conditions {
        Is In Alternate Form(Event Player) == True;
    }
    actions {
        Wait(0.1, Abort When False);
        Kill(Players Within Radius(Event Player, 7, Team Of(Event Player), Off), Null);
        Play Effect(All Players(All Teams), Bastion Tank Cannon Explosion Sound, Color(White), Eye Position(Event Player), 200);
        Play Effect(All Players(All Teams), Bastion Tank Cannon Explosion Effect, Color(White), Add(Event Player, Vector(Random Integer(-4, 4), Random Integer(-3, 3), Random Integer(-3, 3))), 1);
        Wait(0.25, Ignore Condition);
        Wait Until(Is Dead(Event Player), 99999);
        Destroy All Effects;
        Clear Status(Event Player, Burning);
    }
}

disabled rule ("294 Electric field bombs function") {
    event {
        Ongoing - Each Player;
        Team 2;
        Sojourn;
    }
    conditions {
        Is Dummy Bot(Event Player) == True;
    }
    actions {
        Set Damage Dealt(Event Player, 100);
        Set Invisible(Event Player, All);
        Start Forcing Dummy Bot Name(Event Player, Custom String("Electric field bombs"));
        Wait(0.5, Ignore Condition);
        Press Button(Event Player, Button(Ability 2));
        Wait(0.5, Ignore Condition);
        Cancel Primary Action(Event Player);
        Set Ability Cooldown(Event Player, Button(Ability 2), 0);
        Press Button(Event Player, Button(Ability 2));
        Wait(4, Ignore Condition);
        Destroy Dummy Bot(Team Of(Event Player), Slot Of(Event Player));
    }
}

disabled rule ("295 Laser function") {
    event {
        Ongoing - Each Player;
        Team 2;
        Moira;
    }
    conditions {
        Is Dummy Bot(Event Player) == True;
        First Of(Global.extraVar) == 30;
    }
    actions {
        Set Healing Dealt(Event Player, 0);
        Set Damage Dealt(Event Player, 200);
        Set Invisible(Event Player, All);
        Start Forcing Dummy Bot Name(Event Player, Custom String("Laser"));
        Wait(0.25, Ignore Condition);
        Set Ultimate Charge(Event Player, 100);
        Press Button(Event Player, Button(Ultimate));
        Wait(6.25, Ignore Condition);
        Destroy Dummy Bot(Team Of(Event Player), Slot Of(Event Player));
    }
}

disabled rule ("296 Seeking Mega mine function") {
    event {
        Ongoing - Each Player;
        Team 2;
        Junkrat;
    }
    conditions {
        Is Dummy Bot(Event Player) == True;
    }
    actions {
        Set Max Health(Event Player, 300);
        Set Damage Dealt(Event Player, 100);
        Start Forcing Dummy Bot Name(Event Player, Custom String("Seeking Mega mine"));
        Wait(0.25, Ignore Condition);
        Set Ultimate Charge(Event Player, 100);
        Press Button(Event Player, Button(Ultimate));
        Wait(3, Ignore Condition);
        Press Button(Event Player, Button(Ultimate));
        Wait(2.25, Ignore Condition);
        Destroy Dummy Bot(Team Of(Event Player), Slot Of(Event Player));
    }
}

rule ("arrays") {
    event {
        Ongoing - Global;
    }
    actions {
        Set Global Variable(bossbuypositions, Mapped Array(Mapped Array(String Split(Custom String(".-_0`0~	"), First Of(Null)), Array(Current Array Element, Custom String("	\n\r !\"#$%&'()*+,-./2:;<=>?@Q[\\]^_`q|}~¡"))), Subtract(Vector(Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 0))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 1))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 2)))), Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 6))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 7))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 8)))), Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 3))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 4))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 5))))), Vector(220.941, 220.941, 220.941))));
        Set Global Variable(mysterylocations, Mapped Array(Mapped Array(String Split(Custom String("*0[\")0&0(0\r\r	0:\n0~0¡\n<0:(%\"\"0!]~0%%0,"), First Of(Null)), Array(Current Array Element, Custom String("	\n\r !\"#$%&'()*+,-./2:;<=>?@Q[\\]^_`q|}~¡"))), Subtract(Vector(Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 0))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 1))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 2)))), Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 6))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 7))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 8)))), Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 3))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 4))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 5))))), Vector(242.3, 242.3, 242.3))));
        Set Global Variable(Mysterylocations2, Mapped Array(Mapped Array(String Split(Custom String("!?0=¡0Q00 ^$00@00!0,0~:	0\n-"), First Of(Null)), Array(Current Array Element, Custom String("	\n\r !\"#$%&'()*+,-./2:;<=>?@Q[\\]^_`q|}~¡"))), Subtract(Vector(Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 0))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 1))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 2)))), Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 6))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 7))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 8)))), Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 3))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 4))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 5))))), Vector(243.114, 243.114, 243.114))));
        "maybe set global.roundnumber (the last index) to be a custom string with round"
        Set Global Variable(romanN, Array(Custom String("0"), Custom String("I"), Custom String("II"), Custom String("III"), Custom String("IV"), Custom String("V"), Custom String("VI"), Custom String("VII"), Custom String("VIII"), Custom String("IX"), Custom String("X"), First Of(Global.extraVar), Custom String("0"), Custom String("00110001"), Custom String("00110010"), Custom String("00110011"), Custom String("00110100"), Custom String("00110101"), Custom String("00110110"), Custom String("00110111"), Custom String("00111000"), Custom String("00111001"), First Of(Global.extraVar)));
        Set Global Variable(tipstrings, Array(Custom String("melee to consume less ammo!"), Custom String("reload only when your clip is empty to conserve ammo"), Custom String("you lose your hero if not revived at end of the round"), Custom String("after a playthrough, you keep all the heroes you bought"), Custom String("beating the boss' is well worth the points if you are up to the challenge"), Custom String("its cheaper to use the mystery box than buying a new hero"), Custom String("followers stay with you till you're downed"), Custom String("some custom items can be used by communicating \"i need healing)"), Custom String("there is 3 zones to play in, each with its own boss"), Custom String("perks and hero locations rotate randomly each playthrough on hard"), Custom String("points depend on who gets the last hit!"), Custom String("Every team can benefit from a good healer"), Custom String("A tank is valuable for their durability to the team"), Custom String("pack a punch gives new abilities!")));
        "Door array and radius list door 73 and 81 are the same spot"
        Set Global Variable(doorradius, Mapped Array(Mapped Array(String Split(Custom String("000000000000000000000000000000000000000000000000000	000	00000000{0}", Custom String("0000\n00	000	000000000	000	0")), First Of(Null)), Array(Current Array Element, Custom String("	\n\r !\"#$%&'()*+,-./2:;<=>?@Q[\\]^_`q|}~¡"))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 0))));
        "zone 1 = False, 23 zone 2 = 24, 41 zone 1a, 42, 65 zone 3 = 66, 84 tele = 85, 87"
        Set Global Variable(Vectordoorpositions, Mapped Array(Mapped Array(String Split(Custom String("?Q0@0^?0=0>0/0qq00]\n&02\r=¡0¡0%[02{0}", Custom String("¡0)&	0*	0:0Q,0<+	0<	0}=0:20^-!0+^	0`Q'0\n0'~{0}", Custom String("\\0+Q*0*00[.0\r\"%0¡}%0^;2*0`>$0¡>*0|2*0!\"$0\n${0}", Custom String("0^~#+0<$0?+0	00>0=q@;00#:0:,0#\n0?`0/{0}", Custom String("\n0;\\0-.¡0	+^02\r0,,20^0~+20#0-	0``/>Q0'	q	0{0}", Custom String("0_0	_|	0+@\\0'=0%=0,:>0 ;0;20	;0:~;0. =0~;0{0}", Custom String("<0\\}:0``=20$$<0:>0&)=0. =02\".|202#Q:0QQ;0#]_	0]0.<"))))))), First Of(Null)), Array(Current Array Element, Custom String("	\n\r !\"#$%&'()*+,-./2:;<=>?@Q[\\]^_`q|}~¡"))), Subtract(Vector(Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 0))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 1))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 2)))), Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 6))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 7))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 8)))), Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 3))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 4))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 5))))), Vector(260.662, 260.662, 260.662))));
        Set Global Variable(buyheros, Mapped Array(Mapped Array(String Split(Custom String("+0>0 .00?Q]	0@\n0	;0|<¡0\n0¡ 0=~\r0-0/{0}", Custom String("0'	02\n0 	0)Q\\0~	<0(;\n@0=0¡-)?0:<0?*=0|Q=")), First Of(Null)), Array(Current Array Element, Custom String("	\n\r !\"#$%&'()*+,-./2:;<=>?@Q[\\]^_`q|}~¡"))), Subtract(Vector(Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 0))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 1))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 2)))), Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 6))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 7))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 8)))), Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 3))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 4))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 5))))), Vector(265.11, 265.11, 265.11))));
        "set to: if difficulty is hard, then randomize"
        Set Global Variable(herobuyrandomized, Randomized Array(Global.buyheros));
        Set Global Variable(buyperks, Mapped Array(Mapped Array(String Split(Custom String("~	0\n0)'+0>,\n0-0\"0< #^0_*(0(0@'#"), First Of(Null)), Array(Current Array Element, Custom String("	\n\r !\"#$%&'()*+,-./2:;<=>?@Q[\\]^_`q|}~¡"))), Subtract(Vector(Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 0))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 1))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 2)))), Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 6))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 7))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 8)))), Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 3))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 4))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 5))))), Vector(248.13, 248.13, 248.13))));
        "need to set easy and normal difficulties to not randomize locations for buyables - hard will randomize (except pack a punch)"
        Set Global Variable(perkbuyrandomized, Randomized Array(Global.buyperks));
        Set Global Variable(diedphrase, Array(Custom String("Got rekt"), Custom String("met their end"), Custom String("took a dirt nap!"), Custom String("got owned"), Custom String("reflexes were lacking"), Custom String("'git gud' skills were insufficient"), Custom String("clutch' performance was... underwhelming"), Custom String("skill issue' was tragically evident"), Custom String("luck seemed to have run out"), Custom String("demonstrated a profound lack of spatial awareness."), Custom String("experienced a severe case of target fixation")));
        Set Global Variable(diedtext, Array(Custom String("Got outplayed"), Custom String("Needs a hug"), Custom String("Not so MLG"), Custom String("I'm THROWING")));
        "does this even need an array?"
        Set Global Variable(heroradius, Mapped Array(Mapped Array(String Split(Custom String("00000000000000000000000"), First Of(Null)), Array(Current Array Element, Custom String("	\n\r !\"#$%&'()*+,-./2:;<=>?@Q[\\]^_`q|}~¡"))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 0))));
        "add 1 to the number (accidently started at 1)"
        Set Global Variable(Beameffectdoors, Mapped Array(Mapped Array(String Split(Custom String("\\\r0¡]0¡]0\\^0[2[	0Q0Q%	0[Q0\\[-	0\\[%0\\]Q-\n02[|0{0}", Custom String("\\\r02^0%\r0[0	'~\r00\r00	0_$\r0_q	0@\r0)	0{0}", Custom String("*0**	0[\\0?	0<#.\r0<#[	0}\r0Q(	02'(02'(	0!(00{0}", Custom String("00\n0_\"*0\"0@\"?0!q0&0\r0\r0\"<0/0-?0{0}", Custom String("-?0	0-(0*,^,~0*,^,0q-'0,	0-*^0-)0,:^0	00{0}", Custom String("|	0\"0\":	0]-0]-	020*<\r0\"[\r@0\"[\rq0;0\\.\"]0<\"`0<\"0{0}", Custom String("[\"$0\"?	0&?:\r0&?	0??\r0;}\r0!;~0!;\r0;|0_|#0|#	0|#20<_/#{0}", Custom String("	0_:~0|>	0|> 0^	0\n(\r0: +0: +2\r0(0=0<0<0`~0{0}", Custom String("	0**	0**0		0@/	0+	0+	02/	0	0	0	0}	0¡	\n{0}", Custom String("0'	0'0¡?	'	0,*0_0_=0$+-0Q&¡	0[#0[#@	0]&0~\"\n0{0}", Custom String("-0-	0|0=0::0::0>¡0|[0}?0}\"?0}^[0[0>{0}", Custom String("0?0[0=	0:0:0¡}=0#\n0!&\r0!&	0=#	\r0	0@0{0}", Custom String("@	00_)0_-;=0_-;\r0_(=0	0\\\r0-\n0\r0:>0¡\")!0¡\"){0}", Custom String("Q0;0	0> \r0> 	0#0@Q\n0&]\r0&	0>#0[	0[\r0[	0{0}", Custom String("Q0\\@%	0>q\r0*	02]\r0?	0(< 0(<	0#_\r0]	0?\r0\r\r\n0{0}", Custom String("0[	0\"0\"	0Q0_\n0q=\r0q~\n0Q\r00~_\"0~_0:0{0}", Custom String("¡=0.¡0.¡~0&>}0_\"	0>[0`\"	0=2&\n	0q.(? 0:q)[	0\"<)=0/,-?/\n0-~{0}", Custom String("$0+\\\n0+\\0	-~0!@\n02\n0?\"0&	0):0?\n0&	?0)	*0&\\\n0{0}", Custom String("2~Q0&2	0\\0.~0]&-0.&-|0,*-Q0]\"[0¡)	0¡)0#\"	0`,	0;{0}", Custom String("\r0;\r\n0],q0]Q'	0[Q0<Q)	0QQ\r0q^	0+\\\r0+<	0\r^$\r0¡0~\n	0{0}", Custom String("~\n\r0¡!/0]	0'20'2	0!\r0.|0\n\\0\n\\0}	0[$[0['0[{0}", Custom String("¡0<Q|[0\r)=0Q0=0\r@Q0	!!q[0%-'=0-;@0 >0:[0&+??0&+?Q0{0}", Custom String(":?0#>0q\"%;0q\"%:>0=\";0@?=0)!@#:0)!@;=0,:0?0<0<0{0}", Custom String("?0	?0	;0	;0	?0=	[0,\"	>0=	>0,\"	[0\n?0\n<0\n<0\n?0{0}", Custom String("@@02<0@<02@0_%>0_	:0_%:0_	>0`^=0~_:0`^:0~_=0/{0}", Custom String("Q0<0/<0Q0?Q0\"2>0?>0\"2Q0Q0==0=0=Q0q.(? 0{0}", Custom String(":q)[	0\"<)=0/,-?/\n0q.(? 0:q)[	0\"<)=0/,-?/\n0q.(? 0:q)[	0\"<)=0/,-?/\n0q.(? 0:q){0}", Custom String("[	0\"<)=0/,-?/\n0q.(? 0:q)[	0\"<)=0/,-?/\n")))))))))))))))))))))))))))), First Of(Null)), Array(Current Array Element, Custom String("	\n\r !\"#$%&'()*+,-./2:;<=>?@Q[\\]^_`q|}~¡"))), Subtract(Vector(Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 0))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 1))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 2)))), Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 6))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 7))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 8)))), Add(Add(Multiply(0.01, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 3))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 4))), Multiply(100, Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 5))))), Vector(263.06, 263.06, 263.06))));
        "does this even need an array?"
        Set Global Variable(diedradius, Mapped Array(Mapped Array(String Split(Custom String("000"), First Of(Null)), Array(Current Array Element, Custom String("	\n\r !\"#$%&'()*+,-./2:;<=>?@Q[\\]^_`q|}~¡"))), Index Of String Char(Last Of(Current Array Element), Char In String(First Of(Current Array Element), 0))));
    }
}

rule ("Dev Decompressed hud") {
    event {
        Ongoing - Global;
    }
    actions {
        Create HUD Text(Local Player, Custom String("firstpos {0} secondpos {1} firstpos2 {2}", First Of(Global.firstpos), First Of(Global.secondpos), First Of(Global.firstpoint2)), Null, Null, Left, 0, Color(White), Null, Null, Visible To and String, Default Visibility);
        Create HUD Text(Local Player, Custom String("allpos {0} alldir {1} secondpoint2 {2}", First Of(Global.AllPos), First Of(Global.AllDir), First Of(Global.secondpoint2)), Null, Null, Left, 0, Color(White), Null, Null, Visible To and String, Default Visibility);
    }
}

rule ("Decompress string") {
    event {
        Subroutine;
        DecompressString;
    }
    actions {
        Set Global Variable(decompressed, Mapped Array(Global.compressedData, String Split(Current Array Element, Custom String(","))));
        Set Global Variable(compressedData, Empty Array);
        For Global Variable(i, 0, Count Of(Global.decompressed), 1);
            Modify Global Variable(compressedData, Append To Array, Value In Array(Global.decompressed, Global.i));
        End;
        Set Global Variable(decompressed, Empty Array);
        For Global Variable(i, 0, Count Of(Global.compressedData), 1);
            If(Compare(Char In String(Value In Array(Global.compressedData, Global.i), 0), ==, Custom String("v")));
                Set Global Variable At Index(compressedData, Global.i, String Slice(Value In Array(Global.compressedData, Global.i), 1, 999));
                Call Subroutine(ParseNumber);
                Set Global Variable At Index(scratch, 0, Global.param0);
                Modify Global Variable(i, Add, 1);
                Call Subroutine(ParseNumber);
                Set Global Variable At Index(scratch, 1, Global.param0);
                Modify Global Variable(i, Add, 1);
                Call Subroutine(ParseNumber);
                Set Global Variable At Index(scratch, 2, Global.param0);
                Modify Global Variable(decompressed, Append To Array, Vector(First Of(Global.scratch), Value In Array(Global.scratch, 1), Value In Array(Global.scratch, 2)));
            Else If(Compare(Char In String(Value In Array(Global.compressedData, Global.i), 0), ==, Custom String("c")));
                Modify Global Variable(decompressed, Append To Array, Value In Array(Global.colors, Index Of String Char(Global.numbers, Char In String(Value In Array(Global.compressedData, Global.i), 1))));
            Else If(Compare(Char In String(Value In Array(Global.compressedData, Global.i), 0), ==, Custom String("$")));
                Modify Global Variable(decompressed, Append To Array, String Slice(Value In Array(Global.compressedData, Global.i), 1, 999));
            Else;
                Call Subroutine(ParseNumber);
                Modify Global Variable(decompressed, Append To Array, Global.param0);
            End;
        End;
        Set Global Variable(compressedData, Null);
    }
}

rule ("Parse number") {
    event {
        Subroutine;
        ParseNumber;
    }
    actions {
        Set Global Variable(param0, 0);
        Set Global Variable(param1, 0);
        Set Global Variable(param2, 1);
        Set Global Variable(param3, 0);
        Set Global Variable(param4, Null);
        For Global Variable(charIndex, 0, String Length(Value In Array(Global.compressedData, Global.i)), 1);
            Set Global Variable(param4, Char In String(Value In Array(Global.compressedData, Global.i), Global.charIndex));
            If(Compare(Global.param4, ==, Custom String("-")));
                Modify Global Variable(param2, Multiply, -1);
            Else If(Compare(Global.param4, ==, Custom String(".")));
                Set Global Variable(param3, 10);
            Else;
                Set Global Variable(param1, Index Of String Char(Global.numbers, Global.param4));
                If(Compare(Global.param1, !=, -1));
                    If(Compare(Global.param3, ==, 0));
                        Set Global Variable(param0, Add(Multiply(Global.param0, 10), Global.param1));
                    Else;
                        Modify Global Variable(param0, Add, Divide(Global.param1, Global.param3));
                        Modify Global Variable(param3, Multiply, 10);
                    End;
                End;
            End;
        End;
        Modify Global Variable(param0, Multiply, Global.param2);
    }
}

rule ("set arrays") {
    event {
        Ongoing - Global;
    }
    actions {
        Set Global Variable(numbers, Custom String("0123456789abcdef"));
        Set Global Variable(compressedData, Custom String("v132,0,304,4,4,90,1,5,5"));
        Call Subroutine(DecompressString);
        Set Global Variable(doorscompresser, Global.decompressed);
    }
}

rule ("use data from original point of door") {
    event {
        Ongoing - Global;
    }
    actions {
        "Note: this '__for__' had no 'end' action."
        If(Or(And(Compare(Count Of(Global.doorscompresser), >, 0), Compare(Global.i, <, 0)), And(Compare(Count Of(Global.doorscompresser), <=, 0), Compare(Global.i, >, 0))));
            Modify Global Variable(Beameffectdoors, Append To Array, Value In Array(Global.doorscompresser, Global.i));
            Modify Global Variable(Beameffectdoors, Append To Array, Add(Add(Value In Array(Global.doorscompresser, Global.i), Multiply(Direction From Angles(Value In Array(Global.doorscompresser, Add(Global.i, 3)), 0), Value In Array(Global.doorscompresser, Add(Global.i, 2)))), Multiply(Up, Value In Array(Global.doorscompresser, Add(Global.i, 1)))));
            Modify Global Variable(Beameffectdoors, Append To Array, Add(Value In Array(Global.doorscompresser, Global.i), Multiply(Up, Value In Array(Global.doorscompresser, Add(Global.i, 2)))));
            Modify Global Variable(Beameffectdoors, Append To Array, Add(Value In Array(Global.doorscompresser, Global.i), Multiply(Direction From Angles(Value In Array(Global.doorscompresser, Add(Global.i, 3)), 0), Value In Array(Global.doorscompresser, Add(Global.i, 2)))));
            Modify Global Variable(AllDir, Append To Array, Direction From Angles(Add(Value In Array(Global.doorscompresser, Add(Global.i, 3)), 90), 0));
            Modify Global Variable(firstpos, Append To Array, Value In Array(Global.doorscompresser, Global.i));
            Modify Global Variable(secondpos, Append To Array, Add(Add(Value In Array(Global.doorscompresser, Global.i), Multiply(Direction From Angles(Value In Array(Global.doorscompresser, Add(Global.i, 3)), 0), Value In Array(Global.doorscompresser, Add(Global.i, 2)))), Multiply(Up, Value In Array(Global.doorscompresser, Add(Global.i, 1)))));
            Modify Global Variable(firstpoint2, Append To Array, Add(Value In Array(Global.doorscompresser, Global.i), Multiply(Up, Value In Array(Global.doorscompresser, Add(Global.i, 2)))));
            Modify Global Variable(secondpoint2, Append To Array, Add(Value In Array(Global.doorscompresser, Global.i), Multiply(Direction From Angles(Value In Array(Global.doorscompresser, Add(Global.i, 3)), 0), Value In Array(Global.doorscompresser, Add(Global.i, 2)))));
            Modify Global Variable(AllPos, Append To Array, Divide(Add(Value In Array(Global.firstpos, Global.i), Value In Array(Global.secondpos, Global.i)), 2));
    }
}

rule ("Initial Global") {
    event {
        Ongoing - Global;
    }
    actions {
        Set Global Variable(AllPos, Empty Array);
        Set Global Variable(AllDir, Empty Array);
        Set Global Variable(firstpos, Empty Array);
        Set Global Variable(secondpos, Empty Array);
        Set Global Variable(firstpoint2, Empty Array);
        Set Global Variable(secondpoint2, Empty Array);
        Set Global Variable(second, Empty Array);
        Set Global Variable(z, Empty Array);
        Set Global Variable(Wall_ID, Empty Array);
        Set Global Variable(g_beamType, Empty Array);
    }
}

rule ("Initial Player") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    actions {
        Set Player Variable(Event Player, filterpos, False);
        Set Player Variable(Event Player, lastsavedpos, False);
        Set Player Variable(Event Player, closestbodypos, False);
        Set Player Variable(Event Player, fullbodypos, False);
        Set Player Variable(Event Player, prevpos_intersection, False);
        Set Player Variable(Event Player, active_wall, Empty Array);
        Set Player Variable(Event Player, closestwall, Empty Array);
    }
}

rule ("Collision Logic") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Has Spawned(Event Player) == True;
    }
    actions {
        Set Player Variable(Event Player, lastsavedpos, Divide(Add(Eye Position(Event Player), Position Of(Event Player)), 2));
        Wait(Add(Multiply(Divide(Server Load Average, 255), 0.308000000000000), 0.032), Ignore Condition);
        Set Player Variable(Event Player, closestwall, Filtered Array(Global.AllPos, Or(Or(Compare(Distance Between(Value In Array(Global.AllPos, Current Array Index), Event Player), <=, Distance Between(Value In Array(Global.AllPos, Current Array Index), Value In Array(Global.firstpos, Current Array Index))), Compare(Value In Array((Event Player).active_wall, Current Array Index), ==, 1)), Compare(Compare(Dot Product(Direction Towards(Current Array Element, (Event Player).lastsavedpos), Value In Array(Global.AllDir, Current Array Index)), >, 0), !=, Compare(Dot Product(Direction Towards(Current Array Element, Event Player), Value In Array(Global.AllDir, Current Array Index)), >, 0)))));
        For Player Variable(Event Player, x_, 0, Count Of((Event Player).closestwall), 1);
            Set Global Variable(z, Index Of Array Value(Global.AllPos, Value In Array((Event Player).closestwall, (Event Player).x_)));
            If(Or(Or(Compare(Value In Array(Global.Wall_ID, Global.z), ==, 1), Compare(Value In Array(Global.Wall_ID, Global.z), ==, 3)), Compare(Value In Array(Global.Wall_ID, Global.z), ==, 5)));
                If(And(Compare(Y Component Of(Value In Array(Global.firstpos, Global.z)), >=, Y Component Of(Position Of(Event Player))), Compare(Y Component Of(Value In Array(Global.firstpos, Global.z)), <=, Y Component Of(Add(Eye Position(Event Player), Vector(Empty Array, 0.2, Empty Array))))));
                    Set Player Variable(Event Player, closestbodypos, Value In Array(Global.firstpos, Global.z));
                Else If(And(Compare(Y Component Of(Value In Array(Global.secondpos, Global.z)), >=, Y Component Of(Position Of(Event Player))), Compare(Y Component Of(Value In Array(Global.secondpos, Global.z)), <=, Y Component Of(Add(Eye Position(Event Player), Vector(Empty Array, 0.2, Empty Array))))));
                    Set Player Variable(Event Player, closestbodypos, Value In Array(Global.secondpos, Global.z));
                Else;
                    Set Player Variable(Event Player, closestbodypos, Position Of(Event Player));
                End;
                Set Player Variable(Event Player, fullbodypos, Vector(X Component Of(Eye Position(Event Player)), Y Component Of((Event Player).closestbodypos), Z Component Of(Eye Position(Event Player))));
                Set Player Variable(Event Player, filterpos, Add((Event Player).fullbodypos, Divide(Multiply(Value In Array(Global.AllDir, Global.z), Dot Product(Subtract(Value In Array(Global.AllPos, Global.z), (Event Player).fullbodypos), Value In Array(Global.AllDir, Global.z))), Dot Product(Value In Array(Global.AllDir, Global.z), Value In Array(Global.AllDir, Global.z)))));
                If(Or(Compare(Value In Array(Global.Wall_ID, Global.z), ==, 1), Compare(Value In Array(Global.Wall_ID, Global.z), ==, 3)));
                    If(Compare(Compare(Dot Product(Direction Towards(Value In Array(Global.AllPos, Global.z), (Event Player).lastsavedpos), Value In Array(Global.AllDir, Global.z)), >, 0), !=, Compare(Dot Product(Direction Towards(Value In Array(Global.AllPos, Global.z), (Event Player).fullbodypos), Value In Array(Global.AllDir, Global.z)), >, 0)));
                        Set Player Variable(Event Player, intersection_length, Divide(Dot Product(Subtract(Value In Array(Global.AllPos, Global.z), (Event Player).fullbodypos), Value In Array(Global.AllDir, Global.z)), Dot Product(Direction Towards((Event Player).lastsavedpos, (Event Player).fullbodypos), Value In Array(Global.AllDir, Global.z))));
                        Set Player Variable(Event Player, prevpos_intersection, Add((Event Player).fullbodypos, Multiply(Multiply(Direction Towards((Event Player).lastsavedpos, (Event Player).fullbodypos), Vector(1, Empty Array, 1)), (Event Player).intersection_length)));
                        If(And(And(And(Compare(Dot Product(Direction Towards(Value In Array(Global.firstpos, Global.z), Vector(X Component Of(Value In Array(Global.secondpos, Global.z)), Y Component Of(Value In Array(Global.firstpos, Global.z)), Z Component Of(Value In Array(Global.secondpos, Global.z)))), Direction Towards(Value In Array(Global.firstpos, Global.z), (Event Player).prevpos_intersection)), >=, 0), Compare(Dot Product(Direction Towards(Value In Array(Global.firstpos, Global.z), Vector(X Component Of(Value In Array(Global.firstpos, Global.z)), Y Component Of(Value In Array(Global.secondpos, Global.z)), Z Component Of(Value In Array(Global.firstpos, Global.z)))), Direction Towards(Value In Array(Global.firstpos, Global.z), (Event Player).prevpos_intersection)), >=, 0)), Compare(Dot Product(Direction Towards(Value In Array(Global.secondpos, Global.z), Vector(X Component Of(Value In Array(Global.secondpos, Global.z)), Y Component Of(Value In Array(Global.firstpos, Global.z)), Z Component Of(Value In Array(Global.secondpos, Global.z)))), Direction Towards(Value In Array(Global.secondpos, Global.z), (Event Player).prevpos_intersection)), >=, 0)), Compare(Dot Product(Direction Towards(Value In Array(Global.secondpos, Global.z), Vector(X Component Of(Value In Array(Global.firstpos, Global.z)), Y Component Of(Value In Array(Global.secondpos, Global.z)), Z Component Of(Value In Array(Global.firstpos, Global.z)))), Direction Towards(Value In Array(Global.secondpos, Global.z), (Event Player).prevpos_intersection)), >=, 0)));
                            Cancel Primary Action(Event Player);
                            Teleport(Event Player, Add((Event Player).prevpos_intersection, Multiply(Multiply(Direction Towards((Event Player).prevpos_intersection, (Event Player).lastsavedpos), Vector(1, Empty Array, 1)), 2)));
                        End;
                    End;
                End;
                Set Player Variable(Event Player, thickness, 0);
                If(Compare(Value In Array(Global.Wall_ID, Global.z), ==, 5));
                    Set Player Variable(Event Player, thickness, 8);
                Else;
                    Set Player Variable(Event Player, thickness, 4);
                End;
                If(And(And(And(And(Compare(Distance Between((Event Player).fullbodypos, (Event Player).filterpos), <=, (Event Player).thickness), Compare(Dot Product(Direction Towards(Value In Array(Global.firstpos, Global.z), Vector(X Component Of(Value In Array(Global.secondpos, Global.z)), Y Component Of(Value In Array(Global.firstpos, Global.z)), Z Component Of(Value In Array(Global.secondpos, Global.z)))), Direction Towards(Value In Array(Global.firstpos, Global.z), (Event Player).filterpos)), >=, 0)), Compare(Dot Product(Direction Towards(Value In Array(Global.firstpos, Global.z), Vector(X Component Of(Value In Array(Global.firstpos, Global.z)), Y Component Of(Value In Array(Global.secondpos, Global.z)), Z Component Of(Value In Array(Global.firstpos, Global.z)))), Direction Towards(Value In Array(Global.firstpos, Global.z), (Event Player).filterpos)), >=, 0)), Compare(Dot Product(Direction Towards(Value In Array(Global.secondpos, Global.z), Vector(X Component Of(Value In Array(Global.secondpos, Global.z)), Y Component Of(Value In Array(Global.firstpos, Global.z)), Z Component Of(Value In Array(Global.secondpos, Global.z)))), Direction Towards(Value In Array(Global.secondpos, Global.z), (Event Player).filterpos)), >=, 0)), Compare(Dot Product(Direction Towards(Value In Array(Global.secondpos, Global.z), Vector(X Component Of(Value In Array(Global.firstpos, Global.z)), Y Component Of(Value In Array(Global.secondpos, Global.z)), Z Component Of(Value In Array(Global.firstpos, Global.z)))), Direction Towards(Value In Array(Global.secondpos, Global.z), (Event Player).filterpos)), >=, 0)));
                    If(Compare(Value In Array((Event Player).active_wall, Global.z), ==, False));
                        Set Player Variable At Index(Event Player, active_wall, Global.z, 1);
                        If(And(Or(Compare(Value In Array(Global.Wall_ID, Global.z), ==, 1), Compare(Value In Array(Global.Wall_ID, Global.z), ==, 3)), Compare(Global.is_Grounded, ==, False)));
                            Set Gravity(Event Player, 100);
                        Else If(Compare(Value In Array(Global.Wall_ID, Global.z), ==, 5));
                            Disable Movement Collision With Environment(Event Player, False);
                        End;
                    End;
                    If(Compare(Value In Array(Global.Wall_ID, Global.z), ==, 1));
                        Apply Impulse(Event Player, Multiply(Direction Towards((Event Player).filterpos, (Event Player).fullbodypos), Vector(1, Empty Array, 1)), 1, To World, Cancel Contrary Motion);
                        Set Move Speed(Event Player, Subtract(100, Multiply(Dot Product(Direction Towards(Eye Position(Event Player), Add(Eye Position(Event Player), World Vector Of(Throttle Of(Event Player), Event Player, Rotation))), Multiply(Direction Towards((Event Player).filterpos, (Event Player).fullbodypos), -1)), 100)));
                    Else If(Compare(Value In Array(Global.Wall_ID, Global.z), ==, 3));
                        Apply Impulse(Event Player, Direction Towards((Event Player).filterpos, (Event Player).fullbodypos), Multiply(2, Speed Of(Event Player)), To World, Cancel Contrary Motion);
                    End;
                Else;
                    Set Player Variable At Index(Event Player, active_wall, Global.z, 0);
                    Set Move Speed(Event Player, 100);
                End;
            End;
        End;
        Loop;
    }
}

rule ("Reset") {
    event {
        Ongoing - Each Player;
        All;
        All;
    }
    conditions {
        Count Of(Remove From Array((Event Player).active_wall, 0)) == 0;
    }
    actions {
        Enable Movement Collision With Environment(Event Player);
    }
}

rule ("Rule 6") {
    event {
        Ongoing - Global;
    }
    actions {
        Set Global Variable(Wall_ID, Empty Array);
        Wait(0.032, Ignore Condition);
        "for forindex in range(80):\nWall_ID[forindex] = 1\nwait()"
        Set Global Variable(Wall_ID, Array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1));
        "__end__()"
        Set Global Variable(AllPos, Vector(-3.11, 2.5, -0.27));
        Set Global Variable(firstpos, Vector(-0.11, 0, -0.25));
        Set Global Variable(secondpos, Vector(-6.11, 5, -0.29));
        Set Global Variable(firstpoint2, Vector(-0.11, 5, -0.25));
        Set Global Variable(secondpoint2, Vector(-6.11, 0, 0.29));
        Set Global Variable(AllDir, Direction From Angles(0, 0));
        Set Global Variable At Index(Beameffectdoors, 0, Vector(-0.11, 0, -0.25));
        Set Global Variable At Index(Beameffectdoors, 1, Vector(-6.11, 5, -0.29));
        Set Global Variable At Index(Beameffectdoors, 2, Vector(-0.11, 5, -0.25));
        Set Global Variable At Index(Beameffectdoors, 3, Vector(-6.11, 0, -0.29));
    }
}

rule ("73 Headshot maniac Perk add damage") {
    event {
        Player Dealt Damage;
        Team 1;
        All;
    }
    conditions {
        Value In Array((Event Player).extraPlayerVar, 13) == 1;
        Event Was Critical Hit == True;
        Value In Array((Event Player).extraPlayerVar, 4) < 391;
    }
    actions {
        Modify Player Variable At Index(Event Player, extraPlayerVar, 4, Add, 10);
        Set Damage Dealt(Event Player, Value In Array((Event Player).extraPlayerVar, 4));
    }
}

rule ("74 headshot maniac Perk remove damage") {
    event {
        Player Dealt Damage;
        Team 1;
        All;
    }
    conditions {
        "make it so this plays nicely with pack a punch"
        Event Was Critical Hit == False;
        Value In Array((Event Player).extraPlayerVar, 4) >= 55;
        Value In Array((Event Player).extraPlayerVar, 13) == 1;
    }
    actions {
        Modify Player Variable At Index(Event Player, extraPlayerVar, 4, Subtract, 2.5);
        Set Damage Dealt(Event Player, Value In Array((Event Player).extraPlayerVar, 4));
    }
}

rule ("105 specific hero ammo and double mag") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        "works with this for some reason?"
        (Event Player).doorresponse == False;
    }
    actions {
        "some heros need double mag"
        If(Compare(Hero Of(Event Player), ==, Hero(Moira)));
            If(Is Firing Secondary(Event Player));
                If(Compare(Value In Array((Event Player).extraPlayerVar, 1), ==, False));
                    Modify Player Variable(Event Player, magazines, Subtract, 0.05);
                    Wait(0.25, Ignore Condition);
                    Loop If Condition Is True;
                Else If(Compare(Value In Array((Event Player).extraPlayerVar, 1), ==, 1));
                    Modify Player Variable(Event Player, magazines, Subtract, 0.025);
                    Wait(0.25, Ignore Condition);
                    Loop If Condition Is True;
                End;
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(D.Va)));
            If(Is Button Held(Event Player, Button(Primary Fire)));
                If(Compare(Value In Array((Event Player).extraPlayerVar, 1), ==, False));
                    Modify Player Variable(Event Player, magazines, Subtract, 0.05);
                    Wait(0.15, Ignore Condition);
                    Loop If Condition Is True;
                Else If(Compare(Value In Array((Event Player).extraPlayerVar, 1), ==, 1));
                    Modify Player Variable(Event Player, magazines, Subtract, 0.025);
                    Wait(0.125, Ignore Condition);
                    Loop If Condition Is True;
                End;
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Reaper)));
            If(Is Using Ability 1(Event Player));
                Modify Player Variable(Event Player, magazines, Subtract, 0.5);
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Cassidy)));
            If(Is Using Ability 1(Event Player));
                Skip If(Compare(Ammo(Event Player, 0), ==, 6), 1);
                Modify Player Variable(Event Player, magazines, Subtract, 0.5);
                //lbl_0:
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Doomfist)));
            If(Is Button Held(Event Player, Button(Primary Fire)));
                If(Compare(Value In Array((Event Player).extraPlayerVar, 1), ==, False));
                    Modify Player Variable(Event Player, magazines, Subtract, 0.25);
                    Wait(0.25, Ignore Condition);
                    Loop If Condition Is True;
                End;
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Hanzo)));
            If(Is Button Held(Event Player, Button(Primary Fire)));
                If(Compare(Value In Array((Event Player).extraPlayerVar, 1), ==, False));
                    Modify Player Variable(Event Player, magazines, Subtract, 0.25);
                Else If(Compare(Value In Array((Event Player).extraPlayerVar, 1), ==, 1));
                    Modify Player Variable(Event Player, magazines, Subtract, 0.125);
                End;
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Sigma)));
            If(Is Button Held(Event Player, Button(Primary Fire)));
                If(Compare(Value In Array((Event Player).extraPlayerVar, 1), ==, False));
                    Modify Player Variable(Event Player, magazines, Subtract, 0.2);
                Else If(Compare(Value In Array((Event Player).extraPlayerVar, 1), ==, 1));
                    Modify Player Variable(Event Player, magazines, Subtract, 0.1);
                End;
            End;
        Else If(Compare(Hero Of(Event Player), ==, Hero(Reinhardt)));
            If(Is Using Ability 2(Event Player));
                If(Compare(Value In Array((Event Player).extraPlayerVar, 1), ==, False));
                    Modify Player Variable(Event Player, magazines, Subtract, 0.25);
                Else If(Compare(Value In Array((Event Player).extraPlayerVar, 1), ==, 1));
                    Modify Player Variable(Event Player, magazines, Subtract, 0.125);
    }
}

rule ("136  dva ammo double mag") {
    event {
        Ongoing - Each Player;
        Team 1;
        D.Va;
    }
    conditions {
        Value In Array((Event Player).extraPlayerVar, 1) == 1;
        Is Button Held(Event Player, Button(Primary Fire)) == True;
    }
    actions {
        Modify Player Variable(Event Player, currentmagazines, Subtract, 0.025);
        Wait(0.15, Ignore Condition);
        Loop If Condition Is True;
    }
}

rule ("jugg tier 2 and 3") {
    event {
        Player Took Damage;
        Team 1;
        All;
    }
    conditions {
        Value In Array((Event Player).extraPlayerVar, 10) > 1;
    }
    actions {
        If(Compare(Value In Array((Event Player).extraPlayerVar, 10), ==, 2));
            Wait(10, Restart When True);
            "need to make sure this doesnt stack infinitely"
            Add Health Pool To Player(Event Player, Health, 25, False, False);
        Else If(Compare(Value In Array((Event Player).extraPlayerVar, 10), ==, 3));
            Wait(10, Restart When True);
            Add Health Pool To Player(Event Player, Health, 50, False, False);
    }
}

disabled rule ("all the door effects loop (need to figure out how to manage which doors were bought and unload zones not currently in)") {
    event {
        Ongoing - Global;
    }
    conditions {
        Value In Array(Global.extraVar, 29) < 436;
    }
    actions {
        "needs to have 3 zones with the map."
        If(Compare(Value In Array(Global.impulseDoorArray, Value In Array(Global.extraVar, 28)), ==, False));
            "create effect starting at 0 - 1"
            Create Beam Effect(All Players(Team 1), Junkrat Trap Chain Beam, Value In Array(Global.Beameffectdoors, Evaluate Once(Value In Array(Global.extraVar, 29))), Value In Array(Global.Beameffectdoors, Evaluate Once(Add(1, Value In Array(Global.extraVar, 29)))), Color(Red), Visible To Position and Radius);
            Wait(0.016, Ignore Condition);
            Modify Global Variable At Index(doors, Value In Array(Global.extraVar, 28), Append To Array, Last Created Entity);
            Wait(0.016, Ignore Condition);
            Modify Global Variable At Index(extraVar, 29, Add, 2);
            Modify Global Variable At Index(extraVar, 28, Add, 1);
            Loop If Condition Is True;
        Else If(Compare(Value In Array(Global.impulseDoorArray, Value In Array(Global.extraVar, 28)), ==, 1));
            Wait(0.016, Ignore Condition);
            Modify Global Variable At Index(extraVar, 29, Add, 2);
            Modify Global Variable At Index(extraVar, 28, Add, 1);
            Loop If Condition Is True;
    }
}

rule ("all the effects (needs to be simplified and looped)") {
    event {
        Ongoing - Global;
    }
    actions {
        "@Condition start == 1\nset all these to be some form of loop"
        Create Effect(All Players(All Teams), Ring, Color(White), Value In Array(Global.Vectordoorpositions, Value In Array(Global.extraVar, 12)), 3, Visible To Position and Radius);
        For Global Variable(forindex, 0, Count Of(3), 1);
            Create Effect(All Players(All Teams), Good Aura, Global.teleportercolor, Value In Array(Global.Vectordoorpositions, Value In Array(Global.extraVar, 12)), Global.teleradiusef, Visible To Position Radius and Color);
            Create Effect(All Players(All Teams), Sparkles, Global.teleportercolor, Value In Array(Global.Vectordoorpositions, Value In Array(Global.extraVar, 12)), Global.teleradiusef, Visible To Position Radius and Color);
        End;
        "this can be created on the spot instead of always present"
        For Global Variable(forindex, 0, Count Of(4), 1);
            Create Effect(All Players(All Teams), Ring, Color(Red), Value In Array(Global.Died, Global.forindex), 4, Visible To Position and Radius);
            Create Effect(All Players(All Teams), Sphere, Color(White), Value In Array(Global.Died, Global.forindex), (Players In Slot(0, Team 1)).C, Visible To Position and Radius);
        End;
        For Global Variable(forindex, 0, Count Of(4), 1);
            Create In-World Text(All Players(All Teams), Custom String("__playerVar__"), Value In Array(Global.Died, Global.forindex), 3, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
        End;
        "mystery box"
        Create Effect(All Players(All Teams), Ring, Color(Purple), Global.rngbox, 2, Visible To Position and Radius);
        Create In-World Text(All Players(All Teams), Custom String("{0} Mystery box: 950 points", String("Buy")), Global.rngbox, 1, Clip Against Surfaces, Visible To Position and String, Color(Purple), Default Visibility);
        Create Effect(All Players(All Teams), Sparkles, Color(Yellow), Global.rngbox, 2, Visible To Position and Radius);
        Create Effect(All Players(All Teams), Sphere, Color(Purple), Global.rngbox, 0.75, Visible To Position and Radius);
        Create Effect(All Players(All Teams), Ring, Color(Turquoise), First Of(Global.perkbuyrandomized), 2, Visible To Position and Radius);
        Set Global Variable At Index(powerconnected, 0, Last Created Entity);
        Create Icon(All Living Players(Team 1), First Of(Global.perkbuyrandomized), Bolt, Visible To and Position, Color(Yellow), True);
        Set Global Variable At Index(powerconnected, 1, Last Text ID);
        Create Effect(All Players(All Teams), Ring, Color(Red), Value In Array(Global.perkbuyrandomized, 1), 1, Visible To Position and Radius);
        Create In-World Text(All Players(All Teams), Custom String("Juggernaut 100 {0}", String("{0}: {1}", Custom String(""), 2500)), Value In Array(Global.perkbuyrandomized, 1), 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
        Create Effect(All Players(All Teams), Ring, Color(Red), Value In Array(Global.perkbuyrandomized, 2), 1.5, Visible To Position and Radius);
        Create In-World Text(All Players(All Teams), Custom String("Pack-a-Punch 100 {0}", String("{0}: {1}", Custom String(""), 5000)), Value In Array(Global.perkbuyrandomized, 2), 1, Clip Against Surfaces, Visible To Position and String, Color(Red), Default Visibility);
        Create Effect(All Players(All Teams), Ring, Color(Blue), Value In Array(Global.perkbuyrandomized, 3), 1.5, Visible To Position and Radius);
        Create In-World Text(All Players(All Teams), Custom String("passive & healing dealt buff: 6000 points"), Value In Array(Global.perkbuyrandomized, 3), 1, Clip Against Surfaces, Visible To Position and String, Color(Blue), Default Visibility);
        Create Effect(All Players(All Teams), Ring, Color(Orange), Value In Array(Global.perkbuyrandomized, 4), 1.5, Visible To Position and Radius);
        Create In-World Text(All Players(All Teams), Custom String("Headshot maniac 50% to 400% {0}", String("{0}: {1}", Custom String(""), 4000)), Value In Array(Global.perkbuyrandomized, 4), 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
        Create Effect(All Players(All Teams), Ring, Color(Blue), Value In Array(Global.perkbuyrandomized, 5), 1.5, Visible To Position and Radius);
        Create In-World Text(All Players(All Teams), Custom String("Revive self (coop only): 4000 points"), Value In Array(Global.perkbuyrandomized, 5), 1, Clip Against Surfaces, Visible To Position and String, Color(Blue), Default Visibility);
        Create In-World Text(All Players(All Teams), Custom String("Double-mag {0}", Custom String("{0} {1}", Null, String("{0}: {1}", Custom String(""), 2000))), Value In Array(Global.perkbuyrandomized, 6), 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
        Create Effect(All Players(All Teams), Ring, Color(Blue), Value In Array(Global.perkbuyrandomized, 6), 1.5, Visible To Position and Radius);
        Create In-World Text(All Players(All Teams), Custom String("Sprint burst {0}", Custom String("{0} {1}", Null, String("{0}: {1}", Custom String(""), 2000))), Value In Array(Global.perkbuyrandomized, 7), 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
        Create Effect(All Players(All Teams), Ring, Color(Blue), Value In Array(Global.perkbuyrandomized, 9), 1.5, Visible To Position and Radius);
        Create In-World Text(All Players(All Teams), Custom String("Omnic bomb {0}", Custom String("{0} {1}", Null, String("{0}: {1}", Custom String(""), 2500))), Value In Array(Global.perkbuyrandomized, 9), 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
        "needs values correct for each hero"
        For Global Variable(forindex, 0, Count Of(24), 1);
            Create Effect(All Players(All Teams), Ring, Color(Purple), Value In Array(Global.herobuyrandomized, 4), 2, Visible To);
            Create In-World Text(All Players(All Teams), Custom String("Press {0} {1}", Input Binding String(Button(Interact)), String("{0}: {1}", Hero Icon String(Global.heroiconstring), 1000)), Value In Array(Global.herobuyrandomized, 4), 1, Clip Against Surfaces, Visible To Position and String, Color(Purple), Default Visibility);
        End;
        Create Effect(All Players(All Teams), Ring, Color(Purple), Vector(-83.799, -160.001, 64.224), 2, Visible To Position and Radius);
        Create In-World Text(All Players(All Teams), Custom String("Bastion Trap: press {0} {1}", Input Binding String(Button(Interact)), String("{0}: {1}", Hero Icon String(Hero(Bastion)), 1000)), Vector(-83.763, -158.95, 64.107), 1, Clip Against Surfaces, Visible To Position and String, Color(Purple), Default Visibility);
        Create Effect(All Players(All Teams), Ring, Color(Purple), Global.rngbox2, 2, Visible To Position and Radius);
        Create In-World Text(All Players(All Teams), Custom String("{0} Fairy mystery box: 950 points", String("Buy")), Global.rngbox2, 1, Clip Against Surfaces, Visible To Position and String, Color(Purple), Default Visibility);
        Create Effect(All Players(All Teams), Sparkles, Color(Yellow), Global.rngbox2, 1, Visible To Position and Radius);
        Create Effect(All Players(All Teams), Sphere, Color(Purple), Global.rngbox2, 0.25, Visible To Position and Radius);
        Create Effect(All Players(All Teams), Ring, Color(White), Vector(-101.303, -150.36, -17.831), 2, Visible To Position and Radius);
        Create In-World Text(All Players(All Teams), Custom String("The end : 50,000 points"), Vector(-101.303, -150.36, -17.831), 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
        Create Effect(All Players(All Teams), Ring, Color(White), First Of(Global.bossbuypositions), 1, Position and Radius);
        For Global Variable(forindex, 0, Count Of(3), 1);
            Create In-World Text(All Players(All Teams), Custom String("Spawn boss: {0} : 15000 points", Input Binding String(Button(Interact))), Value In Array(Global.bossbuypositions, Global.indexofbosseffect), 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Create Effect(All Players(All Teams), Ring, Color(White), Value In Array(Global.bossbuypositions, Global.indexofbosseffect), 1, Position and Radius);
        End;
    }
}

rule ("507 april first quotes") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Is Using Ultimate(Event Player) == True;
        Value In Array(Global.extraVar, 22) == 100;
    }
    actions {
        "might be an easier way to set this up"
        If(Compare(Hero Of(Event Player), ==, Hero(D.Va)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(0, 2)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Doomfist)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(3, 4)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Junker Queen)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(5, 6)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Ana)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(7, 8)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Orisa)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(9, 10)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Ramattra)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(11, 13)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Reinhardt)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(14, 15)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Roadhog)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(16, 18)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Sigma)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(19, 20)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Winston)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(21, 21)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Wrecking Ball)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(22, 23)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Zarya)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(24, 26)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Ashe)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(27, 28)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Bastion)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(29, 31)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Cassidy)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(32, 37)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Echo)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(38, 38)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Genji)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(39, 40)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Hanzo)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(41, 43)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Junkrat)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(44, 45)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Mei)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(46, 47)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Pharah)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(48, 51)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Reaper)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(52, 53)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Sojourn)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(54, 55)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Soldier: 76)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(56, 58)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Sombra)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(59, 61)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Symmetra)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(62, 64)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Torbjörn)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(65, 66)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Tracer)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(67, 68)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Widowmaker)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(69, 71)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Baptiste)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(72, 75)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Brigitte)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(76, 77)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Kiriko)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(78, 79)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Lúcio)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(80, 81)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Mercy)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(82, 84)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Moira)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(85, 87)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Zenyatta)));
            Create In-World Text(All Players(All Teams), Index Of Array Value(Global.aprilquotes, Random Integer(88, 90)), Event Player, 1, Clip Against Surfaces, Visible To Position and String, Color(White), Default Visibility);
            Wait(5, Ignore Condition);
            Destroy In-World Text(Last Text ID);
    }
}

rule ("508 april quotes strings") {
    event {
        Ongoing - Global;
    }
    actions {
        Set Global Variable At Index(aprilquotes, 0, Custom String("Peep this POTG"));
        Set Global Variable At Index(aprilquotes, 1, Custom String("Pressing Q!"));
        Set Global Variable At Index(aprilquotes, 2, Custom String("Sorry, Dae-hyun!"));
        Set Global Variable At Index(aprilquotes, 3, Custom String("You can’t get me!"));
        Set Global Variable At Index(aprilquotes, 4, Custom String("Wheeeeeee!"));
        Set Global Variable At Index(aprilquotes, 5, Custom String("Cut cut cut cut cut cut cut!"));
        Set Global Variable At Index(aprilquotes, 6, Custom String("Everybody, look at my axe!"));
        Set Global Variable At Index(aprilquotes, 7, Custom String("Go get them, tiger."));
        Set Global Variable At Index(aprilquotes, 8, Custom String("Hope this helps!"));
        Set Global Variable At Index(aprilquotes, 9, Custom String("Check yourself or wreck yourself!"));
        Set Global Variable At Index(aprilquotes, 10, Custom String("Yee-haw rodeo!"));
        Set Global Variable At Index(aprilquotes, 11, Custom String("Agony is grape-flavoured!"));
        Set Global Variable At Index(aprilquotes, 12, Custom String("You will suffer as I, Ramattra have suffered! Your torment will outlast the stars…"));
        Set Global Variable At Index(aprilquotes, 13, Custom String("Who wants a purple hug?"));
        Set Global Variable At Index(aprilquotes, 14, Custom String("Have a seat!"));
        Set Global Variable At Index(aprilquotes, 15, Custom String("Here comes the bonk!"));
        Set Global Variable At Index(aprilquotes, 16, Custom String("You get scrap. You get scrap."));
        Set Global Variable At Index(aprilquotes, 17, Custom String("Everybody gets scrap!"));
        Set Global Variable At Index(aprilquotes, 18, Custom String("This little piggy will run you over."));
        Set Global Variable At Index(aprilquotes, 19, Custom String(" The universe sings to me!"));
        Set Global Variable At Index(aprilquotes, 20, Custom String("What are those?"));
        Set Global Variable At Index(aprilquotes, 21, Custom String("Winston!"));
        Set Global Variable At Index(aprilquotes, 22, Custom String("Collect the little balls to win a prize."));
        Set Global Variable At Index(aprilquotes, 23, Custom String(" Behold the children of Wrecking Ball."));
        Set Global Variable At Index(aprilquotes, 24, Custom String("Group hug!"));
        Set Global Variable At Index(aprilquotes, 25, Custom String("Not a supernova – a Zaryanova."));
        Set Global Variable At Index(aprilquotes, 26, Custom String("Crush Crush Crush."));
        Set Global Variable At Index(aprilquotes, 27, Custom String("Fred! I mean Bob! Do something!"));
        Set Global Variable At Index(aprilquotes, 28, Custom String("Get in there, Fred! I mean Bob!"));
        Set Global Variable At Index(aprilquotes, 29, Custom String("(fog horn beeps)"));
        Set Global Variable At Index(aprilquotes, 30, Custom String("(air horn beeps)"));
        Set Global Variable At Index(aprilquotes, 31, Custom String("(musical beeps)"));
        Set Global Variable At Index(aprilquotes, 32, Custom String("It’s two in the mornin’"));
        Set Global Variable At Index(aprilquotes, 33, Custom String("It’s past your bedtime."));
        Set Global Variable At Index(aprilquotes, 34, Custom String("It’s half past six."));
        Set Global Variable At Index(aprilquotes, 35, Custom String("It’s 3:24."));
        Set Global Variable At Index(aprilquotes, 36, Custom String("It’s 4:57."));
        Set Global Variable At Index(aprilquotes, 37, Custom String("It’s a country minute shy of the devil’s lunchbreak."));
        Set Global Variable At Index(aprilquotes, 38, Custom String("I’m better than you at…"));
        Set Global Variable At Index(aprilquotes, 39, Custom String("(Sword noises)"));
        Set Global Variable At Index(aprilquotes, 40, Custom String("Tatakae!"));
        Set Global Variable At Index(aprilquotes, 41, Custom String("Sic ‘em, boys!"));
        Set Global Variable At Index(aprilquotes, 42, Custom String("Nomnomnomnomnomnom!"));
        Set Global Variable At Index(aprilquotes, 43, Custom String("Who’s a good dragon? Who’s a good dragon?"));
        Set Global Variable At Index(aprilquotes, 44, Custom String("Everyone stand very still!"));
        Set Global Variable At Index(aprilquotes, 45, Custom String("Who’s using a tire? Not me! heheh Don’t worry!"));
        Set Global Variable At Index(aprilquotes, 46, Custom String("(Sigh) I’m turning on the AC!"));
        Set Global Variable At Index(aprilquotes, 47, Custom String("Activating ceiling fan!"));
        Set Global Variable At Index(aprilquotes, 48, Custom String("Justice rains from the ground!"));
        Set Global Variable At Index(aprilquotes, 49, Custom String("Try and shoot me! You won’t!"));
        Set Global Variable At Index(aprilquotes, 50, Custom String("Rain justices form above!"));
        Set Global Variable At Index(aprilquotes, 51, Custom String("Hope you like rockets!"));
        Set Global Variable At Index(aprilquotes, 52, Custom String("Happy, happy birthday…"));
        Set Global Variable At Index(aprilquotes, 53, Custom String("WheeEEeeeeEEEeeeeEEEeeee…"));
        Set Global Variable At Index(aprilquotes, 54, Custom String("Bye-bye, bad guys!"));
        Set Global Variable At Index(aprilquotes, 55, Custom String("That starts then! (Pause) What?"));
        Set Global Variable At Index(aprilquotes, 56, Custom String("Who took my dentures?"));
        Set Global Variable At Index(aprilquotes, 57, Custom String("Turn that damn music down!"));
        Set Global Variable At Index(aprilquotes, 58, Custom String("War is a game, and I’m using cheats!"));
        Set Global Variable At Index(aprilquotes, 59, Custom String("Get DDOSed!"));
        Set Global Variable At Index(aprilquotes, 60, Custom String("Propaganda is useless!"));
        Set Global Variable At Index(aprilquotes, 61, Custom String("I’m in!"));
        Set Global Variable At Index(aprilquotes, 62, Custom String("I am blocking you!"));
        Set Global Variable At Index(aprilquotes, 63, Custom String("Superior to RGB!"));
        Set Global Variable At Index(aprilquotes, 64, Custom String("This wall is incredibly lit!"));
        Set Global Variable At Index(aprilquotes, 65, Custom String("Ahem. La-va!"));
        Set Global Variable At Index(aprilquotes, 66, Custom String("The floor is lava."));
        Set Global Variable At Index(aprilquotes, 67, Custom String("Wuh wuh wuh whoa!"));
        Set Global Variable At Index(aprilquotes, 68, Custom String("Tag, you’re it!"));
        Set Global Variable At Index(aprilquotes, 69, Custom String("Hello! I can see you!"));
        Set Global Variable At Index(aprilquotes, 70, Custom String("Wallhacks initialized."));
        Set Global Variable At Index(aprilquotes, 71, Custom String("I’m making popcorn."));
        Set Global Variable At Index(aprilquotes, 72, Custom String("This won’t hurt. Too much."));
        Set Global Variable At Index(aprilquotes, 73, Custom String("Say cheese!"));
        Set Global Variable At Index(aprilquotes, 74, Custom String("Everybody shoot through the box! Through the box!"));
        Set Global Variable At Index(aprilquotes, 75, Custom String("Shoot through the big glowy thing."));
        Set Global Variable At Index(aprilquotes, 76, Custom String("Face my mace. Mace to the face!"));
        Set Global Variable At Index(aprilquotes, 77, Custom String("Mace to the mace to the mace to the mace to the face!"));
        Set Global Variable At Index(aprilquotes, 78, Custom String("Believe it!"));
        Set Global Variable At Index(aprilquotes, 79, Custom String("Just aim for the head!"));
        Set Global Variable At Index(aprilquotes, 80, Custom String("Let’s get a noise violation!"));
        Set Global Variable At Index(aprilquotes, 81, Custom String("Who wants a billion hit points?"));
        Set Global Variable At Index(aprilquotes, 82, Custom String("Moth formation, go!"));
        Set Global Variable At Index(aprilquotes, 83, Custom String("Time to connect the dots!"));
        Set Global Variable At Index(aprilquotes, 84, Custom String("Do I have to?"));
        Set Global Variable At Index(aprilquotes, 85, Custom String("Kamehameha!"));
        Set Global Variable At Index(aprilquotes, 86, Custom String("Here’s the craic!"));
        Set Global Variable At Index(aprilquotes, 87, Custom String("I’ll show you meta!"));
        Set Global Variable At Index(aprilquotes, 88, Custom String("Deal with it."));
        Set Global Variable At Index(aprilquotes, 89, Custom String("You’re invincible. Now… shoot them!"));
        Set Global Variable At Index(aprilquotes, 90, Custom String("Become unkillable. Some conditions may apply"));
    }
}

rule ("509 bot name singleplayer") {
    event {
        Ongoing - Global;
    }
    conditions {
        Number Of Players(Team 1) == 1;
        First Of(Global.extraVar) > 0;
        Value In Array(Global.extraVar, 22) == 50;
    }
    actions {
        Start Forcing Dummy Bot Name(Players In Slot(0, Team 2), Custom String("01000111 01100101"));
        Start Forcing Dummy Bot Name(Players In Slot(1, Team 2), Custom String("01110100 00100000"));
        Start Forcing Dummy Bot Name(Players In Slot(2, Team 2), Custom String("01101111 01110101"));
        Start Forcing Dummy Bot Name(Players In Slot(3, Team 2), Custom String("01110100 00100000"));
        Start Forcing Dummy Bot Name(Players In Slot(4, Team 2), Custom String("01101111 01100110"));
        Start Forcing Dummy Bot Name(Players In Slot(5, Team 2), Custom String("00100000 01101000"));
        Start Forcing Dummy Bot Name(Players In Slot(6, Team 2), Custom String("01100101 01110010"));
        Start Forcing Dummy Bot Name(Players In Slot(7, Team 2), Custom String("01100101 00101110"));
    }
}

rule ("510 bot name coop") {
    event {
        Ongoing - Global;
    }
    conditions {
        Number Of Players(Team 1) > 1;
        Value In Array(Global.extraVar, 22) == 50;
        First Of(Global.extraVar) > 0;
    }
    actions {
        Start Forcing Dummy Bot Name(Players In Slot(0, Team 2), Custom String("77 6F 72 6B 69"));
        Start Forcing Dummy Bot Name(Players In Slot(1, Team 2), Custom String("6E 67 20 74 6F"));
        Start Forcing Dummy Bot Name(Players In Slot(2, Team 2), Custom String("67 65 74 68 65"));
        Start Forcing Dummy Bot Name(Players In Slot(3, Team 2), Custom String("72 20 69 73"));
        Start Forcing Dummy Bot Name(Players In Slot(4, Team 2), Custom String("20 66 75 74"));
        Start Forcing Dummy Bot Name(Players In Slot(5, Team 2), Custom String("69 6C 65 21"));
    }
}

rule ("glitch in the system") {
    event {
        Ongoing - Global;
    }
    conditions {
        First Of(Global.extraVar) < 10;
    }
    actions {
        Wait(Random Integer(120, 600), Abort When False);
        Modify Global Variable At Index(extraVar, 27, Add, 12);
        Wait(0.1, Ignore Condition);
        Modify Global Variable At Index(extraVar, 27, Subtract, 12);
        Wait(0.1, Ignore Condition);
        Modify Global Variable At Index(extraVar, 27, Add, 12);
        Wait(0.1, Ignore Condition);
        Modify Global Variable At Index(extraVar, 27, Subtract, 12);
        Wait(0.1, Ignore Condition);
        Loop If Condition Is True;
    }
}

rule ("starting voice lines (needs new text system for more enjoyable readability)") {
    event {
        Ongoing - Global;
    }
    conditions {
        Value In Array(Global.extraVar, 3) == 1;
    }
    actions {
        "can be optmizied to not use as many if statements and use only 1 small message action"
        Wait(6, Ignore Condition);
        If(Compare(Value In Array(Global.extraVar, 6), ==, False));
            Create HUD Text(All Players(Team 1), Hero Icon String(Hero(Ramattra)), Null, Custom String(" Trial {0}. The path to a new world begins.", Random Integer(1, 9999)), Top, 2, Color(White), Color(White), Color(Orange), Visible To and String, Default Visibility);
            Wait(10, Ignore Condition);
            Destroy HUD Text(Last Text ID);
    }
}

